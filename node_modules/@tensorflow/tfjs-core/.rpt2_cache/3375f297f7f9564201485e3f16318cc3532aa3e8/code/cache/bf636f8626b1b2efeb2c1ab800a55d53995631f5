{"code":"import { getCoordsDataType } from './shader_compiler';\r\nvar TransposeProgram = (function () {\r\n    function TransposeProgram(aShape, newDim) {\r\n        this.variableNames = ['A'];\r\n        var outputShape = new Array(aShape.length);\r\n        for (var i = 0; i < outputShape.length; i++) {\r\n            outputShape[i] = aShape[newDim[i]];\r\n        }\r\n        this.outputShape = outputShape;\r\n        this.rank = outputShape.length;\r\n        var dtype = getCoordsDataType(this.rank);\r\n        var switched = getSwitchedCoords(newDim);\r\n        this.userCode = \"\\n    void main() {\\n      \" + dtype + \" resRC = getOutputCoords();\\n      setOutput(getA(\" + switched + \"));\\n    }\\n    \";\r\n    }\r\n    return TransposeProgram;\r\n}());\r\nexport { TransposeProgram };\r\nfunction getSwitchedCoords(newDim) {\r\n    var rank = newDim.length;\r\n    if (rank > 4) {\r\n        throw Error(\"Transpose for rank \" + rank + \" is not yet supported\");\r\n    }\r\n    var originalOrder = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\r\n    var switchedCoords = new Array(rank);\r\n    for (var i = 0; i < newDim.length; i++) {\r\n        switchedCoords[newDim[i]] = originalOrder[i];\r\n    }\r\n    return switchedCoords.join();\r\n}\r\n//# sourceMappingURL=transpose_gpu.js.map","map":"{\"version\":3,\"file\":\"transpose_gpu.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/kernels/webgl/transpose_gpu.ts\"],\"names\":[],\"mappings\":\"AAkBA,OAAO,EAAC,iBAAiB,EAAC,MAAM,mBAAmB,CAAC;AAEpD;IAME,0BAAY,MAAgB,EAAE,MAAgB;QAL9C,kBAAa,GAAG,CAAC,GAAG,CAAC,CAAC;QAMpB,IAAM,WAAW,GAAa,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACvD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC5C,WAAW,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QACrC,CAAC;QACD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,MAAM,CAAC;QAC/B,IAAM,KAAK,GAAG,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAM,QAAQ,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAE3C,IAAI,CAAC,QAAQ,GAAG,gCAEZ,KAAK,0DACU,QAAQ,qBAE1B,CAAC;IACJ,CAAC;IACH,uBAAC;AAAD,CAAC,AAvBD,IAuBC;;AAED,2BAA2B,MAAgB;IACzC,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC;IAC3B,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;QACb,MAAM,KAAK,CAAC,wBAAsB,IAAI,0BAAuB,CAAC,CAAC;IACjE,CAAC;IACD,IAAM,aAAa,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;IACnE,IAAM,cAAc,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;IACvC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACvC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC;IACD,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;AAC/B,CAAC\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/kernels/webgl/transpose_gpu.d.ts","text":"import { GPGPUProgram } from './gpgpu_math';\r\nexport declare class TransposeProgram implements GPGPUProgram {\r\n    variableNames: string[];\r\n    outputShape: number[];\r\n    userCode: string;\r\n    rank: number;\r\n    constructor(aShape: number[], newDim: number[]);\r\n}\r\n"}}

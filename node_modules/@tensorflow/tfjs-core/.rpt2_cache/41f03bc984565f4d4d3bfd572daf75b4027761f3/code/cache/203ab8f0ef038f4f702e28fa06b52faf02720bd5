{"code":"import * as tslib_1 from \"tslib\";\r\nimport { doc } from '../doc';\r\nimport { ENV } from '../environment';\r\nimport { customGrad } from '../globals';\r\nimport * as util from '../util';\r\nimport * as axis_util from './axis_util';\r\nimport { operation } from './operation';\r\nimport * as ops from './ops';\r\nvar ReductionOps = (function () {\r\n    function ReductionOps() {\r\n    }\r\n    ReductionOps.logSumExp = function (x, axis, keepDims) {\r\n        if (axis === void 0) { axis = null; }\r\n        if (keepDims === void 0) { keepDims = false; }\r\n        util.assertArgumentsAreTensors({ x: x }, 'logSumExp');\r\n        var axes = axis_util.parseAxisParam(axis, x.shape);\r\n        var xMax = x.max(axes, true);\r\n        var a = x.sub(xMax);\r\n        var b = a.exp();\r\n        var c = b.sum(axes);\r\n        var d = c.log();\r\n        var res = xMax.reshape(d.shape).add(d);\r\n        if (keepDims) {\r\n            var newShape = axis_util.expandShapeToKeepDim(res.shape, axes);\r\n            return res.reshape(newShape);\r\n        }\r\n        return res;\r\n    };\r\n    ReductionOps.sum = function (x, axis, keepDims) {\r\n        if (axis === void 0) { axis = null; }\r\n        if (keepDims === void 0) { keepDims = false; }\r\n        util.assertArgumentsAreTensors({ x: x }, 'sum');\r\n        if (x.dtype === 'bool') {\r\n            x = x.toInt();\r\n        }\r\n        var axes = axis_util.parseAxisParam(axis, x.shape);\r\n        var customOp = customGrad(function (x) {\r\n            var permutation = axis_util.getAxesPermutation(axes, x.rank);\r\n            var reductionAxes = axes;\r\n            var permutedX = x;\r\n            if (permutation != null) {\r\n                permutedX = x.transpose(permutation);\r\n                reductionAxes =\r\n                    axis_util.getInnerMostAxes(reductionAxes.length, x.rank);\r\n            }\r\n            var value = ENV.engine.runKernel(function (backend) { return backend.sum(permutedX, reductionAxes); }, { permutedX: permutedX });\r\n            if (keepDims) {\r\n                var newShape = axis_util.expandShapeToKeepDim(value.shape, axes);\r\n                value = value.reshape(newShape);\r\n            }\r\n            var gradFunc = function (dy) {\r\n                var expandedDyShape = x.shape.slice();\r\n                axes.forEach(function (axis) {\r\n                    expandedDyShape[axis] = 1;\r\n                });\r\n                var expandedDy = dy.reshape(expandedDyShape);\r\n                var derX = expandedDy.mul(ops.ones(x.shape, 'float32'));\r\n                return derX;\r\n            };\r\n            return { value: value, gradFunc: gradFunc };\r\n        });\r\n        return customOp(x);\r\n    };\r\n    ReductionOps.mean = function (x, axis, keepDims) {\r\n        if (axis === void 0) { axis = null; }\r\n        if (keepDims === void 0) { keepDims = false; }\r\n        util.assertArgumentsAreTensors({ x: x }, 'mean');\r\n        var axes = axis_util.parseAxisParam(axis, x.shape);\r\n        var shapes = axis_util.computeOutAndReduceShapes(x.shape, axes);\r\n        var reduceShape = shapes[1];\r\n        var reduceSize = util.sizeFromShape(reduceShape);\r\n        var customOp = customGrad(function (x) {\r\n            var reduceSizeScalar = ops.scalar(reduceSize);\r\n            var xReduce = reduceSizeScalar.dtype === x.dtype ?\r\n                x :\r\n                x.cast(reduceSizeScalar.dtype);\r\n            var res = xReduce.div(reduceSizeScalar);\r\n            var value = res.sum(axis, keepDims);\r\n            var gradFunc = function (dy) {\r\n                var expandedDyShape = x.shape.slice();\r\n                axes.forEach(function (axis) {\r\n                    expandedDyShape[axis] = 1;\r\n                });\r\n                var expandedDy = dy.reshape(expandedDyShape);\r\n                var derX = expandedDy.mul(ops.ones(x.shape, 'float32')).div(reduceSizeScalar);\r\n                return derX;\r\n            };\r\n            return { value: value, gradFunc: gradFunc };\r\n        });\r\n        return customOp(x);\r\n    };\r\n    ReductionOps.min = function (x, axis, keepDims) {\r\n        if (axis === void 0) { axis = null; }\r\n        if (keepDims === void 0) { keepDims = false; }\r\n        util.assertArgumentsAreTensors({ x: x }, 'min');\r\n        var origAxes = axis_util.parseAxisParam(axis, x.shape);\r\n        var axes = origAxes;\r\n        var permutedAxes = axis_util.getAxesPermutation(axes, x.rank);\r\n        if (permutedAxes != null) {\r\n            x = x.transpose(permutedAxes);\r\n            axes = axis_util.getInnerMostAxes(axes.length, x.rank);\r\n        }\r\n        var res = ENV.engine.runKernel(function (backend) { return backend.min(x, axes); }, { x: x });\r\n        if (keepDims) {\r\n            var newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\r\n            return res.reshape(newShape);\r\n        }\r\n        return res;\r\n    };\r\n    ReductionOps.max = function (x, axis, keepDims) {\r\n        if (axis === void 0) { axis = null; }\r\n        if (keepDims === void 0) { keepDims = false; }\r\n        util.assertArgumentsAreTensors({ x: x }, 'max');\r\n        var origAxes = axis_util.parseAxisParam(axis, x.shape);\r\n        var axes = origAxes;\r\n        var permutedAxes = axis_util.getAxesPermutation(axes, x.rank);\r\n        if (permutedAxes != null) {\r\n            x = x.transpose(permutedAxes);\r\n            axes = axis_util.getInnerMostAxes(axes.length, x.rank);\r\n        }\r\n        var res = ENV.engine.runKernel(function (backend) { return backend.max(x, axes); }, { x: x });\r\n        if (keepDims) {\r\n            var newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\r\n            return res.reshape(newShape);\r\n        }\r\n        return res;\r\n    };\r\n    ReductionOps.argMin = function (x, axis) {\r\n        if (axis === void 0) { axis = 0; }\r\n        util.assertArgumentsAreTensors({ x: x }, 'argMin');\r\n        if (axis == null) {\r\n            axis = 0;\r\n        }\r\n        var axes = axis_util.parseAxisParam(axis, x.shape);\r\n        var permutedAxes = axis_util.getAxesPermutation(axes, x.rank);\r\n        if (permutedAxes != null) {\r\n            x = x.transpose(permutedAxes);\r\n            axes = axis_util.getInnerMostAxes(axes.length, x.rank);\r\n        }\r\n        return ENV.engine.runKernel(function (backend) { return backend.argMin(x, axes[0]); }, { x: x });\r\n    };\r\n    ReductionOps.argMax = function (x, axis) {\r\n        if (axis === void 0) { axis = 0; }\r\n        util.assertArgumentsAreTensors({ x: x }, 'argMax');\r\n        if (axis == null) {\r\n            axis = 0;\r\n        }\r\n        var axes = axis_util.parseAxisParam(axis, x.shape);\r\n        var permutedAxes = axis_util.getAxesPermutation(axes, x.rank);\r\n        if (permutedAxes != null) {\r\n            x = x.transpose(permutedAxes);\r\n            axes = axis_util.getInnerMostAxes(axes.length, x.rank);\r\n        }\r\n        return ENV.engine.runKernel(function (backend) { return backend.argMax(x, axes[0]); }, { x: x });\r\n    };\r\n    ReductionOps.moments = function (x, axis, keepDims) {\r\n        if (axis === void 0) { axis = null; }\r\n        if (keepDims === void 0) { keepDims = false; }\r\n        util.assertArgumentsAreTensors({ x: x }, 'moments');\r\n        var axes = axis_util.parseAxisParam(axis, x.shape);\r\n        var mean = x.mean(axes, keepDims);\r\n        var keepDimsShape = mean.shape;\r\n        if (!keepDims) {\r\n            keepDimsShape = axis_util.expandShapeToKeepDim(mean.shape, axes);\r\n        }\r\n        var devSquared = x.toFloat().sub(mean.reshape(keepDimsShape)).square();\r\n        var variance = devSquared.mean(axes, keepDims);\r\n        return { mean: mean, variance: variance };\r\n    };\r\n    ReductionOps.unsortedSegmentSum = function (x, segmentIds, numSegments, axis) {\r\n        if (axis === void 0) { axis = 0; }\r\n        util.assertArgumentsAreTensors({ x: x, segmentIds: segmentIds }, 'unsortedSegmentSum');\r\n        util.assert(segmentIds.dtype === 'int32', 'Segment Ids must be of dtype `int32`');\r\n        axis = axis_util.parseAxisParam(axis, x.shape)[0];\r\n        var res = [];\r\n        var dim = segmentIds.shape[0];\r\n        var newShape = [];\r\n        for (var i = 0; i < x.shape.length; i++) {\r\n            if (i === axis) {\r\n                newShape.push(dim);\r\n            }\r\n            else {\r\n                newShape.push(1);\r\n            }\r\n        }\r\n        var reshapedSegmentIds = ops.reshape(segmentIds, newShape);\r\n        for (var i = 0; i < numSegments; i++) {\r\n            var segmentId = ops.scalar(i, 'int32');\r\n            var mask = ops.equal(segmentId, reshapedSegmentIds).asType('float32');\r\n            var sum = mask.mul(x).sum(axis);\r\n            res.push(sum);\r\n        }\r\n        return ops.stack(res, axis);\r\n    };\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Reduction' }),\r\n        operation\r\n    ], ReductionOps, \"logSumExp\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Reduction' }),\r\n        operation\r\n    ], ReductionOps, \"sum\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Reduction' }),\r\n        operation\r\n    ], ReductionOps, \"mean\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Reduction' }),\r\n        operation\r\n    ], ReductionOps, \"min\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Reduction' }),\r\n        operation\r\n    ], ReductionOps, \"max\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Reduction' }),\r\n        operation\r\n    ], ReductionOps, \"argMin\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Reduction' }),\r\n        operation\r\n    ], ReductionOps, \"argMax\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Normalization' }),\r\n        operation\r\n    ], ReductionOps, \"moments\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Reduction' }),\r\n        operation\r\n    ], ReductionOps, \"unsortedSegmentSum\", null);\r\n    return ReductionOps;\r\n}());\r\nexport { ReductionOps };\r\n//# sourceMappingURL=reduction_ops.js.map","map":"{\"version\":3,\"file\":\"reduction_ops.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/ops/reduction_ops.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/ops/reduction_ops.d.ts","text":"import { Tensor, Tensor1D } from '../tensor';\r\nexport declare class ReductionOps {\r\n    static logSumExp<T extends Tensor>(x: Tensor, axis?: number | number[], keepDims?: boolean): T;\r\n    static sum<T extends Tensor>(x: Tensor, axis?: number | number[], keepDims?: boolean): T;\r\n    static mean<T extends Tensor>(x: Tensor, axis?: number | number[], keepDims?: boolean): T;\r\n    static min<T extends Tensor>(x: Tensor, axis?: number | number[], keepDims?: boolean): T;\r\n    static max<T extends Tensor>(x: Tensor, axis?: number | number[], keepDims?: boolean): T;\r\n    static argMin<T extends Tensor>(x: Tensor, axis?: number): T;\r\n    static argMax<T extends Tensor>(x: Tensor, axis?: number): T;\r\n    static moments(x: Tensor, axis?: number | number[], keepDims?: boolean): {\r\n        mean: Tensor;\r\n        variance: Tensor;\r\n    };\r\n    static unsortedSegmentSum<T extends Tensor>(x: T, segmentIds: Tensor1D, numSegments: number, axis?: number): T;\r\n}\r\n"}}

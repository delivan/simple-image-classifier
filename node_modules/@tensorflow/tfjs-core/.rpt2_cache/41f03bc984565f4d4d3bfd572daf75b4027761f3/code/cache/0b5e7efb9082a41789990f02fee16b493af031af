{"code":"import * as tslib_1 from \"tslib\";\r\nimport { doc } from '../doc';\r\nimport { ENV } from '../environment';\r\nimport * as util from '../util';\r\nimport * as axis_util from './axis_util';\r\nimport { operation } from './operation';\r\nvar TransposeOps = (function () {\r\n    function TransposeOps() {\r\n    }\r\n    TransposeOps.transpose = function (x, perm) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'transpose');\r\n        if (perm == null) {\r\n            perm = x.shape.map(function (s, i) { return i; }).reverse();\r\n        }\r\n        util.assert(x.rank === perm.length, \"Error in transpose: rank of input \" + x.rank + \" \" +\r\n            (\"must match length of perm \" + perm + \".\"));\r\n        perm.forEach(function (axis) {\r\n            util.assert(axis >= 0 && axis < x.rank, \"All entries in 'perm' must be between 0 and \" + (x.rank - 1) +\r\n                (\" but got \" + perm));\r\n        });\r\n        if (x.rank <= 1) {\r\n            return x.clone();\r\n        }\r\n        var der = function (dy) {\r\n            var undoPerm = axis_util.getUndoAxesPermutation(perm);\r\n            return { x: function () { return dy.transpose(undoPerm); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.transpose(x, perm); }, { x: x }, der);\r\n    };\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Matrices' }),\r\n        operation\r\n    ], TransposeOps, \"transpose\", null);\r\n    return TransposeOps;\r\n}());\r\nexport { TransposeOps };\r\n//# sourceMappingURL=transpose.js.map","map":"{\"version\":3,\"file\":\"transpose.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/ops/transpose.ts\"],\"names\":[],\"mappings\":\";AAiBA,OAAO,EAAC,GAAG,EAAC,MAAM,QAAQ,CAAC;AAC3B,OAAO,EAAC,GAAG,EAAC,MAAM,gBAAgB,CAAC;AAEnC,OAAO,KAAK,IAAI,MAAM,SAAS,CAAC;AAChC,OAAO,KAAK,SAAS,MAAM,aAAa,CAAC;AACzC,OAAO,EAAC,SAAS,EAAC,MAAM,aAAa,CAAC;AAEtC;IAAA;IAgDA,CAAC;IA5BQ,sBAAS,GAAhB,UAAmC,CAAI,EAAE,IAAe;QACtD,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,WAAW,CAAC,CAAC;QAEjD,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YACjB,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,EAAD,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QAC5C,CAAC;QACD,IAAI,CAAC,MAAM,CACP,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,MAAM,EACtB,uCAAqC,CAAC,CAAC,IAAI,MAAG;aAC1C,+BAA6B,IAAI,MAAG,CAAA,CAAC,CAAC;QAC9C,IAAI,CAAC,OAAO,CAAC,UAAA,IAAI;YACf,IAAI,CAAC,MAAM,CACP,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,EAC1B,kDAA+C,CAAC,CAAC,IAAI,GAAG,CAAC,CAAE;iBACvD,cAAY,IAAM,CAAA,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;QACnB,CAAC;QAED,IAAM,GAAG,GAAG,UAAC,EAAK;YAChB,IAAM,QAAQ,GAAG,SAAS,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;YACxD,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAtB,CAAsB,EAAC,CAAC;QAC3C,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CACvB,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,EAA1B,CAA0B,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,GAAG,CAAC,CAAC;IACvD,CAAC;IA3BD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,UAAU,EAAC,CAAC;QACpD,SAAS;uCA4BT;IACH,mBAAC;CAAA,AAhDD,IAgDC;SAhDY,YAAY\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/ops/transpose.d.ts","text":"import { Tensor } from '../tensor';\r\nexport declare class TransposeOps {\r\n    static transpose<T extends Tensor>(x: T, perm?: number[]): T;\r\n}\r\n"}}

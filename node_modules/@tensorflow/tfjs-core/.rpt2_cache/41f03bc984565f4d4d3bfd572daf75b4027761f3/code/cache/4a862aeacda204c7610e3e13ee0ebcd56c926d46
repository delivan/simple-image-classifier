{"code":"import * as tslib_1 from \"tslib\";\r\nimport { ENV } from '../environment';\r\nimport { basename, concatenateArrayBuffers, getModelArtifactsInfoForKerasJSON } from './io_utils';\r\nimport { IORouterRegistry } from './router_registry';\r\nvar DEFAULT_FILE_NAME_PREFIX = 'model';\r\nvar DEFAULT_JSON_EXTENSION_NAME = '.json';\r\nvar DEFAULT_WEIGHT_DATA_EXTENSION_NAME = '.weights.bin';\r\nvar BrowserDownloads = (function () {\r\n    function BrowserDownloads(fileNamePrefix) {\r\n        if (!ENV.get('IS_BROWSER')) {\r\n            throw new Error('triggerDownloads() cannot proceed because the current environment ' +\r\n                'is not a browser.');\r\n        }\r\n        if (fileNamePrefix.startsWith(BrowserDownloads.URL_SCHEME)) {\r\n            fileNamePrefix = fileNamePrefix.slice(BrowserDownloads.URL_SCHEME.length);\r\n        }\r\n        if (fileNamePrefix == null || fileNamePrefix.length === 0) {\r\n            fileNamePrefix = DEFAULT_FILE_NAME_PREFIX;\r\n        }\r\n        this.modelTopologyFileName = fileNamePrefix + DEFAULT_JSON_EXTENSION_NAME;\r\n        this.weightDataFileName =\r\n            fileNamePrefix + DEFAULT_WEIGHT_DATA_EXTENSION_NAME;\r\n    }\r\n    BrowserDownloads.prototype.save = function (modelArtifacts) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var weightsURL, weightsManifest, modelTopologyAndWeightManifest, modelTopologyAndWeightManifestURL, jsonAnchor, weightDataAnchor;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                weightsURL = window.URL.createObjectURL(new Blob([modelArtifacts.weightData], { type: 'application/octet-stream' }));\r\n                if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\r\n                    throw new Error('DownloadTrigger.save() does not support saving model topology ' +\r\n                        'in binary formats yet.');\r\n                }\r\n                else {\r\n                    weightsManifest = [{\r\n                            paths: ['./' + this.weightDataFileName],\r\n                            weights: modelArtifacts.weightSpecs\r\n                        }];\r\n                    modelTopologyAndWeightManifest = {\r\n                        modelTopology: modelArtifacts.modelTopology,\r\n                        weightsManifest: weightsManifest\r\n                    };\r\n                    modelTopologyAndWeightManifestURL = window.URL.createObjectURL(new Blob([JSON.stringify(modelTopologyAndWeightManifest)], { type: 'application/json' }));\r\n                    jsonAnchor = this.jsonAnchor == null ? document.createElement('a') :\r\n                        this.jsonAnchor;\r\n                    jsonAnchor.download = this.modelTopologyFileName;\r\n                    jsonAnchor.href = modelTopologyAndWeightManifestURL;\r\n                    jsonAnchor.click();\r\n                    if (modelArtifacts.weightData != null) {\r\n                        weightDataAnchor = this.weightDataAnchor == null ?\r\n                            document.createElement('a') :\r\n                            this.weightDataAnchor;\r\n                        weightDataAnchor.download = this.weightDataFileName;\r\n                        weightDataAnchor.href = weightsURL;\r\n                        weightDataAnchor.click();\r\n                    }\r\n                    return [2, {\r\n                            modelArtifactsInfo: getModelArtifactsInfoForKerasJSON(modelArtifacts)\r\n                        }];\r\n                }\r\n                return [2];\r\n            });\r\n        });\r\n    };\r\n    BrowserDownloads.URL_SCHEME = 'downloads://';\r\n    return BrowserDownloads;\r\n}());\r\nexport { BrowserDownloads };\r\nvar BrowserFiles = (function () {\r\n    function BrowserFiles(files) {\r\n        if (files == null || files.length < 1) {\r\n            throw new Error(\"When calling browserFiles, at least 1 file is required, \" +\r\n                (\"but received \" + files));\r\n        }\r\n        this.files = files;\r\n    }\r\n    BrowserFiles.prototype.load = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var jsonFile, weightFiles;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                jsonFile = this.files[0];\r\n                weightFiles = this.files.slice(1);\r\n                return [2, new Promise(function (resolve, reject) {\r\n                        var jsonReader = new FileReader();\r\n                        jsonReader.onload = function (event) {\r\n                            var modelJSON = JSON.parse(event.target.result);\r\n                            var modelTopology = modelJSON.modelTopology;\r\n                            if (modelTopology == null) {\r\n                                reject(new Error(\"modelTopology field is missing from file \" + jsonFile.name));\r\n                                return;\r\n                            }\r\n                            if (weightFiles.length === 0) {\r\n                                resolve({ modelTopology: modelTopology });\r\n                            }\r\n                            var weightsManifest = modelJSON.weightsManifest;\r\n                            if (weightsManifest == null) {\r\n                                reject(new Error(\"weightManifest field is missing from file \" + jsonFile.name));\r\n                                return;\r\n                            }\r\n                            var pathToFile;\r\n                            try {\r\n                                pathToFile =\r\n                                    _this.checkManifestAndWeightFiles(weightsManifest, weightFiles);\r\n                            }\r\n                            catch (err) {\r\n                                reject(err);\r\n                                return;\r\n                            }\r\n                            var weightSpecs = [];\r\n                            var paths = [];\r\n                            var perFileBuffers = [];\r\n                            weightsManifest.forEach(function (weightsGroup) {\r\n                                weightsGroup.paths.forEach(function (path) {\r\n                                    paths.push(path);\r\n                                    perFileBuffers.push(null);\r\n                                });\r\n                                weightSpecs.push.apply(weightSpecs, weightsGroup.weights);\r\n                            });\r\n                            weightsManifest.forEach(function (weightsGroup) {\r\n                                weightsGroup.paths.forEach(function (path) {\r\n                                    var weightFileReader = new FileReader();\r\n                                    weightFileReader.onload = function (event) {\r\n                                        var weightData = event.target.result;\r\n                                        var index = paths.indexOf(path);\r\n                                        perFileBuffers[index] = weightData;\r\n                                        if (perFileBuffers.indexOf(null) === -1) {\r\n                                            resolve({\r\n                                                modelTopology: modelTopology,\r\n                                                weightSpecs: weightSpecs,\r\n                                                weightData: concatenateArrayBuffers(perFileBuffers),\r\n                                            });\r\n                                        }\r\n                                    };\r\n                                    weightFileReader.onerror = function (error) {\r\n                                        reject(\"Failed to weights data from file of path '\" + path + \"'.\");\r\n                                        return;\r\n                                    };\r\n                                    weightFileReader.readAsArrayBuffer(pathToFile[path]);\r\n                                });\r\n                            });\r\n                        };\r\n                        jsonReader.onerror = function (error) {\r\n                            reject(\"Failed to read model topology and weights manifest JSON \" +\r\n                                (\"from file '\" + jsonFile.name + \"'. BrowserFiles supports loading \") +\r\n                                \"Keras-style tf.Model artifacts only.\");\r\n                            return;\r\n                        };\r\n                        jsonReader.readAsText(jsonFile);\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    BrowserFiles.prototype.checkManifestAndWeightFiles = function (manifest, files) {\r\n        var basenames = [];\r\n        var fileNames = files.map(function (file) { return basename(file.name); });\r\n        var pathToFile = {};\r\n        for (var _i = 0, manifest_1 = manifest; _i < manifest_1.length; _i++) {\r\n            var group = manifest_1[_i];\r\n            group.paths.forEach(function (path) {\r\n                var pathBasename = basename(path);\r\n                if (basenames.indexOf(pathBasename) !== -1) {\r\n                    throw new Error(\"Duplicate file basename found in weights manifest: \" +\r\n                        (\"'\" + pathBasename + \"'\"));\r\n                }\r\n                basenames.push(pathBasename);\r\n                if (fileNames.indexOf(pathBasename) === -1) {\r\n                    throw new Error(\"Weight file with basename '\" + pathBasename + \"' is not provided.\");\r\n                }\r\n                else {\r\n                    pathToFile[path] = files[fileNames.indexOf(pathBasename)];\r\n                }\r\n            });\r\n        }\r\n        if (basenames.length !== files.length) {\r\n            throw new Error(\"Mismatch in the number of files in weights manifest \" +\r\n                (\"(\" + basenames.length + \") and the number of weight files provided \") +\r\n                (\"(\" + files.length + \").\"));\r\n        }\r\n        return pathToFile;\r\n    };\r\n    return BrowserFiles;\r\n}());\r\nexport var browserDownloadsRouter = function (url) {\r\n    if (!ENV.get('IS_BROWSER')) {\r\n        return null;\r\n    }\r\n    else {\r\n        if (url.startsWith(BrowserDownloads.URL_SCHEME)) {\r\n            return browserDownloads(url.slice(BrowserDownloads.URL_SCHEME.length));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n};\r\nIORouterRegistry.registerSaveRouter(browserDownloadsRouter);\r\nexport function browserDownloads(fileNamePrefix) {\r\n    if (fileNamePrefix === void 0) { fileNamePrefix = 'model'; }\r\n    return new BrowserDownloads(fileNamePrefix);\r\n}\r\nexport function browserFiles(files) {\r\n    return new BrowserFiles(files);\r\n}\r\n//# sourceMappingURL=browser_files.js.map","map":"{\"version\":3,\"file\":\"browser_files.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/io/browser_files.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/io/browser_files.d.ts","text":"import { IORouter } from './router_registry';\r\nimport { IOHandler, ModelArtifacts, SaveResult } from './types';\r\nexport declare class BrowserDownloads implements IOHandler {\r\n    private readonly modelTopologyFileName;\r\n    private readonly weightDataFileName;\r\n    private readonly jsonAnchor;\r\n    private readonly weightDataAnchor;\r\n    static readonly URL_SCHEME: string;\r\n    constructor(fileNamePrefix?: string);\r\n    save(modelArtifacts: ModelArtifacts): Promise<SaveResult>;\r\n}\r\nexport declare const browserDownloadsRouter: IORouter;\r\nexport declare function browserDownloads(fileNamePrefix?: string): IOHandler;\r\nexport declare function browserFiles(files: File[]): IOHandler;\r\n"}}

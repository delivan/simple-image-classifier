{"code":"import * as tslib_1 from \"tslib\";\r\nimport { doc } from '../doc';\r\nimport { ENV } from '../environment';\r\nimport * as util from '../util';\r\nimport { parseAxisParam } from './axis_util';\r\nimport { operation } from './operation';\r\nvar ReverseOps = (function () {\r\n    function ReverseOps() {\r\n    }\r\n    ReverseOps.reverse1d = function (x) {\r\n        util.assert(x.rank === 1, \"Error in reverse1D: x must be rank 1 but got\\n             rank \" + x.rank + \".\");\r\n        return ReverseOps.reverse(x, 0);\r\n    };\r\n    ReverseOps.reverse2d = function (x, axis) {\r\n        util.assert(x.rank === 2, \"Error in reverse2D: x must be rank 2 but got\\n             rank \" + x.rank + \".\");\r\n        return ReverseOps.reverse(x, axis);\r\n    };\r\n    ReverseOps.reverse3d = function (x, axis) {\r\n        util.assert(x.rank === 3, \"Error in reverse3D: x must be rank 3 but got\\n             rank \" + x.rank + \".\");\r\n        return ReverseOps.reverse(x, axis);\r\n    };\r\n    ReverseOps.reverse4d = function (x, axis) {\r\n        util.assert(x.rank === 4, \"Error in reverse4D: x must be rank 4 but got\\n             rank \" + x.rank + \".\");\r\n        return ReverseOps.reverse(x, axis);\r\n    };\r\n    ReverseOps.reverse = function (x, axis) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'reverse');\r\n        if (x.rank === 0) {\r\n            return x.clone();\r\n        }\r\n        var axes = parseAxisParam(axis, x.shape);\r\n        var grad = function (dy) {\r\n            return { x: function () { return dy.reverse(axes); } };\r\n        };\r\n        var res = ENV.engine.runKernel(function (backend) { return backend.reverse(x, axes); }, { x: x }, grad);\r\n        return res.reshapeAs(x);\r\n    };\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Slicing and Joining' }),\r\n        operation\r\n    ], ReverseOps, \"reverse\", null);\r\n    return ReverseOps;\r\n}());\r\nexport { ReverseOps };\r\n//# sourceMappingURL=reverse.js.map","map":"{\"version\":3,\"file\":\"reverse.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/ops/reverse.ts\"],\"names\":[],\"mappings\":\";AAiBA,OAAO,EAAC,GAAG,EAAC,MAAM,QAAQ,CAAC;AAC3B,OAAO,EAAC,GAAG,EAAC,MAAM,gBAAgB,CAAC;AAEnC,OAAO,KAAK,IAAI,MAAM,SAAS,CAAC;AAChC,OAAO,EAAC,cAAc,EAAC,MAAM,aAAa,CAAC;AAC3C,OAAO,EAAC,SAAS,EAAC,MAAM,aAAa,CAAC;AAEtC;IAAA;IAoFA,CAAC;IA9EQ,oBAAS,GAAhB,UAAiB,CAAW;QAC1B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,EAAE,qEACV,CAAC,CAAC,IAAI,MAAG,CAAC,CAAC;QAC3B,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC;IASM,oBAAS,GAAhB,UAAiB,CAAW,EAAE,IAAsB;QAClD,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,EAAE,qEACV,CAAC,CAAC,IAAI,MAAG,CAAC,CAAC;QAC3B,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAQM,oBAAS,GAAhB,UAAiB,CAAW,EAAE,IAAsB;QAClD,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,EAAE,qEACV,CAAC,CAAC,IAAI,MAAG,CAAC,CAAC;QAC3B,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAQM,oBAAS,GAAhB,UAAiB,CAAW,EAAE,IAAsB;QAClD,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,EAAE,qEACV,CAAC,CAAC,IAAI,MAAG,CAAC,CAAC;QAC3B,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAuBM,kBAAO,GAAd,UAAiC,CAAI,EAAE,IAAsB;QAC3D,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,SAAS,CAAC,CAAC;QAE/C,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YACjB,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;QACnB,CAAC;QACD,IAAM,IAAI,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAhB,CAAgB,EAAC,CAAC;QACrC,CAAC,CAAC;QACF,IAAM,GAAG,GACL,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,EAAxB,CAAwB,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;QACzE,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC;IAbD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,qBAAqB,EAAC,CAAC;QAC5D,SAAS;mCAcT;IACH,iBAAC;CAAA,AApFD,IAoFC;SApFY,UAAU\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/ops/reverse.d.ts","text":"import { Tensor, Tensor1D, Tensor2D, Tensor3D, Tensor4D } from '../tensor';\r\nexport declare class ReverseOps {\r\n    static reverse1d(x: Tensor1D): Tensor1D;\r\n    static reverse2d(x: Tensor2D, axis?: number | number[]): Tensor2D;\r\n    static reverse3d(x: Tensor3D, axis?: number | number[]): Tensor3D;\r\n    static reverse4d(x: Tensor4D, axis?: number | number[]): Tensor4D;\r\n    static reverse<T extends Tensor>(x: T, axis?: number | number[]): T;\r\n}\r\n"}}

{"code":"var Serializable = (function () {\r\n    function Serializable() {\r\n    }\r\n    Serializable.prototype.getClassName = function () {\r\n        return this.constructor\r\n            .className;\r\n    };\r\n    Serializable.fromConfig = function (cls, config) {\r\n        return new cls(config);\r\n    };\r\n    return Serializable;\r\n}());\r\nexport { Serializable };\r\nvar SerializationMap = (function () {\r\n    function SerializationMap() {\r\n        this.classNameMap = {};\r\n    }\r\n    SerializationMap.getMap = function () {\r\n        if (SerializationMap.instance == null) {\r\n            SerializationMap.instance = new SerializationMap();\r\n        }\r\n        return SerializationMap.instance;\r\n    };\r\n    SerializationMap.register = function (cls) {\r\n        this.getMap().classNameMap[cls.className] = [cls, cls.fromConfig];\r\n    };\r\n    return SerializationMap;\r\n}());\r\nexport { SerializationMap };\r\n//# sourceMappingURL=serialization.js.map","map":"{\"version\":3,\"file\":\"serialization.js\",\"sourceRoot\":\"\",\"sources\":[\"src/serialization.ts\"],\"names\":[],\"mappings\":\"AA0DA;IAAA;IAkCA,CAAC;IAtBC,mCAAY,GAAZ;QACE,MAAM,CAAE,IAAI,CAAC,WAAqD;aAC7D,SAAS,CAAC;IACjB,CAAC;IAeM,uBAAU,GAAjB,UACI,GAA+B,EAAE,MAAkB;QACrD,MAAM,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC;IACH,mBAAC;AAAD,CAAC,AAlCD,IAkCC;;AASD;IASE;QACE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IAKM,uBAAM,GAAb;QACE,EAAE,CAAC,CAAC,gBAAgB,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;YACtC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,gBAAgB,EAAE,CAAC;QACrD,CAAC;QACD,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC;IACnC,CAAC;IAKM,yBAAQ,GAAf,UAAwC,GAA+B;QACrE,IAAI,CAAC,MAAM,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;IACpE,CAAC;IACH,uBAAC;AAAD,CAAC,AA7BD,IA6BC\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/serialization.d.ts","text":"export declare type ConfigDictValue = boolean | number | string | null | ConfigDictArray | ConfigDict;\r\nexport interface ConfigDict {\r\n    [key: string]: ConfigDictValue;\r\n}\r\nexport interface ConfigDictArray extends Array<ConfigDictValue> {\r\n}\r\nexport declare type SerializableConstructor<T extends Serializable> = {\r\n    new (...args: any[]): T;\r\n    className: string;\r\n    fromConfig: FromConfigMethod<T>;\r\n};\r\nexport declare type FromConfigMethod<T extends Serializable> = (cls: SerializableConstructor<T>, config: ConfigDict) => T;\r\nexport declare abstract class Serializable {\r\n    getClassName(): string;\r\n    abstract getConfig(): ConfigDict;\r\n    static fromConfig<T extends Serializable>(cls: SerializableConstructor<T>, config: ConfigDict): T;\r\n}\r\nexport declare class SerializationMap {\r\n    private static instance;\r\n    classNameMap: {\r\n        [className: string]: [SerializableConstructor<Serializable>, FromConfigMethod<Serializable>];\r\n    };\r\n    private constructor();\r\n    static getMap(): SerializationMap;\r\n    static register<T extends Serializable>(cls: SerializableConstructor<T>): void;\r\n}\r\n"}}

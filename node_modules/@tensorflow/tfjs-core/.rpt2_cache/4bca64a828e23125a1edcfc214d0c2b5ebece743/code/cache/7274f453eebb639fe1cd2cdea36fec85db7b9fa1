{"code":"var ReduceProgram = (function () {\r\n    function ReduceProgram(reduceInfo, reduceType) {\r\n        this.variableNames = ['x'];\r\n        var windowSize = reduceInfo.windowSize;\r\n        var batchSize = reduceInfo.batchSize;\r\n        var inSize = reduceInfo.inSize;\r\n        var outSize = Math.ceil(inSize / windowSize);\r\n        this.outputShape = [batchSize, outSize];\r\n        var isReduceSum = reduceType === 'sum';\r\n        var initializationValue = '0.0';\r\n        if (!isReduceSum) {\r\n            if (reduceType === 'min') {\r\n                initializationValue = '1.0 / 0.0';\r\n            }\r\n            else {\r\n                initializationValue = '-1.0 / 0.0';\r\n            }\r\n        }\r\n        var compareOp = reduceType === 'min' ? 'min' : 'max';\r\n        var returnValue = reduceType + \"(\" + reduceType + \"(\" + reduceType + \"(\" +\r\n            'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\r\n        if (reduceType === 'sum') {\r\n            returnValue = \"sumValue\";\r\n        }\r\n        var windowSizeNearestVec4 = Math.floor(windowSize / 4) * 4;\r\n        var windowSizeVec4Remainder = windowSize % 4;\r\n        var updateSnippet = \"\\n      if (\" + isReduceSum + \") {\\n        sumValue += dot(values, ones);\\n      } else {\\n        minMaxValue = \" + compareOp + \"(values, minMaxValue);\\n      }\\n    \";\r\n        var checkOutOfBounds = '';\r\n        if (inSize % windowSize > 0) {\r\n            checkOutOfBounds = \"\\n        if (inIdx < 0 || inIdx >= \" + inSize + \") {\\n          return initializationValue;\\n        }\\n      \";\r\n        }\r\n        this.userCode = \"\\n      const float initializationValue = \" + initializationValue + \";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float getValue(int batch, int inIdx) {\\n        \" + checkOutOfBounds + \"\\n        return getX(batch, inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * \" + windowSize + \";\\n\\n        vec4 minMaxValue = vec4(\" + initializationValue + \");\\n        float sumValue = 0.0;\\n\\n        for (int i = 0; i < \" + windowSizeNearestVec4 + \"; i += 4) {\\n          int inIdx = inOffset + i;\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          \" + updateSnippet + \"\\n        }\\n\\n        int inIdx = inOffset + \" + windowSizeNearestVec4 + \";\\n        if (\" + (windowSizeVec4Remainder === 1) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            initializationValue,\\n            initializationValue,\\n            initializationValue\\n          );\\n          \" + updateSnippet + \"\\n        } else if (\" + (windowSizeVec4Remainder === 2) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            initializationValue,\\n            initializationValue\\n          );\\n          \" + updateSnippet + \"\\n        } else if (\" + (windowSizeVec4Remainder === 3) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            initializationValue\\n          );\\n          \" + updateSnippet + \"\\n        }\\n        setOutput(\" + returnValue + \");\\n      }\\n    \";\r\n    }\r\n    return ReduceProgram;\r\n}());\r\nexport { ReduceProgram };\r\n//# sourceMappingURL=reduce_gpu.js.map","map":"{\"version\":3,\"file\":\"reduce_gpu.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/kernels/webgl/reduce_gpu.ts\"],\"names\":[],\"mappings\":\"AAoBA;IAKE,uBAAY,UAAsB,EAAE,UAA6B;QAJjE,kBAAa,GAAG,CAAC,GAAG,CAAC,CAAC;QAKpB,IAAM,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC;QACzC,IAAM,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;QACvC,IAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;QACjC,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,WAAW,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAExC,IAAM,WAAW,GAAG,UAAU,KAAK,KAAK,CAAC;QAEzC,IAAI,mBAAmB,GAAG,KAAK,CAAC;QAChC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACjB,EAAE,CAAC,CAAC,UAAU,KAAK,KAAK,CAAC,CAAC,CAAC;gBACzB,mBAAmB,GAAG,WAAW,CAAC;YACpC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,mBAAmB,GAAG,YAAY,CAAC;YACrC,CAAC;QACH,CAAC;QAED,IAAM,SAAS,GAAG,UAAU,KAAK,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;QAEvD,IAAI,WAAW,GAAM,UAAU,SAAI,UAAU,SAAI,UAAU,MAAG;YAC1D,mEAAmE,CAAC;QACxE,EAAE,CAAC,CAAC,UAAU,KAAK,KAAK,CAAC,CAAC,CAAC;YACzB,WAAW,GAAG,UAAU,CAAC;QAC3B,CAAC;QAED,IAAM,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAC7D,IAAM,uBAAuB,GAAG,UAAU,GAAG,CAAC,CAAC;QAE/C,IAAM,aAAa,GAAG,iBACd,WAAW,2FAGC,SAAS,0CAE5B,CAAC;QAEF,IAAI,gBAAgB,GAAG,EAAE,CAAC;QAC1B,EAAE,CAAC,CAAC,MAAM,GAAG,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;YAC5B,gBAAgB,GAAG,yCACW,MAAM,kEAGnC,CAAC;QACJ,CAAC;QACD,IAAI,CAAC,QAAQ,GAAG,+CACsB,mBAAmB,sHAInD,gBAAgB,0NAQQ,UAAU,6CAEV,mBAAmB,yEAGvB,qBAAqB,kRASvC,aAAa,sDAGQ,qBAAqB,wBACxC,uBAAuB,KAAK,CAAC,+MAO/B,aAAa,8BACJ,uBAAuB,KAAK,CAAC,sNAOtC,aAAa,8BACJ,uBAAuB,KAAK,CAAC,6NAOtC,aAAa,uCAEL,WAAW,sBAE1B,CAAC;IACJ,CAAC;IACH,oBAAC;AAAD,CAAC,AA9GD,IA8GC\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/kernels/webgl/reduce_gpu.d.ts","text":"import { ReduceInfo } from '../../ops/reduce_util';\r\nimport { GPGPUProgram } from './gpgpu_math';\r\nexport declare class ReduceProgram implements GPGPUProgram {\r\n    variableNames: string[];\r\n    outputShape: number[];\r\n    userCode: string;\r\n    constructor(reduceInfo: ReduceInfo, reduceType: 'max' | 'min' | 'sum');\r\n}\r\n"}}

{"code":"import * as tslib_1 from \"tslib\";\r\nimport { doc } from '../doc';\r\nimport { ENV } from '../environment';\r\nimport * as util from '../util';\r\nimport * as conv_util from './conv_util';\r\nimport { operation } from './operation';\r\nvar ConvOps = (function () {\r\n    function ConvOps() {\r\n    }\r\n    ConvOps.conv1d = function (x, filter, stride, pad, dataFormat, dilation, dimRoundingMode) {\r\n        if (dataFormat === void 0) { dataFormat = 'NWC'; }\r\n        if (dilation === void 0) { dilation = 1; }\r\n        util.assertArgumentsAreTensors({ x: x, filter: filter }, 'conv1d');\r\n        var x3D = x;\r\n        var reshapedTo3D = false;\r\n        if (x.rank === 2) {\r\n            reshapedTo3D = true;\r\n            x3D = x.as3D(1, x.shape[0], x.shape[1]);\r\n        }\r\n        util.assert(x3D.rank === 3, \"Error in conv1d: input must be rank 3, but got rank \" + x3D.rank + \".\");\r\n        util.assert(filter.rank === 3, \"Error in conv1d: filter must be rank 3, but got rank \" +\r\n            (filter.rank + \".\"));\r\n        if (dimRoundingMode != null) {\r\n            util.assert(util.isInt(pad), \"Error in conv1d: pad must be an integer when using, \" +\r\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\r\n        }\r\n        util.assert(x3D.shape[2] === filter.shape[1], \"Error in conv1d: depth of input (\" + x3D.shape[2] + \") must match  \" +\r\n            (\"input depth for filter \" + filter.shape[1] + \".\"));\r\n        util.assert(eitherStridesOrDilationsAreOne(stride, dilation), 'Error in conv1D: Either stride or dilation must be 1.' +\r\n            (\"Got stride \" + stride + \" and dilation '\" + dilation + \"'\"));\r\n        util.assert(dataFormat === 'NWC', \"Error in conv1d: got dataFormat of \" + dataFormat + \" but only NWC is currently supported.\");\r\n        var filter4D = filter.as4D(1, filter.shape[0], filter.shape[1], filter.shape[2]);\r\n        var input4D = x3D.as4D(x3D.shape[0], 1, x3D.shape[1], x3D.shape[2]);\r\n        var strides = [1, stride];\r\n        var dilations = [1, dilation];\r\n        var conv2dDataFormat = 'NHWC';\r\n        var res = ConvOps.conv2d(input4D, filter4D, strides, pad, conv2dDataFormat, dilations, dimRoundingMode);\r\n        if (reshapedTo3D) {\r\n            return res.as2D(res.shape[2], res.shape[3]);\r\n        }\r\n        return res.as3D(res.shape[0], res.shape[2], res.shape[3]);\r\n    };\r\n    ConvOps.conv2d = function (x, filter, strides, pad, dataFormat, dilations, dimRoundingMode) {\r\n        if (dataFormat === void 0) { dataFormat = 'NHWC'; }\r\n        if (dilations === void 0) { dilations = [1, 1]; }\r\n        util.assertArgumentsAreTensors({ x: x, filter: filter }, 'conv2d');\r\n        var x4D = x;\r\n        var reshapedTo4D = false;\r\n        if (x.rank === 3) {\r\n            reshapedTo4D = true;\r\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\r\n        }\r\n        util.assert(x4D.rank === 4, \"Error in conv2d: input must be rank 4, but got rank \" + x4D.rank + \".\");\r\n        util.assert(filter.rank === 4, \"Error in conv2d: filter must be rank 4, but got rank \" +\r\n            (filter.rank + \".\"));\r\n        if (dimRoundingMode != null) {\r\n            util.assert(util.isInt(pad), \"Error in conv2d: pad must be an integer when using, \" +\r\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\r\n        }\r\n        util.assert(x4D.shape[3] === filter.shape[2], \"Error in conv2d: depth of input (\" + x4D.shape[3] + \") must match  \" +\r\n            (\"input depth for filter \" + filter.shape[2] + \".\"));\r\n        util.assert(eitherStridesOrDilationsAreOne(strides, dilations), 'Error in conv2D: Either strides or dilations must be 1.' +\r\n            (\"Got strides \" + strides + \" and dilations '\" + dilations + \"'\"));\r\n        util.assert(dataFormat === 'NHWC', \"Error in conv2d: got dataFormat of \" + dataFormat + \" but only NHWC is currently supported.\");\r\n        var convInfo = conv_util.computeConv2DInfo(x4D.shape, filter.shape, strides, dilations, pad, dimRoundingMode);\r\n        var grad = function (dy) {\r\n            util.assert(tupleValuesAreOne(dilations), 'Error in gradient of conv2D: dilation rates greater than 1 are not' +\r\n                (\"yet supported in gradients. Got dilations '\" + dilations + \"'\"));\r\n            return {\r\n                x: function () { return ConvOps.conv2dDerInput(x4D.shape, dy, filter, strides, pad); },\r\n                filter: function () {\r\n                    return ConvOps.conv2dDerFilter(x4D, dy, filter.shape, strides, pad);\r\n                }\r\n            };\r\n        };\r\n        var res = ENV.engine.runKernel(function (backend) { return backend.conv2d(x4D, filter, convInfo); }, { x: x4D, filter: filter }, grad);\r\n        if (reshapedTo4D) {\r\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\r\n        }\r\n        return res;\r\n    };\r\n    ConvOps.conv2dDerInput = function (xShape, dy, filter, strides, pad, dimRoundingMode) {\r\n        util.assertArgumentsAreTensors({ dy: dy, filter: filter }, 'conv2dDerInput');\r\n        util.assert(xShape.length === dy.rank, \"Length of inShape \" +\r\n            (\"(\" + xShape.length + \") and rank of dy (\" + dy.rank + \") must match\"));\r\n        var xShape4D = xShape;\r\n        var dy4D = dy;\r\n        var reshapedTo4D = false;\r\n        if (dy.rank === 3) {\r\n            reshapedTo4D = true;\r\n            dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\r\n            xShape4D = [1, xShape[0], xShape[1], xShape[2]];\r\n        }\r\n        var inDepth = xShape4D[3];\r\n        var outDepth = dy4D.shape[3];\r\n        util.assert(xShape4D.length === 4, \"Error in conv2dDerInput: inShape must be length 4, but got length \" +\r\n            (xShape4D.length + \".\"));\r\n        util.assert(dy4D.rank === 4, \"Error in conv2dDerInput: dy must be rank 4, but got \" +\r\n            (\"rank \" + dy4D.rank));\r\n        util.assert(filter.rank === 4, \"Error in conv2dDerInput: filter must be rank 4, but got \" +\r\n            (\"rank \" + filter.rank));\r\n        util.assert(inDepth === filter.shape[2], \"Error in conv2dDerInput: depth of input (\" + inDepth + \") must \" +\r\n            (\"match input depth for filter \" + filter.shape[2] + \".\"));\r\n        util.assert(outDepth === filter.shape[3], \"Error in conv2dDerInput: depth of output (\" + outDepth + \") must\" +\r\n            (\"match output depth for filter \" + filter.shape[3] + \".\"));\r\n        if (dimRoundingMode != null) {\r\n            util.assert(util.isInt(pad), \"Error in conv2dDerInput: pad must be an integer when using, \" +\r\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\r\n        }\r\n        var dilations = 1;\r\n        var convInfo = conv_util.computeConv2DInfo(xShape4D, filter.shape, strides, dilations, pad, dimRoundingMode);\r\n        var res = ENV.engine.runKernel(function (backend) { return backend.conv2dDerInput(dy4D, filter, convInfo); }, { dy4D: dy4D });\r\n        if (reshapedTo4D) {\r\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\r\n        }\r\n        return res;\r\n    };\r\n    ConvOps.conv2dDerFilter = function (x, dy, filterShape, strides, pad, dimRoundingMode) {\r\n        util.assertArgumentsAreTensors({ x: x, dy: dy }, 'conv2dDerFilter');\r\n        var x4D = x;\r\n        if (x.rank === 3) {\r\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\r\n        }\r\n        var dy4D = dy;\r\n        if (dy4D.rank === 3) {\r\n            dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\r\n        }\r\n        util.assert(x4D.rank === 4, \"Error in conv2dDerFilter: input must be rank 4, but got shape \" +\r\n            (x4D.shape + \".\"));\r\n        util.assert(dy4D.rank === 4, \"Error in conv2dDerFilter: dy must be rank 4, but got shape \" +\r\n            (dy4D.shape + \".\"));\r\n        util.assert(filterShape.length === 4, \"Error in conv2dDerFilter: filterShape must be length 4, but got \" +\r\n            (filterShape + \".\"));\r\n        util.assert(x4D.shape[3] === filterShape[2], \"Error in conv2dDerFilter: depth of input \" + x4D.shape[3] + \") must \" +\r\n            (\"match input depth in filter (\" + filterShape[2] + \".\"));\r\n        util.assert(dy4D.shape[3] === filterShape[3], \"Error in conv2dDerFilter: depth of dy (\" + dy4D.shape[3] + \") must \" +\r\n            (\"match output depth for filter (\" + filterShape[3] + \").\"));\r\n        if (dimRoundingMode != null) {\r\n            util.assert(util.isInt(pad), \"Error in conv2dDerFilter: pad must be an integer when using, \" +\r\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\r\n        }\r\n        var dilations = 1;\r\n        var convInfo = conv_util.computeConv2DInfo(x4D.shape, filterShape, strides, dilations, pad, dimRoundingMode);\r\n        return ENV.engine.runKernel(function (backend) { return backend.conv2dDerFilter(x4D, dy4D, convInfo); }, { x4D: x4D, dy4D: dy4D });\r\n    };\r\n    ConvOps.conv2dTranspose = function (x, filter, outputShape, strides, pad, dimRoundingMode) {\r\n        util.assertArgumentsAreTensors({ x: x, filter: filter }, 'conv2dTranspose');\r\n        return ConvOps.conv2dDerInput(outputShape, x, filter, strides, pad, dimRoundingMode);\r\n    };\r\n    ConvOps.depthwiseConv2d = function (x, filter, strides, pad, dataFormat, dilations, dimRoundingMode) {\r\n        if (dataFormat === void 0) { dataFormat = 'NHWC'; }\r\n        if (dilations === void 0) { dilations = [1, 1]; }\r\n        util.assertArgumentsAreTensors({ x: x, filter: filter }, 'depthwiseConv2d');\r\n        var x4D = x;\r\n        var reshapedTo4D = false;\r\n        if (x.rank === 3) {\r\n            reshapedTo4D = true;\r\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\r\n        }\r\n        util.assert(x4D.rank === 4, \"Error in depthwiseConv2D: input must be rank 4, but got \" +\r\n            (\"rank \" + x4D.rank + \".\"));\r\n        util.assert(filter.rank === 4, \"Error in depthwiseConv2D: filter must be rank 4, but got rank \" +\r\n            (filter.rank + \".\"));\r\n        util.assert(x4D.shape[3] === filter.shape[2], \"Error in depthwiseConv2D: number of input channels \" +\r\n            (\"(\" + x4D.shape[3] + \") must match the inChannels dimension in \") +\r\n            (\"filter \" + filter.shape[2] + \".\"));\r\n        if (dilations == null) {\r\n            dilations = [1, 1];\r\n        }\r\n        util.assert(eitherStridesOrDilationsAreOne(strides, dilations), 'Error in depthwiseConv2d: Either strides or dilations must be 1.' +\r\n            (\"Got strides \" + strides + \" and dilations '\" + dilations + \"'\"));\r\n        if (dimRoundingMode != null) {\r\n            util.assert(util.isInt(pad), \"Error in depthwiseConv2D: pad must be an integer when using, \" +\r\n                (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"));\r\n        }\r\n        var convInfo = conv_util.computeConv2DInfo(x4D.shape, filter.shape, strides, dilations, pad, dimRoundingMode, true);\r\n        var res = ENV.engine.runKernel(function (backend) { return backend.depthwiseConv2D(x4D, filter, convInfo); }, { x4D: x4D, filter: filter });\r\n        if (reshapedTo4D) {\r\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\r\n        }\r\n        return res;\r\n    };\r\n    ConvOps.separableConv2d = function (x, depthwiseFilter, pointwiseFilter, strides, pad, dilation, dataFormat) {\r\n        if (dilation === void 0) { dilation = [1, 1]; }\r\n        if (dataFormat === void 0) { dataFormat = 'NHWC'; }\r\n        util.assertArgumentsAreTensors({ x: x, depthwiseFilter: depthwiseFilter, pointwiseFilter: pointwiseFilter }, 'separableConv2d');\r\n        var x4D = x;\r\n        var reshapedTo4D = false;\r\n        if (x.rank === 3) {\r\n            reshapedTo4D = true;\r\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\r\n        }\r\n        if (dataFormat === 'NCHW') {\r\n            throw new Error('separableConv2d currently does not support dataFormat NCHW; only ' +\r\n                'NHWC is supported');\r\n        }\r\n        util.assert(x4D.rank === 4, \"Error in separableConv2d: input must be rank 4, but got \" +\r\n            (\"rank \" + x4D.rank + \".\"));\r\n        util.assert(depthwiseFilter.rank === 4, \"Error in separableConv2d: depthwise filter must be rank 4, but got \" +\r\n            (\"rank \" + depthwiseFilter.rank + \".\"));\r\n        util.assert(pointwiseFilter.rank === 4, \"Error in separableConv2d: pointwise filter must be rank 4, but got \" +\r\n            (\"rank \" + depthwiseFilter.rank + \".\"));\r\n        util.assert(pointwiseFilter.shape[0] === 1, \"Error in separableConv2d: the first dimension of pointwise filter \" +\r\n            (\" must be 1, but got \" + pointwiseFilter.shape[0] + \".\"));\r\n        util.assert(pointwiseFilter.shape[1] === 1, \"Error in separableConv2d: the second dimension of pointwise filter \" +\r\n            (\" must be 1, but got \" + pointwiseFilter.shape[1] + \".\"));\r\n        var inChannels = depthwiseFilter.shape[2];\r\n        var channelMultiplier = depthwiseFilter.shape[3];\r\n        util.assert(pointwiseFilter.shape[2] === inChannels * channelMultiplier, \"Error in separableConv2d: the third dimension of pointwise filter \" +\r\n            (\"must be \" + inChannels * channelMultiplier + \", \") +\r\n            (\"but got \" + pointwiseFilter.shape[2] + \".\"));\r\n        var depthwise = ConvOps.depthwiseConv2d(x4D, depthwiseFilter, strides, pad, dataFormat, dilation);\r\n        var pointwiseStride = 1;\r\n        var res = ConvOps.conv2d(depthwise, pointwiseFilter, pointwiseStride, 'valid', dataFormat);\r\n        if (reshapedTo4D) {\r\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\r\n        }\r\n        return res;\r\n    };\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Convolution' }),\r\n        operation\r\n    ], ConvOps, \"conv1d\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Convolution' }),\r\n        operation\r\n    ], ConvOps, \"conv2d\", null);\r\n    tslib_1.__decorate([\r\n        operation\r\n    ], ConvOps, \"conv2dDerInput\", null);\r\n    tslib_1.__decorate([\r\n        operation\r\n    ], ConvOps, \"conv2dDerFilter\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Convolution' }),\r\n        operation\r\n    ], ConvOps, \"conv2dTranspose\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Convolution' }),\r\n        operation\r\n    ], ConvOps, \"depthwiseConv2d\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Convolution' }),\r\n        operation\r\n    ], ConvOps, \"separableConv2d\", null);\r\n    return ConvOps;\r\n}());\r\nexport { ConvOps };\r\nfunction parseTupleParam(param) {\r\n    return typeof param === 'number' ? [param, param] : param;\r\n}\r\nfunction tupleValuesAreOne(param) {\r\n    var _a = parseTupleParam(param), dimA = _a[0], dimB = _a[1];\r\n    return dimA === 1 && dimB === 1;\r\n}\r\nfunction eitherStridesOrDilationsAreOne(strides, dilations) {\r\n    return tupleValuesAreOne(strides) || tupleValuesAreOne(dilations);\r\n}\r\n//# sourceMappingURL=conv.js.map","map":"{\"version\":3,\"file\":\"conv.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/ops/conv.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/ops/conv.d.ts","text":"import { Tensor2D, Tensor3D, Tensor4D } from '../tensor';\r\nexport declare class ConvOps {\r\n    static conv1d<T extends Tensor2D | Tensor3D>(x: T, filter: Tensor3D, stride: number, pad: 'valid' | 'same' | number, dataFormat?: 'NWC' | 'NCW', dilation?: number, dimRoundingMode?: 'floor' | 'round' | 'ceil'): T;\r\n    static conv2d<T extends Tensor3D | Tensor4D>(x: T, filter: Tensor4D, strides: [number, number] | number, pad: 'valid' | 'same' | number, dataFormat?: 'NHWC' | 'NCHW', dilations?: [number, number] | number, dimRoundingMode?: 'floor' | 'round' | 'ceil'): T;\r\n    static conv2dDerInput<T extends Tensor3D | Tensor4D>(xShape: [number, number, number, number] | [number, number, number], dy: T, filter: Tensor4D, strides: [number, number] | number, pad: 'valid' | 'same' | number, dimRoundingMode?: 'floor' | 'round' | 'ceil'): T;\r\n    static conv2dDerFilter<T extends Tensor3D | Tensor4D>(x: T, dy: T, filterShape: [number, number, number, number], strides: [number, number] | number, pad: 'valid' | 'same' | number, dimRoundingMode?: 'floor' | 'round' | 'ceil'): Tensor4D;\r\n    static conv2dTranspose<T extends Tensor3D | Tensor4D>(x: T, filter: Tensor4D, outputShape: [number, number, number, number] | [number, number, number], strides: [number, number] | number, pad: 'valid' | 'same' | number, dimRoundingMode?: 'floor' | 'round' | 'ceil'): T;\r\n    static depthwiseConv2d<T extends Tensor3D | Tensor4D>(x: T, filter: Tensor4D, strides: [number, number] | number, pad: 'valid' | 'same' | number, dataFormat?: 'NHWC' | 'NCHW', dilations?: [number, number] | number, dimRoundingMode?: 'floor' | 'round' | 'ceil'): T;\r\n    static separableConv2d<T extends Tensor3D | Tensor4D>(x: T, depthwiseFilter: Tensor4D, pointwiseFilter: Tensor4D, strides: [number, number] | number, pad: 'valid' | 'same', dilation?: [number, number] | number, dataFormat?: 'NHWC' | 'NCHW'): T;\r\n}\r\n"}}

{"code":"export function getBroadcastDims(inShape, outShape) {\r\n    var inRank = inShape.length;\r\n    var dims = [];\r\n    for (var i = 0; i < inRank; i++) {\r\n        var dim = inRank - 1 - i;\r\n        var a = inShape[dim] || 1;\r\n        var b = outShape[outShape.length - 1 - i] || 1;\r\n        if (b > 1 && a === 1) {\r\n            dims.unshift(dim);\r\n        }\r\n    }\r\n    return dims;\r\n}\r\nexport function getReductionAxes(inShape, outShape) {\r\n    var result = [];\r\n    for (var i = 0; i < outShape.length; i++) {\r\n        var inDim = inShape[inShape.length - i - 1];\r\n        var outAxis = outShape.length - i - 1;\r\n        var outDim = outShape[outAxis];\r\n        if (inDim == null || (inDim === 1 && outDim > 1)) {\r\n            result.unshift(outAxis);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function broadcastDimsAreOuter(dims) {\r\n    for (var i = 0; i < dims.length; i++) {\r\n        if (dims[i] !== i) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function assertAndGetBroadcastShape(shapeA, shapeB) {\r\n    var result = [];\r\n    var errMsg = \"Operands could not be broadcast together with shapes \" +\r\n        (shapeA + \" and \" + shapeB + \".\");\r\n    var l = Math.max(shapeA.length, shapeB.length);\r\n    for (var i = 0; i < l; i++) {\r\n        var a = shapeA[shapeA.length - i - 1] || 1;\r\n        var b = shapeB[shapeB.length - i - 1] || 1;\r\n        if (a > 1 && b > 1 && a !== b) {\r\n            throw Error(errMsg);\r\n        }\r\n        result.unshift(Math.max(a, b));\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=broadcast_util.js.map","map":"{\"version\":3,\"file\":\"broadcast_util.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/ops/broadcast_util.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/ops/broadcast_util.d.ts","text":"export declare function getBroadcastDims(inShape: number[], outShape: number[]): number[];\r\nexport declare function getReductionAxes(inShape: number[], outShape: number[]): number[];\r\nexport declare function broadcastDimsAreOuter(dims: number[]): boolean;\r\nexport declare function assertAndGetBroadcastShape(shapeA: number[], shapeB: number[]): number[];\r\n"}}

{"code":"import * as tslib_1 from \"tslib\";\r\nimport { ENV } from '../environment';\r\nimport { tidy } from '../globals';\r\nimport { scalar, zerosLike } from '../ops/ops';\r\nimport { SerializationMap } from '../serialization';\r\nimport { SGDOptimizer } from './sgd_optimizer';\r\nvar MomentumOptimizer = (function (_super) {\r\n    tslib_1.__extends(MomentumOptimizer, _super);\r\n    function MomentumOptimizer(learningRate, momentum, useNesterov) {\r\n        if (useNesterov === void 0) { useNesterov = false; }\r\n        var _this = _super.call(this, learningRate) || this;\r\n        _this.learningRate = learningRate;\r\n        _this.momentum = momentum;\r\n        _this.useNesterov = useNesterov;\r\n        _this.m = scalar(_this.momentum);\r\n        _this.accumulations = {};\r\n        return _this;\r\n    }\r\n    MomentumOptimizer.prototype.applyGradients = function (variableGradients) {\r\n        var _this = this;\r\n        var _loop_1 = function (variableName) {\r\n            var value = ENV.engine.registeredVariables[variableName];\r\n            if (this_1.accumulations[variableName] == null) {\r\n                var trainable_1 = false;\r\n                tidy(function () {\r\n                    _this.accumulations[variableName] =\r\n                        zerosLike(value).variable(trainable_1);\r\n                });\r\n            }\r\n            var accumulation = this_1.accumulations[variableName];\r\n            var gradient = variableGradients[variableName];\r\n            tidy(function () {\r\n                var newValue;\r\n                var newAccumulation = _this.m.mul(accumulation).add(gradient);\r\n                if (_this.useNesterov) {\r\n                    newValue =\r\n                        _this.c.mul(gradient.add(newAccumulation.mul(_this.m))).add(value);\r\n                }\r\n                else {\r\n                    newValue = _this.c.mul(newAccumulation).add(value);\r\n                }\r\n                _this.accumulations[variableName].assign(newAccumulation);\r\n                value.assign(newValue);\r\n            });\r\n        };\r\n        var this_1 = this;\r\n        for (var variableName in variableGradients) {\r\n            _loop_1(variableName);\r\n        }\r\n    };\r\n    MomentumOptimizer.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        this.m.dispose();\r\n        if (this.accumulations != null) {\r\n            for (var variableName in this.accumulations) {\r\n                this.accumulations[variableName].dispose();\r\n            }\r\n        }\r\n    };\r\n    MomentumOptimizer.prototype.setMomentum = function (momentum) {\r\n        this.momentum = momentum;\r\n    };\r\n    MomentumOptimizer.prototype.getConfig = function () {\r\n        return {\r\n            learningRate: this.learningRate,\r\n            momentum: this.momentum,\r\n            useNesterov: this.useNesterov\r\n        };\r\n    };\r\n    MomentumOptimizer.fromConfig = function (cls, config) {\r\n        return new cls(config.learningRate, config.momentum, config.useNesterov);\r\n    };\r\n    MomentumOptimizer.className = 'MomentumOptimizer';\r\n    return MomentumOptimizer;\r\n}(SGDOptimizer));\r\nexport { MomentumOptimizer };\r\nSerializationMap.register(MomentumOptimizer);\r\n//# sourceMappingURL=momentum_optimizer.js.map","map":"{\"version\":3,\"file\":\"momentum_optimizer.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/optimizers/momentum_optimizer.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/optimizers/momentum_optimizer.d.ts","text":"import { ConfigDict, Serializable, SerializableConstructor } from '../serialization';\r\nimport { NamedVariableMap } from '../types';\r\nimport { SGDOptimizer } from './sgd_optimizer';\r\nexport declare class MomentumOptimizer extends SGDOptimizer {\r\n    protected learningRate: number;\r\n    private momentum;\r\n    private useNesterov;\r\n    static className: string;\r\n    private m;\r\n    private accumulations;\r\n    constructor(learningRate: number, momentum: number, useNesterov?: boolean);\r\n    applyGradients(variableGradients: NamedVariableMap): void;\r\n    dispose(): void;\r\n    setMomentum(momentum: number): void;\r\n    getConfig(): ConfigDict;\r\n    static fromConfig<T extends Serializable>(cls: SerializableConstructor<T>, config: ConfigDict): T;\r\n}\r\n"}}

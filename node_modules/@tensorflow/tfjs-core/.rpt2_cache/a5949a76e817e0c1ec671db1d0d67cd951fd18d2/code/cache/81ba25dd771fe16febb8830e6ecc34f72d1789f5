{"code":"import { getCoordsDataType } from './shader_compiler';\r\nvar CumSumProgram = (function () {\r\n    function CumSumProgram(shape, exclusive, reverse) {\r\n        this.variableNames = ['x'];\r\n        this.outputShape = shape;\r\n        var rank = shape.length;\r\n        var finalDim = shape[shape.length - 1];\r\n        var dtype = getCoordsDataType(rank);\r\n        var outputCoords = getCoords(rank, 'coords');\r\n        var sourceCoords = getCoords(rank, 'adjustableCoords');\r\n        var finalCoord = getFinalCoord(rank, 'coords');\r\n        var finalAdjustableCoord = getFinalCoord(rank, 'adjustableCoords');\r\n        var indexAdjuster = reverse ? \"return \" + finalDim + \" -i - 1;\" : 'return i;';\r\n        var comparator = reverse ? '<' : '>';\r\n        this.userCode = \"\\n      int getIndex(int i) {\\n        \" + indexAdjuster + \"\\n      }\\n\\n      void main() {\\n        \" + dtype + \" coords = getOutputCoords();\\n        \" + dtype + \" adjustableCoords = \" + dtype + \"(\" + outputCoords + \");\\n        int finalCoord = int(\" + finalCoord + \");\\n        float val = 0.0;\\n        for (int i = \" + finalDim + \" - 1; i >= 0; i -= 1) {\\n          int idx = getIndex(i);\\n          if (idx \" + comparator + \" finalCoord) {\\n            continue;\\n          }\\n          if (idx == finalCoord && \" + exclusive + \") {\\n            continue;\\n          }\\n          \" + finalAdjustableCoord + \" = idx;\\n          val += getX(\" + sourceCoords + \");\\n        }\\n        setOutput(val);\\n      }\\n    \";\r\n    }\r\n    return CumSumProgram;\r\n}());\r\nexport { CumSumProgram };\r\nfunction getCoords(rank, name) {\r\n    if (rank === 1) {\r\n        return \"\" + name;\r\n    }\r\n    else if (rank === 2) {\r\n        return name + \".x, \" + name + \".y\";\r\n    }\r\n    else if (rank === 3) {\r\n        return name + \".x, \" + name + \".y, \" + name + \".z\";\r\n    }\r\n    else if (rank === 4) {\r\n        return name + \".x, \" + name + \".y, \" + name + \".z, \" + name + \".w\";\r\n    }\r\n    else {\r\n        throw Error(\"Cumulative sum for rank \" + rank + \" is not yet supported\");\r\n    }\r\n}\r\nfunction getFinalCoord(rank, name) {\r\n    if (rank === 1) {\r\n        return \"\" + name;\r\n    }\r\n    else if (rank === 2) {\r\n        return name + \".y\";\r\n    }\r\n    else if (rank === 3) {\r\n        return name + \".z\";\r\n    }\r\n    else if (rank === 4) {\r\n        return name + \".w\";\r\n    }\r\n    else {\r\n        throw Error(\"Cumulative sum for rank \" + rank + \" is not yet supported\");\r\n    }\r\n}\r\n//# sourceMappingURL=cumsum_gpu.js.map","map":"{\"version\":3,\"file\":\"cumsum_gpu.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/kernels/webgl/cumsum_gpu.ts\"],\"names\":[],\"mappings\":\"AAkBA,OAAO,EAAC,iBAAiB,EAAC,MAAM,mBAAmB,CAAC;AAEpD;IAKE,uBAAY,KAAe,EAAE,SAAkB,EAAE,OAAgB;QAJjE,kBAAa,GAAG,CAAC,GAAG,CAAC,CAAC;QAKpB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;QAC1B,IAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACzC,IAAM,KAAK,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACtC,IAAM,YAAY,GAAG,SAAS,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAC/C,IAAM,YAAY,GAAG,SAAS,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;QACzD,IAAM,UAAU,GAAG,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACjD,IAAM,oBAAoB,GACtB,aAAa,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;QAE5C,IAAM,aAAa,GAAG,OAAO,CAAC,CAAC,CAAC,YAAU,QAAQ,aAAU,CAAC,CAAC,CAAC,WAAW,CAAC;QAC3E,IAAM,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QAEvC,IAAI,CAAC,QAAQ,GAAG,4CAEV,aAAa,kDAIb,KAAK,8CACL,KAAK,4BAAuB,KAAK,SAAI,YAAY,yCAC5B,UAAU,2DAElB,QAAQ,qFAEX,UAAU,+FAGO,SAAS,2DAGlC,oBAAoB,uCACR,YAAY,0DAI/B,CAAC;IACJ,CAAC;IACH,oBAAC;AAAD,CAAC,AA5CD,IA4CC;;AAED,mBAAmB,IAAY,EAAE,IAAY;IAC3C,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACf,MAAM,CAAC,KAAG,IAAM,CAAC;IACnB,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,MAAM,CAAI,IAAI,YAAO,IAAI,OAAI,CAAC;IAChC,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,MAAM,CAAI,IAAI,YAAO,IAAI,YAAO,IAAI,OAAI,CAAC;IAC3C,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,MAAM,CAAI,IAAI,YAAO,IAAI,YAAO,IAAI,YAAO,IAAI,OAAI,CAAC;IACtD,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,MAAM,KAAK,CAAC,6BAA2B,IAAI,0BAAuB,CAAC,CAAC;IACtE,CAAC;AACH,CAAC;AAED,uBAAuB,IAAY,EAAE,IAAY;IAC/C,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACf,MAAM,CAAC,KAAG,IAAM,CAAC;IACnB,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,MAAM,CAAI,IAAI,OAAI,CAAC;IACrB,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,MAAM,CAAI,IAAI,OAAI,CAAC;IACrB,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,MAAM,CAAI,IAAI,OAAI,CAAC;IACrB,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,MAAM,KAAK,CAAC,6BAA2B,IAAI,0BAAuB,CAAC,CAAC;IACtE,CAAC;AACH,CAAC\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/kernels/webgl/cumsum_gpu.d.ts","text":"import { GPGPUProgram } from './gpgpu_math';\r\nexport declare class CumSumProgram implements GPGPUProgram {\r\n    variableNames: string[];\r\n    outputShape: number[];\r\n    userCode: string;\r\n    constructor(shape: number[], exclusive: boolean, reverse: boolean);\r\n}\r\n"}}

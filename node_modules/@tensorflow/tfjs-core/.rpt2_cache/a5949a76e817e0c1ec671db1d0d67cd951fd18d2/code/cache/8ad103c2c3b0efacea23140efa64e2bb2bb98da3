{"code":"import * as tslib_1 from \"tslib\";\r\nimport { doc } from '../doc';\r\nimport { ENV } from '../environment';\r\nimport * as util from '../util';\r\nimport { operation } from './operation';\r\nvar ImageOps = (function () {\r\n    function ImageOps() {\r\n    }\r\n    ImageOps.resizeBilinear = function (images, size, alignCorners) {\r\n        if (alignCorners === void 0) { alignCorners = false; }\r\n        util.assertArgumentsAreTensors({ images: images }, 'resizeBilinear');\r\n        util.assert(images.rank === 3 || images.rank === 4, \"Error in resizeBilinear: x must be rank 3 or 4, but got \" +\r\n            (\"rank \" + images.rank + \".\"));\r\n        util.assert(size.length === 2, \"Error in resizeBilinear: new shape must 2D, but got shape \" +\r\n            (size + \".\"));\r\n        var batchImages = images;\r\n        var reshapedTo4D = false;\r\n        if (images.rank === 3) {\r\n            reshapedTo4D = true;\r\n            batchImages =\r\n                images.as4D(1, images.shape[0], images.shape[1], images.shape[2]);\r\n        }\r\n        var newHeight = size[0], newWidth = size[1];\r\n        var forward = function (backend, save) {\r\n            return backend.resizeBilinear(batchImages, newHeight, newWidth, alignCorners);\r\n        };\r\n        var backward = function (dy, saved) {\r\n            return {\r\n                batchImages: function () { return ENV.engine.runKernel(function (backend) {\r\n                    return backend.resizeBilinearBackprop(dy, batchImages, alignCorners);\r\n                }, {}); }\r\n            };\r\n        };\r\n        var res = ENV.engine.runKernel(forward, { batchImages: batchImages }, backward);\r\n        if (reshapedTo4D) {\r\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\r\n        }\r\n        return res;\r\n    };\r\n    ImageOps.resizeNearestNeighbor = function (images, size, alignCorners) {\r\n        if (alignCorners === void 0) { alignCorners = false; }\r\n        util.assertArgumentsAreTensors({ images: images }, 'resizeNearestNeighbor');\r\n        util.assert(images.rank === 3 || images.rank === 4, \"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got \" +\r\n            (\"rank \" + images.rank + \".\"));\r\n        util.assert(size.length === 2, \"Error in resizeNearestNeighbor: new shape must 2D, but got shape \" +\r\n            (size + \".\"));\r\n        util.assert(images.dtype === 'float32' || images.dtype === 'int32', '`images` must have `int32` or `float32` as dtype');\r\n        var batchImages = images;\r\n        var reshapedTo4D = false;\r\n        if (images.rank === 3) {\r\n            reshapedTo4D = true;\r\n            batchImages =\r\n                images.as4D(1, images.shape[0], images.shape[1], images.shape[2]);\r\n        }\r\n        var newHeight = size[0], newWidth = size[1];\r\n        var res = ENV.engine.runKernel(function (backend) { return backend.resizeNearestNeighbor(batchImages, newHeight, newWidth, alignCorners); }, { batchImages: batchImages });\r\n        if (reshapedTo4D) {\r\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\r\n        }\r\n        return res;\r\n    };\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Images', namespace: 'image' }),\r\n        operation\r\n    ], ImageOps, \"resizeBilinear\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Images', namespace: 'image' }),\r\n        operation\r\n    ], ImageOps, \"resizeNearestNeighbor\", null);\r\n    return ImageOps;\r\n}());\r\nexport { ImageOps };\r\n//# sourceMappingURL=image_ops.js.map","map":"{\"version\":3,\"file\":\"image_ops.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/ops/image_ops.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/ops/image_ops.d.ts","text":"import { Tensor3D, Tensor4D } from '../tensor';\r\nexport declare class ImageOps {\r\n    static resizeBilinear<T extends Tensor3D | Tensor4D>(images: T, size: [number, number], alignCorners?: boolean): T;\r\n    static resizeNearestNeighbor<T extends Tensor3D | Tensor4D>(images: T, size: [number, number], alignCorners?: boolean): T;\r\n}\r\n"}}

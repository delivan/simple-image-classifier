{"code":"import { getCoordsDataType } from './shader_compiler';\r\nvar WhereProgram = (function () {\r\n    function WhereProgram(cRank, shape, rank) {\r\n        this.variableNames = ['c', 'a', 'b'];\r\n        this.outputShape = shape;\r\n        var cCoords;\r\n        var abCoords;\r\n        if (rank > 4) {\r\n            throw Error(\"Where for rank \" + rank + \" is not yet supported\");\r\n        }\r\n        if (rank === 1) {\r\n            abCoords = \"resRC\";\r\n            cCoords = \"resRC\";\r\n        }\r\n        else {\r\n            var currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\r\n            var cCoordVars = [];\r\n            var abCoordVars = [];\r\n            for (var i = 0; i < shape.length; i++) {\r\n                abCoordVars.push(\"\" + currentCoords[i]);\r\n                if (i < cRank) {\r\n                    cCoordVars.push(\"\" + currentCoords[i]);\r\n                }\r\n            }\r\n            cCoords = cCoordVars.join();\r\n            abCoords = abCoordVars.join();\r\n        }\r\n        var dtype = getCoordsDataType(rank);\r\n        this.userCode = \"\\n      void main() {\\n        \" + dtype + \" resRC = getOutputCoords();\\n        float cVal = getC(\" + cCoords + \");\\n        if (cVal >= 1.0) {\\n          setOutput(getA(\" + abCoords + \"));\\n        } else {\\n          setOutput(getB(\" + abCoords + \"));\\n        }\\n      }\\n    \";\r\n    }\r\n    return WhereProgram;\r\n}());\r\nexport { WhereProgram };\r\n//# sourceMappingURL=logical_gpu.js.map","map":"{\"version\":3,\"file\":\"logical_gpu.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/kernels/webgl/logical_gpu.ts\"],\"names\":[],\"mappings\":\"AAkBA,OAAO,EAAC,iBAAiB,EAAC,MAAM,mBAAmB,CAAC;AAEpD;IAKE,sBAAY,KAAa,EAAE,KAAe,EAAE,IAAY;QAJxD,kBAAa,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAK9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,OAAO,CAAC;QACZ,IAAI,QAAQ,CAAC;QACb,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;YACb,MAAM,KAAK,CAAC,oBAAkB,IAAI,0BAAuB,CAAC,CAAC;QAC7D,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YACf,QAAQ,GAAG,OAAO,CAAC;YACnB,OAAO,GAAG,OAAO,CAAC;QACpB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAM,aAAa,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;YACnE,IAAM,UAAU,GAAG,EAAE,CAAC;YACtB,IAAM,WAAW,GAAG,EAAE,CAAC;YACvB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtC,WAAW,CAAC,IAAI,CAAC,KAAG,aAAa,CAAC,CAAC,CAAG,CAAC,CAAC;gBACxC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;oBACd,UAAU,CAAC,IAAI,CAAC,KAAG,aAAa,CAAC,CAAC,CAAG,CAAC,CAAC;gBACzC,CAAC;YACH,CAAC;YACD,OAAO,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC;YAC5B,QAAQ,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC;QAChC,CAAC;QAED,IAAM,KAAK,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAEtC,IAAI,CAAC,QAAQ,GAAG,oCAEV,KAAK,+DACa,OAAO,iEAER,QAAQ,wDAER,QAAQ,kCAG9B,CAAC;IACJ,CAAC;IACH,mBAAC;AAAD,CAAC,AA7CD,IA6CC\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/kernels/webgl/logical_gpu.d.ts","text":"import { GPGPUProgram } from './gpgpu_math';\r\nexport declare class WhereProgram implements GPGPUProgram {\r\n    variableNames: string[];\r\n    outputShape: number[];\r\n    userCode: string;\r\n    constructor(cRank: number, shape: number[], rank: number);\r\n}\r\n"}}

{"code":"import { ENV } from '../../environment';\r\nimport * as util from '../../util';\r\nimport * as shader_compiler from './shader_compiler';\r\nvar NAN_UNIFORM_NAME = 'NaN';\r\nfunction shouldUploadNaNUniform() {\r\n    return !ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED');\r\n}\r\nexport function compileProgram(gpgpu, program, inputs, output) {\r\n    var userCode = program.userCode;\r\n    var inputInfos = inputs.map(function (input, i) {\r\n        var shapeInfo = {\r\n            logicalShape: input.tensor.shape,\r\n            texShape: input.texData.texShape\r\n        };\r\n        return { name: program.variableNames[i], shapeInfo: shapeInfo };\r\n    });\r\n    var inShapeInfos = inputInfos.map(function (x) { return x.shapeInfo; });\r\n    var outShapeInfo = {\r\n        logicalShape: output.tensor.shape,\r\n        texShape: output.texData.texShape\r\n    };\r\n    var source = shader_compiler.makeShader(inputInfos, outShapeInfo, userCode, program.supportsBroadcasting === true);\r\n    var webGLProgram = gpgpu.createProgram(source);\r\n    var uniformLocations = {};\r\n    for (var i = 0; i < program.variableNames.length; i++) {\r\n        var uniformName = program.variableNames[i];\r\n        uniformLocations[uniformName] =\r\n            gpgpu.getUniformLocation(webGLProgram, uniformName);\r\n    }\r\n    if (shouldUploadNaNUniform()) {\r\n        var throwIfNaNUniformIsNotUsed = false;\r\n        uniformLocations[NAN_UNIFORM_NAME] = gpgpu.getUniformLocation(webGLProgram, NAN_UNIFORM_NAME, throwIfNaNUniformIsNotUsed);\r\n    }\r\n    return {\r\n        program: program,\r\n        source: source,\r\n        webGLProgram: webGLProgram,\r\n        uniformLocations: uniformLocations,\r\n        gpgpu: gpgpu,\r\n        inShapeInfos: inShapeInfos,\r\n        outShapeInfo: outShapeInfo\r\n    };\r\n}\r\nfunction validateBinaryAndProgram(shapeInfos, inputs) {\r\n    if (shapeInfos.length !== inputs.length) {\r\n        throw Error(\"Binary was compiled with \" + shapeInfos.length + \" inputs, but \" +\r\n            (\"was executed with \" + inputs.length + \" inputs\"));\r\n    }\r\n    shapeInfos.forEach(function (s, i) {\r\n        var shapeA = s.logicalShape;\r\n        var texShapeA = s.texShape;\r\n        var shapeB = inputs[i].tensor.shape;\r\n        var texShapeB = inputs[i].texData.texShape;\r\n        if (!util.arraysEqual(shapeA, shapeB)) {\r\n            throw Error(\"Binary was compiled with different shapes than \" +\r\n                (\"the current args. Shapes \" + shapeA + \" and \" + shapeB + \" must match\"));\r\n        }\r\n        if (!util.arraysEqual(texShapeA, texShapeB)) {\r\n            throw Error(\"Binary was compiled with different texture shapes than the\" +\r\n                (\" current args. Shape \" + texShapeA + \" and \" + texShapeB + \" must match\"));\r\n        }\r\n    });\r\n}\r\nexport function runProgram(binary, inputs, output, customSetup) {\r\n    validateBinaryAndProgram(binary.inShapeInfos, inputs);\r\n    validateBinaryAndProgram([binary.outShapeInfo], [output]);\r\n    var outTex = output.texData.texture;\r\n    var outTexShape = output.texData.texShape;\r\n    var gpgpu = binary.gpgpu;\r\n    gpgpu.setOutputMatrixTexture(outTex, outTexShape[0], outTexShape[1]);\r\n    gpgpu.setProgram(binary.webGLProgram);\r\n    inputs.forEach(function (input, i) {\r\n        var tex = input.texData.texture;\r\n        var variableName = binary.program.variableNames[i];\r\n        var variableUniformLocation = binary.uniformLocations[variableName];\r\n        gpgpu.setInputMatrixTexture(tex, variableUniformLocation, i);\r\n    });\r\n    if (shouldUploadNaNUniform()) {\r\n        gpgpu.gl.uniform1f(binary.uniformLocations[NAN_UNIFORM_NAME], NaN);\r\n    }\r\n    if (customSetup != null) {\r\n        customSetup(gpgpu, binary.webGLProgram);\r\n    }\r\n    gpgpu.executeProgram();\r\n}\r\nexport function makeShaderKey(program, inputs, output) {\r\n    var keyInputs = '';\r\n    inputs.concat(output).forEach(function (x) {\r\n        keyInputs += x.tensor.shape + \"_\" + x.texData.texShape;\r\n    });\r\n    var keyUserCode = program.userCode;\r\n    var keyBroadcast = (program.supportsBroadcasting === true).toString();\r\n    var key = program.constructor.name;\r\n    key += '_' + keyBroadcast + '_' + keyInputs + '_' + keyUserCode;\r\n    return key;\r\n}\r\n//# sourceMappingURL=gpgpu_math.js.map","map":"{\"version\":3,\"file\":\"gpgpu_math.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/kernels/webgl/gpgpu_math.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/kernels/webgl/gpgpu_math.d.ts","text":"import { Tensor } from '../../tensor';\r\nimport { GPGPUContext } from './gpgpu_context';\r\nimport { ShapeInfo } from './shader_compiler';\r\nimport { TextureData } from './tex_util';\r\nexport interface GPGPUProgram {\r\n    variableNames: string[];\r\n    outputShape: number[];\r\n    userCode: string;\r\n    supportsBroadcasting?: boolean;\r\n}\r\nexport interface GPGPUBinary {\r\n    webGLProgram: WebGLProgram;\r\n    program: GPGPUProgram;\r\n    uniformLocations: {\r\n        [name: string]: WebGLUniformLocation;\r\n    };\r\n    gpgpu: GPGPUContext;\r\n    source: string;\r\n    inShapeInfos: ShapeInfo[];\r\n    outShapeInfo: ShapeInfo;\r\n}\r\nexport interface TensorData<T extends Tensor> {\r\n    tensor: T;\r\n    texData: TextureData;\r\n}\r\nexport declare function compileProgram<T extends Tensor, K extends Tensor>(gpgpu: GPGPUContext, program: GPGPUProgram, inputs: Array<TensorData<T>>, output: TensorData<K>): GPGPUBinary;\r\nexport declare function runProgram<T extends Tensor, K extends Tensor>(binary: GPGPUBinary, inputs: Array<TensorData<T>>, output: TensorData<K>, customSetup?: (gpgpu: GPGPUContext, webGLProgram: WebGLProgram) => void): void;\r\nexport declare function makeShaderKey(program: GPGPUProgram, inputs: Array<TensorData<Tensor>>, output: TensorData<Tensor>): string;\r\n"}}

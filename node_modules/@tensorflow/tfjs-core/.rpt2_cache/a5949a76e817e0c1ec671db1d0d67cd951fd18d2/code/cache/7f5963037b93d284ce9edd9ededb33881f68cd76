{"code":"import * as util from '../util';\r\nexport function assertParams(aShape, bShape, axis) {\r\n    var aRank = aShape.length;\r\n    var bRank = bShape.length;\r\n    util.assert(aShape.length === bShape.length, \"Error in concat\" + aRank + \"D: rank of x1 (\" + aRank + \") and x2 (\" + bRank + \") \" +\r\n        \"must be the same.\");\r\n    util.assert(axis >= 0 && axis < aRank, \"Error in concat\" + aRank + \"D: axis must be \" +\r\n        (\"between 0 and \" + (aRank - 1) + \".\"));\r\n    for (var i = 0; i < aRank; i++) {\r\n        util.assert((i === axis) || (aShape[i] === bShape[i]), \"Error in concat\" + aRank + \"D: Shape (\" + aShape + \") does not match \" +\r\n            (\"(\" + bShape + \") along the non-concatenated axis \" + i + \".\"));\r\n    }\r\n}\r\nexport function computeOutShape1D(x1Shape, x2Shape) {\r\n    util.assert(x1Shape.length === 1 && x2Shape.length === 1, 'x1 and x2 should be 1d array.');\r\n    var outputShape = x1Shape.slice();\r\n    outputShape[0] += x2Shape[0];\r\n    return outputShape;\r\n}\r\nexport function computeOutShape(x1Shape, x2Shape, axis) {\r\n    util.assert(x1Shape.length === x2Shape.length, 'x1 and x2 should have the same rank.');\r\n    var outputShape = x1Shape.slice();\r\n    outputShape[axis] += x2Shape[axis];\r\n    return outputShape;\r\n}\r\nexport function computeGradientSliceShapes(aShape, bShape) {\r\n    return {\r\n        aBegin: [0, 0],\r\n        aSize: aShape,\r\n        bBegin: [0, aShape[1]],\r\n        bSize: bShape\r\n    };\r\n}\r\n//# sourceMappingURL=concat_util.js.map","map":"{\"version\":3,\"file\":\"concat_util.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/ops/concat_util.ts\"],\"names\":[],\"mappings\":\"AAiBA,OAAO,KAAK,IAAI,MAAM,SAAS,CAAC;AAEhC,MAAM,uBAAuB,MAAgB,EAAE,MAAgB,EAAE,IAAY;IAC3E,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;IAC5B,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;IAC5B,IAAI,CAAC,MAAM,CACP,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,EAC/B,oBAAkB,KAAK,uBAAkB,KAAK,kBAAa,KAAK,OAAI;QAChE,mBAAmB,CAAC,CAAC;IAE7B,IAAI,CAAC,MAAM,CACP,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,KAAK,EACzB,oBAAkB,KAAK,qBAAkB;SACrC,oBAAiB,KAAK,GAAG,CAAC,OAAG,CAAA,CAAC,CAAC;IAEvC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,CACP,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,EACzC,oBAAkB,KAAK,kBAAa,MAAM,sBAAmB;aACzD,MAAI,MAAM,0CAAqC,CAAC,MAAG,CAAA,CAAC,CAAC;IAC/D,CAAC;AACH,CAAC;AAED,MAAM,4BACF,OAAiB,EAAE,OAAiB;IACtC,IAAI,CAAC,MAAM,CACP,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAC5C,+BAA+B,CAAC,CAAC;IACrC,IAAM,WAAW,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;IACpC,WAAW,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7B,MAAM,CAAC,WAAW,CAAC;AACrB,CAAC;AAED,MAAM,0BACF,OAAiB,EAAE,OAAiB,EAAE,IAAY;IACpD,IAAI,CAAC,MAAM,CACP,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,EACjC,sCAAsC,CAAC,CAAC;IAC5C,IAAM,WAAW,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;IACpC,WAAW,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;IACnC,MAAM,CAAC,WAAW,CAAC;AACrB,CAAC;AAED,MAAM,qCACF,MAAwB,EAAE,MAAwB;IACpD,MAAM,CAAC;QACL,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAqB;QAClC,KAAK,EAAE,MAAM;QACb,MAAM,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAqB;QAC1C,KAAK,EAAE,MAAM;KACd,CAAC;AACJ,CAAC\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/ops/concat_util.d.ts","text":"export declare function assertParams(aShape: number[], bShape: number[], axis: number): void;\r\nexport declare function computeOutShape1D(x1Shape: number[], x2Shape: number[]): number[];\r\nexport declare function computeOutShape(x1Shape: number[], x2Shape: number[], axis: number): number[];\r\nexport declare function computeGradientSliceShapes(aShape: [number, number], bShape: [number, number]): {\r\n    aBegin: [number, number];\r\n    aSize: [number, number];\r\n    bBegin: [number, number];\r\n    bSize: [number, number];\r\n};\r\n"}}

{"code":"var FromPixelsProgram = (function () {\r\n    function FromPixelsProgram(outputShape) {\r\n        this.variableNames = ['A'];\r\n        var height = outputShape[0], width = outputShape[1];\r\n        this.outputShape = outputShape;\r\n        this.userCode = \"\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        int texR = coords[0];\\n        int texC = coords[1];\\n        int depth = coords[2];\\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\" + width + \".0, \" + height + \".0);\\n\\n        vec4 values = texture2D(A, uv);\\n        float value;\\n        if (depth == 0) {\\n          value = values.r;\\n        } else if (depth == 1) {\\n          value = values.g;\\n        } else if (depth == 2) {\\n          value = values.b;\\n        } else if (depth == 3) {\\n          value = values.a;\\n        }\\n\\n        setOutput(floor(value * 255.0 + 0.5));\\n      }\\n    \";\r\n    }\r\n    return FromPixelsProgram;\r\n}());\r\nexport { FromPixelsProgram };\r\n//# sourceMappingURL=from_pixels_gpu.js.map","map":"{\"version\":3,\"file\":\"from_pixels_gpu.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/kernels/webgl/from_pixels_gpu.ts\"],\"names\":[],\"mappings\":\"AAmBA;IAKE,2BAAY,WAAqB;QAJjC,kBAAa,GAAG,CAAC,GAAG,CAAC,CAAC;QAKb,IAAA,uBAAM,EAAE,sBAAK,CAAkB;QACtC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,0NAMmC,KAAK,YAAO,MAAM,2YAgBpE,CAAC;IACJ,CAAC;IACH,wBAAC;AAAD,CAAC,AAhCD,IAgCC\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/kernels/webgl/from_pixels_gpu.d.ts","text":"import { GPGPUProgram } from './gpgpu_math';\r\nexport declare class FromPixelsProgram implements GPGPUProgram {\r\n    variableNames: string[];\r\n    userCode: string;\r\n    outputShape: number[];\r\n    constructor(outputShape: number[]);\r\n}\r\n"}}

{"code":"import * as tslib_1 from \"tslib\";\r\nimport { doc } from './doc';\r\nimport { ENV } from './environment';\r\nimport * as ops from './ops/ops';\r\nimport * as tensor_util from './tensor_util';\r\nimport * as util from './util';\r\nvar TensorBuffer = (function () {\r\n    function TensorBuffer(shape, dtype, values) {\r\n        this.dtype = dtype;\r\n        if (values != null) {\r\n            var n = values.length;\r\n            var size = util.sizeFromShape(shape);\r\n            util.assert(n === size, \"Length of values '\" + n + \"' does not match the size \" +\r\n                (\"inferred by the shape '\" + size + \"'\"));\r\n        }\r\n        this.shape = shape.slice();\r\n        this.values =\r\n            values || util.getTypedArrayFromDType(dtype, util.sizeFromShape(shape));\r\n        this.strides = computeStrides(shape);\r\n        this.size = util.sizeFromShape(shape);\r\n    }\r\n    TensorBuffer.prototype.set = function (value) {\r\n        var locs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            locs[_i - 1] = arguments[_i];\r\n        }\r\n        if (locs.length === 0) {\r\n            locs = [0];\r\n        }\r\n        util.assert(locs.length === this.rank, \"The number of provided coordinates (\" + locs.length + \") must \" +\r\n            (\"match the rank (\" + this.rank + \")\"));\r\n        var index = this.locToIndex(locs);\r\n        this.values[index] = value;\r\n    };\r\n    TensorBuffer.prototype.get = function () {\r\n        var locs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            locs[_i] = arguments[_i];\r\n        }\r\n        if (locs.length === 0) {\r\n            locs = [0];\r\n        }\r\n        var index = locs[locs.length - 1];\r\n        for (var i = 0; i < locs.length - 1; ++i) {\r\n            index += this.strides[i] * locs[i];\r\n        }\r\n        return this.values[index];\r\n    };\r\n    TensorBuffer.prototype.locToIndex = function (locs) {\r\n        if (this.rank === 0) {\r\n            return 0;\r\n        }\r\n        else if (this.rank === 1) {\r\n            return locs[0];\r\n        }\r\n        var index = locs[locs.length - 1];\r\n        for (var i = 0; i < locs.length - 1; ++i) {\r\n            index += this.strides[i] * locs[i];\r\n        }\r\n        return index;\r\n    };\r\n    TensorBuffer.prototype.indexToLoc = function (index) {\r\n        if (this.rank === 0) {\r\n            return [];\r\n        }\r\n        else if (this.rank === 1) {\r\n            return [index];\r\n        }\r\n        var locs = new Array(this.shape.length);\r\n        for (var i = 0; i < locs.length - 1; ++i) {\r\n            locs[i] = Math.floor(index / this.strides[i]);\r\n            index -= locs[i] * this.strides[i];\r\n        }\r\n        locs[locs.length - 1] = index;\r\n        return locs;\r\n    };\r\n    Object.defineProperty(TensorBuffer.prototype, \"rank\", {\r\n        get: function () {\r\n            return this.shape.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TensorBuffer.prototype.toTensor = function () {\r\n        return Tensor.make(this.shape, { values: this.values }, this.dtype);\r\n    };\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Creation' })\r\n    ], TensorBuffer.prototype, \"set\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Creation' })\r\n    ], TensorBuffer.prototype, \"get\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Creation' })\r\n    ], TensorBuffer.prototype, \"toTensor\", null);\r\n    TensorBuffer = tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], TensorBuffer);\r\n    return TensorBuffer;\r\n}());\r\nexport { TensorBuffer };\r\nvar Tensor = (function () {\r\n    function Tensor(shape, dtype, values, dataId) {\r\n        this.isDisposed = false;\r\n        this.size = util.sizeFromShape(shape);\r\n        if (values != null) {\r\n            util.assert(this.size === values.length, \"Constructing tensor of shape (\" + this.size + \") should match the \" +\r\n                (\"length of values (\" + values.length + \")\"));\r\n        }\r\n        this.shape = shape.slice();\r\n        this.dtype = dtype || 'float32';\r\n        this.strides = computeStrides(shape);\r\n        this.dataId = dataId != null ? dataId : {};\r\n        this.id = Tensor_1.nextId++;\r\n        this.rankType = (this.rank < 5 ? this.rank.toString() : 'higher');\r\n        ENV.engine.registerTensor(this);\r\n        if (values != null) {\r\n            ENV.engine.write(this.dataId, values);\r\n        }\r\n    }\r\n    Tensor_1 = Tensor;\r\n    Tensor.make = function (shape, data, dtype) {\r\n        return new Tensor_1(shape, dtype, data.values, data.dataId);\r\n    };\r\n    Tensor.prototype.flatten = function () {\r\n        this.throwIfDisposed();\r\n        return this.as1D();\r\n    };\r\n    Tensor.prototype.asScalar = function () {\r\n        this.throwIfDisposed();\r\n        util.assert(this.size === 1, 'The array must have only 1 element.');\r\n        return this.reshape([]);\r\n    };\r\n    Tensor.prototype.as1D = function () {\r\n        this.throwIfDisposed();\r\n        return this.reshape([this.size]);\r\n    };\r\n    Tensor.prototype.as2D = function (rows, columns) {\r\n        this.throwIfDisposed();\r\n        return this.reshape([rows, columns]);\r\n    };\r\n    Tensor.prototype.as3D = function (rows, columns, depth) {\r\n        this.throwIfDisposed();\r\n        return this.reshape([rows, columns, depth]);\r\n    };\r\n    Tensor.prototype.as4D = function (rows, columns, depth, depth2) {\r\n        this.throwIfDisposed();\r\n        return this.reshape([rows, columns, depth, depth2]);\r\n    };\r\n    Tensor.prototype.asType = function (dtype) {\r\n        this.throwIfDisposed();\r\n        return ops.cast(this, dtype);\r\n    };\r\n    Object.defineProperty(Tensor.prototype, \"rank\", {\r\n        get: function () {\r\n            return this.shape.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Tensor.prototype.get = function () {\r\n        var locs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            locs[_i] = arguments[_i];\r\n        }\r\n        util.assert(locs.length === this.rank, 'Number of coordinates in get() must match the rank of the tensor');\r\n        this.throwIfDisposed();\r\n        if (locs.length === 0) {\r\n            locs = [0];\r\n        }\r\n        var index = locs[locs.length - 1];\r\n        for (var i = 0; i < locs.length - 1; ++i) {\r\n            index += this.strides[i] * locs[i];\r\n        }\r\n        return this.dataSync()[index];\r\n    };\r\n    Tensor.prototype.buffer = function () {\r\n        return ops.buffer(this.shape, this.dtype, this.dataSync());\r\n    };\r\n    Tensor.prototype.data = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.throwIfDisposed();\r\n                return [2, ENV.engine.read(this.dataId)];\r\n            });\r\n        });\r\n    };\r\n    Tensor.prototype.dataSync = function () {\r\n        this.throwIfDisposed();\r\n        return ENV.engine.readSync(this.dataId);\r\n    };\r\n    Tensor.prototype.dispose = function () {\r\n        if (this.isDisposed) {\r\n            return;\r\n        }\r\n        this.isDisposed = true;\r\n        ENV.engine.disposeTensor(this);\r\n    };\r\n    Tensor.prototype.throwIfDisposed = function () {\r\n        if (this.isDisposed) {\r\n            throw new Error(\"Tensor is disposed.\");\r\n        }\r\n    };\r\n    Tensor.prototype.toFloat = function () {\r\n        return this.asType('float32');\r\n    };\r\n    Tensor.prototype.toInt = function () {\r\n        return this.asType('int32');\r\n    };\r\n    Tensor.prototype.toBool = function () {\r\n        return this.asType('bool');\r\n    };\r\n    Tensor.prototype.print = function (verbose) {\r\n        if (verbose === void 0) { verbose = false; }\r\n        return ops.print(this, verbose);\r\n    };\r\n    Tensor.prototype.reshape = function (newShape) {\r\n        this.throwIfDisposed();\r\n        return ops.reshape(this, newShape);\r\n    };\r\n    Tensor.prototype.reshapeAs = function (x) {\r\n        this.throwIfDisposed();\r\n        return this.reshape(x.shape);\r\n    };\r\n    Tensor.prototype.expandDims = function (axis) {\r\n        if (axis === void 0) { axis = 0; }\r\n        return ops.expandDims(this, axis);\r\n    };\r\n    Tensor.prototype.cumsum = function (axis, exclusive, reverse) {\r\n        if (axis === void 0) { axis = 0; }\r\n        if (exclusive === void 0) { exclusive = false; }\r\n        if (reverse === void 0) { reverse = false; }\r\n        return ops.cumsum(this, axis, exclusive, reverse);\r\n    };\r\n    Tensor.prototype.squeeze = function (axis) {\r\n        this.throwIfDisposed();\r\n        return ops.squeeze(this, axis);\r\n    };\r\n    Tensor.prototype.clone = function () {\r\n        this.throwIfDisposed();\r\n        return ops.clone(this);\r\n    };\r\n    Tensor.prototype.toString = function (verbose) {\r\n        if (verbose === void 0) { verbose = false; }\r\n        return tensor_util.tensorToString(this, verbose);\r\n    };\r\n    Tensor.prototype.tile = function (reps) {\r\n        this.throwIfDisposed();\r\n        return ops.tile(this, reps);\r\n    };\r\n    Tensor.prototype.gather = function (indices, axis) {\r\n        if (axis === void 0) { axis = 0; }\r\n        this.throwIfDisposed();\r\n        return ops.gather(this, indices, axis);\r\n    };\r\n    Tensor.prototype.matMul = function (b, transposeA, transposeB) {\r\n        if (transposeA === void 0) { transposeA = false; }\r\n        if (transposeB === void 0) { transposeB = false; }\r\n        this.throwIfDisposed();\r\n        return ops.matMul(this, b, transposeA, transposeB);\r\n    };\r\n    Tensor.prototype.norm = function (ord, axis, keepDims) {\r\n        if (ord === void 0) { ord = 'euclidean'; }\r\n        if (axis === void 0) { axis = null; }\r\n        if (keepDims === void 0) { keepDims = false; }\r\n        this.throwIfDisposed();\r\n        return ops.norm(this, ord, axis, keepDims);\r\n    };\r\n    Tensor.prototype.slice = function (begin, size) {\r\n        this.throwIfDisposed();\r\n        return ops.slice(this, begin, size);\r\n    };\r\n    Tensor.prototype.reverse = function (axis) {\r\n        this.throwIfDisposed();\r\n        return ops.reverse(this, axis);\r\n    };\r\n    Tensor.prototype.concat = function (x, axis) {\r\n        if (axis === void 0) { axis = 0; }\r\n        this.throwIfDisposed();\r\n        return ops.concat([this, x], axis);\r\n    };\r\n    Tensor.prototype.stack = function (x, axis) {\r\n        if (axis === void 0) { axis = 0; }\r\n        return ops.stack([this, x], axis);\r\n    };\r\n    Tensor.prototype.pad = function (paddings, constantValue) {\r\n        if (constantValue === void 0) { constantValue = 0; }\r\n        return ops.pad(this, paddings, constantValue);\r\n    };\r\n    Tensor.prototype.batchNormalization = function (mean, variance, varianceEpsilon, scale, offset) {\r\n        if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\r\n        this.throwIfDisposed();\r\n        return ops.batchNormalization(this, mean, variance, varianceEpsilon, scale, offset);\r\n    };\r\n    Tensor.prototype.logSumExp = function (axis, keepDims) {\r\n        if (axis === void 0) { axis = null; }\r\n        if (keepDims === void 0) { keepDims = false; }\r\n        this.throwIfDisposed();\r\n        return ops.logSumExp(this, axis, keepDims);\r\n    };\r\n    Tensor.prototype.sum = function (axis, keepDims) {\r\n        if (axis === void 0) { axis = null; }\r\n        if (keepDims === void 0) { keepDims = false; }\r\n        this.throwIfDisposed();\r\n        return ops.sum(this, axis, keepDims);\r\n    };\r\n    Tensor.prototype.mean = function (axis, keepDims) {\r\n        if (axis === void 0) { axis = null; }\r\n        if (keepDims === void 0) { keepDims = false; }\r\n        this.throwIfDisposed();\r\n        return ops.mean(this, axis, keepDims);\r\n    };\r\n    Tensor.prototype.min = function (axis, keepDims) {\r\n        if (axis === void 0) { axis = null; }\r\n        if (keepDims === void 0) { keepDims = false; }\r\n        this.throwIfDisposed();\r\n        return ops.min(this, axis, keepDims);\r\n    };\r\n    Tensor.prototype.max = function (axis, keepDims) {\r\n        if (axis === void 0) { axis = null; }\r\n        if (keepDims === void 0) { keepDims = false; }\r\n        this.throwIfDisposed();\r\n        return ops.max(this, axis, keepDims);\r\n    };\r\n    Tensor.prototype.argMin = function (axis) {\r\n        if (axis === void 0) { axis = null; }\r\n        this.throwIfDisposed();\r\n        return ops.argMin(this, axis);\r\n    };\r\n    Tensor.prototype.argMax = function (axis) {\r\n        if (axis === void 0) { axis = null; }\r\n        this.throwIfDisposed();\r\n        return ops.argMax(this, axis);\r\n    };\r\n    Tensor.prototype.cast = function (dtype) {\r\n        this.throwIfDisposed();\r\n        return ops.cast(this, dtype);\r\n    };\r\n    Tensor.prototype.add = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.add(this, x);\r\n    };\r\n    Tensor.prototype.addStrict = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.addStrict(this, x);\r\n    };\r\n    Tensor.prototype.sub = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.sub(this, x);\r\n    };\r\n    Tensor.prototype.subStrict = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.subStrict(this, x);\r\n    };\r\n    Tensor.prototype.pow = function (exp) {\r\n        this.throwIfDisposed();\r\n        return ops.pow(this, exp);\r\n    };\r\n    Tensor.prototype.powStrict = function (exp) {\r\n        this.throwIfDisposed();\r\n        return ops.powStrict(this, exp);\r\n    };\r\n    Tensor.prototype.mul = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.mul(this, x);\r\n    };\r\n    Tensor.prototype.mulStrict = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.mulStrict(this, x);\r\n    };\r\n    Tensor.prototype.div = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.div(this, x);\r\n    };\r\n    Tensor.prototype.divStrict = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.divStrict(this, x);\r\n    };\r\n    Tensor.prototype.minimum = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.minimum(this, x);\r\n    };\r\n    Tensor.prototype.minimumStrict = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.minimumStrict(this, x);\r\n    };\r\n    Tensor.prototype.maximum = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.maximum(this, x);\r\n    };\r\n    Tensor.prototype.maximumStrict = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.maximumStrict(this, x);\r\n    };\r\n    Tensor.prototype.mod = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.mod(this, x);\r\n    };\r\n    Tensor.prototype.modStrict = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.modStrict(this, x);\r\n    };\r\n    Tensor.prototype.squaredDifference = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.squaredDifference(this, x);\r\n    };\r\n    Tensor.prototype.squaredDifferenceStrict = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.squaredDifferenceStrict(this, x);\r\n    };\r\n    Tensor.prototype.transpose = function (perm) {\r\n        this.throwIfDisposed();\r\n        return ops.transpose(this, perm);\r\n    };\r\n    Tensor.prototype.notEqual = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.notEqual(this, x);\r\n    };\r\n    Tensor.prototype.notEqualStrict = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.notEqualStrict(this, x);\r\n    };\r\n    Tensor.prototype.less = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.less(this, x);\r\n    };\r\n    Tensor.prototype.lessStrict = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.lessStrict(this, x);\r\n    };\r\n    Tensor.prototype.equal = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.equal(this, x);\r\n    };\r\n    Tensor.prototype.equalStrict = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.equalStrict(this, x);\r\n    };\r\n    Tensor.prototype.lessEqual = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.lessEqual(this, x);\r\n    };\r\n    Tensor.prototype.lessEqualStrict = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.lessEqualStrict(this, x);\r\n    };\r\n    Tensor.prototype.greater = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.greater(this, x);\r\n    };\r\n    Tensor.prototype.greaterStrict = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.greaterStrict(this, x);\r\n    };\r\n    Tensor.prototype.greaterEqual = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.greaterEqual(this, x);\r\n    };\r\n    Tensor.prototype.greaterEqualStrict = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.greaterEqualStrict(this, x);\r\n    };\r\n    Tensor.prototype.logicalAnd = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.logicalAnd(this, x);\r\n    };\r\n    Tensor.prototype.logicalOr = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.logicalOr(this, x);\r\n    };\r\n    Tensor.prototype.logicalNot = function () {\r\n        this.throwIfDisposed();\r\n        return ops.logicalNot(this);\r\n    };\r\n    Tensor.prototype.logicalXor = function (x) {\r\n        this.throwIfDisposed();\r\n        return ops.logicalXor(this, x);\r\n    };\r\n    Tensor.prototype.where = function (condition, x) {\r\n        this.throwIfDisposed();\r\n        return ops.where(condition, this, x);\r\n    };\r\n    Tensor.prototype.neg = function () {\r\n        this.throwIfDisposed();\r\n        return ops.neg(this);\r\n    };\r\n    Tensor.prototype.ceil = function () {\r\n        this.throwIfDisposed();\r\n        return ops.ceil(this);\r\n    };\r\n    Tensor.prototype.floor = function () {\r\n        this.throwIfDisposed();\r\n        return ops.floor(this);\r\n    };\r\n    Tensor.prototype.sign = function () {\r\n        this.throwIfDisposed();\r\n        return ops.sign(this);\r\n    };\r\n    Tensor.prototype.exp = function () {\r\n        this.throwIfDisposed();\r\n        return ops.exp(this);\r\n    };\r\n    Tensor.prototype.expm1 = function () {\r\n        this.throwIfDisposed();\r\n        return ops.expm1(this);\r\n    };\r\n    Tensor.prototype.log = function () {\r\n        this.throwIfDisposed();\r\n        return ops.log(this);\r\n    };\r\n    Tensor.prototype.log1p = function () {\r\n        this.throwIfDisposed();\r\n        return ops.log1p(this);\r\n    };\r\n    Tensor.prototype.sqrt = function () {\r\n        this.throwIfDisposed();\r\n        return ops.sqrt(this);\r\n    };\r\n    Tensor.prototype.rsqrt = function () {\r\n        this.throwIfDisposed();\r\n        return ops.rsqrt(this);\r\n    };\r\n    Tensor.prototype.square = function () {\r\n        this.throwIfDisposed();\r\n        return ops.square(this);\r\n    };\r\n    Tensor.prototype.reciprocal = function () {\r\n        this.throwIfDisposed();\r\n        return ops.reciprocal(this);\r\n    };\r\n    Tensor.prototype.abs = function () {\r\n        this.throwIfDisposed();\r\n        return ops.abs(this);\r\n    };\r\n    Tensor.prototype.clipByValue = function (min, max) {\r\n        this.throwIfDisposed();\r\n        return ops.clipByValue(this, min, max);\r\n    };\r\n    Tensor.prototype.relu = function () {\r\n        this.throwIfDisposed();\r\n        return ops.relu(this);\r\n    };\r\n    Tensor.prototype.elu = function () {\r\n        this.throwIfDisposed();\r\n        return ops.elu(this);\r\n    };\r\n    Tensor.prototype.selu = function () {\r\n        this.throwIfDisposed();\r\n        return ops.selu(this);\r\n    };\r\n    Tensor.prototype.leakyRelu = function (alpha) {\r\n        if (alpha === void 0) { alpha = 0.2; }\r\n        this.throwIfDisposed();\r\n        return ops.leakyRelu(this, alpha);\r\n    };\r\n    Tensor.prototype.prelu = function (alpha) {\r\n        this.throwIfDisposed();\r\n        return ops.prelu(this, alpha);\r\n    };\r\n    Tensor.prototype.sigmoid = function () {\r\n        this.throwIfDisposed();\r\n        return ops.sigmoid(this);\r\n    };\r\n    Tensor.prototype.logSigmoid = function () {\r\n        this.throwIfDisposed();\r\n        return ops.logSigmoid(this);\r\n    };\r\n    Tensor.prototype.softplus = function () {\r\n        this.throwIfDisposed();\r\n        return ops.softplus(this);\r\n    };\r\n    Tensor.prototype.sin = function () {\r\n        this.throwIfDisposed();\r\n        return ops.sin(this);\r\n    };\r\n    Tensor.prototype.cos = function () {\r\n        this.throwIfDisposed();\r\n        return ops.cos(this);\r\n    };\r\n    Tensor.prototype.tan = function () {\r\n        this.throwIfDisposed();\r\n        return ops.tan(this);\r\n    };\r\n    Tensor.prototype.asin = function () {\r\n        this.throwIfDisposed();\r\n        return ops.asin(this);\r\n    };\r\n    Tensor.prototype.acos = function () {\r\n        this.throwIfDisposed();\r\n        return ops.acos(this);\r\n    };\r\n    Tensor.prototype.atan = function () {\r\n        this.throwIfDisposed();\r\n        return ops.atan(this);\r\n    };\r\n    Tensor.prototype.sinh = function () {\r\n        this.throwIfDisposed();\r\n        return ops.sinh(this);\r\n    };\r\n    Tensor.prototype.cosh = function () {\r\n        this.throwIfDisposed();\r\n        return ops.cosh(this);\r\n    };\r\n    Tensor.prototype.tanh = function () {\r\n        this.throwIfDisposed();\r\n        return ops.tanh(this);\r\n    };\r\n    Tensor.prototype.asinh = function () {\r\n        this.throwIfDisposed();\r\n        return ops.asinh(this);\r\n    };\r\n    Tensor.prototype.acosh = function () {\r\n        this.throwIfDisposed();\r\n        return ops.acosh(this);\r\n    };\r\n    Tensor.prototype.atanh = function () {\r\n        this.throwIfDisposed();\r\n        return ops.atanh(this);\r\n    };\r\n    Tensor.prototype.erf = function () {\r\n        this.throwIfDisposed();\r\n        return ops.erf(this);\r\n    };\r\n    Tensor.prototype.round = function () {\r\n        this.throwIfDisposed();\r\n        return ops.round(this);\r\n    };\r\n    Tensor.prototype.step = function (alpha) {\r\n        if (alpha === void 0) { alpha = 0.0; }\r\n        this.throwIfDisposed();\r\n        return ops.step(this, alpha);\r\n    };\r\n    Tensor.prototype.softmax = function (dim) {\r\n        if (dim === void 0) { dim = -1; }\r\n        this.throwIfDisposed();\r\n        return ops.softmax(this, dim);\r\n    };\r\n    Tensor.prototype.resizeBilinear = function (newShape2D, alignCorners) {\r\n        if (alignCorners === void 0) { alignCorners = false; }\r\n        this.throwIfDisposed();\r\n        return ops.image.resizeBilinear(this, newShape2D, alignCorners);\r\n    };\r\n    Tensor.prototype.resizeNearestNeighbor = function (newShape2D, alignCorners) {\r\n        if (alignCorners === void 0) { alignCorners = false; }\r\n        this.throwIfDisposed();\r\n        return ops.image.resizeNearestNeighbor(this, newShape2D, alignCorners);\r\n    };\r\n    Tensor.prototype.conv1d = function (filter, stride, pad, dataFormat, dilation, dimRoundingMode) {\r\n        if (dataFormat === void 0) { dataFormat = 'NWC'; }\r\n        if (dilation === void 0) { dilation = 1; }\r\n        this.throwIfDisposed();\r\n        return ops.conv1d(this, filter, stride, pad, dataFormat, dilation, dimRoundingMode);\r\n    };\r\n    Tensor.prototype.conv2d = function (filter, strides, pad, dataFormat, dilations, dimRoundingMode) {\r\n        if (dataFormat === void 0) { dataFormat = 'NHWC'; }\r\n        if (dilations === void 0) { dilations = [1, 1]; }\r\n        this.throwIfDisposed();\r\n        return ops.conv2d(this, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\r\n    };\r\n    Tensor.prototype.conv2dTranspose = function (filter, outputShape, strides, pad, dimRoundingMode) {\r\n        this.throwIfDisposed();\r\n        return ops.conv2dTranspose(this, filter, outputShape, strides, pad, dimRoundingMode);\r\n    };\r\n    Tensor.prototype.depthwiseConv2D = function (filter, strides, pad, dataFormat, dilations, dimRoundingMode) {\r\n        if (dataFormat === void 0) { dataFormat = 'NHWC'; }\r\n        if (dilations === void 0) { dilations = [1, 1]; }\r\n        this.throwIfDisposed();\r\n        return ops.depthwiseConv2d(this, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\r\n    };\r\n    Tensor.prototype.avgPool = function (filterSize, strides, pad, dimRoundingMode) {\r\n        this.throwIfDisposed();\r\n        return ops.avgPool(this, filterSize, strides, pad, dimRoundingMode);\r\n    };\r\n    Tensor.prototype.maxPool = function (filterSize, strides, pad, dimRoundingMode) {\r\n        this.throwIfDisposed();\r\n        return ops.maxPool(this, filterSize, strides, pad, dimRoundingMode);\r\n    };\r\n    Tensor.prototype.localResponseNormalization = function (radius, bias, alpha, beta) {\r\n        if (radius === void 0) { radius = 5; }\r\n        if (bias === void 0) { bias = 1; }\r\n        if (alpha === void 0) { alpha = 1; }\r\n        if (beta === void 0) { beta = 0.5; }\r\n        return ops.localResponseNormalization(this, radius, bias, alpha, beta);\r\n    };\r\n    Tensor.prototype.variable = function (trainable, name, dtype) {\r\n        if (trainable === void 0) { trainable = true; }\r\n        this.throwIfDisposed();\r\n        return Variable.variable(this, trainable, name, dtype);\r\n    };\r\n    Tensor.prototype.unsortedSegmentSum = function (segmentIds, numSegments, axis) {\r\n        if (axis === void 0) { axis = 0; }\r\n        this.throwIfDisposed();\r\n        return ops.unsortedSegmentSum(this, segmentIds, numSegments, axis);\r\n    };\r\n    Tensor.nextId = 0;\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"flatten\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"asScalar\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"as1D\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"as2D\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"as3D\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"as4D\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"asType\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"buffer\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"data\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"dataSync\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"dispose\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"toFloat\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"toInt\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"toBool\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"print\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"reshape\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"reshapeAs\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"expandDims\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"cumsum\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"squeeze\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"clone\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor.prototype, \"toString\", null);\r\n    Tensor = Tensor_1 = tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Tensor);\r\n    return Tensor;\r\n    var Tensor_1;\r\n}());\r\nexport { Tensor };\r\nvar Variable = (function (_super) {\r\n    tslib_1.__extends(Variable, _super);\r\n    function Variable(initialValue, trainable, name) {\r\n        if (trainable === void 0) { trainable = true; }\r\n        var _this = _super.call(this, initialValue.shape, initialValue.dtype, null, initialValue.dataId) || this;\r\n        _this.trainable = trainable;\r\n        _this.name = name;\r\n        if (_this.name == null) {\r\n            _this.name = Variable_1.nextVarId.toString();\r\n            Variable_1.nextVarId++;\r\n        }\r\n        ENV.engine.registerVariable(_this);\r\n        return _this;\r\n    }\r\n    Variable_1 = Variable;\r\n    Variable.variable = function (initialValue, trainable, name, dtype) {\r\n        if (trainable === void 0) { trainable = true; }\r\n        if (dtype != null && dtype !== initialValue.dtype) {\r\n            initialValue = initialValue.asType(dtype);\r\n        }\r\n        return new Variable_1(initialValue, trainable, name);\r\n    };\r\n    Variable.prototype.assign = function (newValue) {\r\n        if (newValue.dtype !== this.dtype) {\r\n            throw new Error(\"dtype of the new value (\" + newValue.dtype + \") and \" +\r\n                (\"previous value (\" + this.dtype + \") must match\"));\r\n        }\r\n        if (!util.arraysEqual(newValue.shape, this.shape)) {\r\n            throw new Error(\"shape of the new value (\" + newValue.shape + \") and \" +\r\n                (\"previous value (\" + this.shape + \") must match\"));\r\n        }\r\n        ENV.engine.disposeTensor(this);\r\n        this.dataId = newValue.dataId;\r\n        ENV.engine.registerTensor(this);\r\n    };\r\n    Variable.nextVarId = 0;\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Variable.prototype, \"assign\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Creation' })\r\n    ], Variable, \"variable\", null);\r\n    Variable = Variable_1 = tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Classes' })\r\n    ], Variable);\r\n    return Variable;\r\n    var Variable_1;\r\n}(Tensor));\r\nexport { Variable };\r\nvar variable = Variable.variable;\r\nexport { variable };\r\nfunction computeStrides(shape) {\r\n    var rank = shape.length;\r\n    if (rank < 2) {\r\n        return [];\r\n    }\r\n    var strides = new Array(rank - 1);\r\n    strides[rank - 2] = shape[rank - 1];\r\n    for (var i = rank - 3; i >= 0; --i) {\r\n        strides[i] = strides[i + 1] * shape[i + 1];\r\n    }\r\n    return strides;\r\n}\r\n//# sourceMappingURL=tensor.js.map","map":"{\"version\":3,\"file\":\"tensor.js\",\"sourceRoot\":\"\",\"sources\":[\"src/tensor.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/tensor.d.ts","text":"import { DataType, Rank, ShapeMap, TypedArray } from './types';\r\nexport interface TensorData {\r\n    dataId?: DataId;\r\n    values?: TypedArray;\r\n}\r\nexport declare class TensorBuffer<R extends Rank> {\r\n    dtype: DataType;\r\n    size: number;\r\n    shape: ShapeMap[R];\r\n    strides: number[];\r\n    values: TypedArray;\r\n    constructor(shape: ShapeMap[R], dtype: DataType, values: TypedArray);\r\n    set(value: number, ...locs: number[]): void;\r\n    get(...locs: number[]): number;\r\n    locToIndex(locs: number[]): number;\r\n    indexToLoc(index: number): number[];\r\n    readonly rank: number;\r\n    toTensor(): Tensor<R>;\r\n}\r\nexport declare type DataId = object;\r\nexport declare class Tensor<R extends Rank = Rank> {\r\n    private static nextId;\r\n    readonly id: number;\r\n    dataId: DataId;\r\n    readonly shape: ShapeMap[R];\r\n    readonly size: number;\r\n    readonly dtype: DataType;\r\n    readonly rankType: R;\r\n    readonly strides: number[];\r\n    protected constructor(shape: ShapeMap[R], dtype: DataType, values?: TypedArray, dataId?: DataId);\r\n    static make<T extends Tensor<R>, D extends DataType = 'float32', R extends Rank = Rank>(shape: ShapeMap[R], data: TensorData, dtype?: D): T;\r\n    flatten(): Tensor1D;\r\n    asScalar(): Scalar;\r\n    as1D(): Tensor1D;\r\n    as2D(rows: number, columns: number): Tensor2D;\r\n    as3D(rows: number, columns: number, depth: number): Tensor3D;\r\n    as4D(rows: number, columns: number, depth: number, depth2: number): Tensor4D;\r\n    asType<T extends this>(this: T, dtype: DataType): T;\r\n    readonly rank: number;\r\n    get(...locs: number[]): number;\r\n    buffer(): TensorBuffer<R>;\r\n    data(): Promise<TypedArray>;\r\n    dataSync(): TypedArray;\r\n    dispose(): void;\r\n    private isDisposed;\r\n    private throwIfDisposed();\r\n    toFloat<T extends this>(this: T): T;\r\n    toInt(): this;\r\n    toBool(): this;\r\n    print(verbose?: boolean): void;\r\n    reshape<R2 extends Rank>(newShape: ShapeMap[R2]): Tensor<R2>;\r\n    reshapeAs<T extends Tensor>(x: T): T;\r\n    expandDims<R2 extends Rank>(axis?: number): Tensor<R2>;\r\n    cumsum<T extends Tensor>(axis?: number, exclusive?: boolean, reverse?: boolean): T;\r\n    squeeze<T extends Tensor>(axis?: number[]): T;\r\n    clone<T extends Tensor>(this: T): T;\r\n    toString(verbose?: boolean): string;\r\n    tile<T extends this>(this: T, reps: number[]): T;\r\n    gather<T extends this>(this: T, indices: Tensor1D, axis?: number): T;\r\n    matMul(b: Tensor2D, transposeA?: boolean, transposeB?: boolean): Tensor2D;\r\n    norm(ord?: number | 'euclidean' | 'fro', axis?: number | number[], keepDims?: boolean): Tensor;\r\n    slice<T extends Tensor<R>>(this: T, begin: number | number[], size?: number | number[]): T;\r\n    reverse<T extends Tensor>(this: T, axis?: number | number[]): T;\r\n    concat<T extends Tensor>(this: T, x: T, axis?: number): T;\r\n    stack(x: Tensor, axis?: number): Tensor;\r\n    pad<T extends Tensor>(this: T, paddings: Array<[number, number]>, constantValue?: number): T;\r\n    batchNormalization(mean: Tensor<R> | Tensor1D, variance: Tensor<R> | Tensor1D, varianceEpsilon?: number, scale?: Tensor<R> | Tensor1D, offset?: Tensor<R> | Tensor1D): Tensor<R>;\r\n    logSumExp<T extends Tensor>(axis?: number | number[], keepDims?: boolean): T;\r\n    sum<T extends Tensor>(axis?: number | number[], keepDims?: boolean): T;\r\n    mean<T extends Tensor>(axis?: number | number[], keepDims?: boolean): T;\r\n    min<T extends Tensor>(axis?: number | number[], keepDims?: boolean): T;\r\n    max<T extends Tensor>(axis?: number | number[], keepDims?: boolean): T;\r\n    argMin<T extends Tensor>(axis?: number): T;\r\n    argMax<T extends Tensor>(axis?: number): T;\r\n    cast<T extends this>(dtype: DataType): T;\r\n    add<T extends Tensor>(x: Tensor): T;\r\n    addStrict<T extends this>(this: T, x: T): T;\r\n    sub<T extends Tensor>(x: Tensor): T;\r\n    subStrict<T extends this>(this: T, x: T): T;\r\n    pow<T extends Tensor>(this: T, exp: Tensor): T;\r\n    powStrict(exp: Tensor): Tensor<R>;\r\n    mul<T extends Tensor>(x: Tensor): T;\r\n    mulStrict<T extends this>(this: T, x: T): T;\r\n    div<T extends Tensor>(x: Tensor): T;\r\n    divStrict<T extends this>(this: T, x: T): T;\r\n    minimum<T extends Tensor>(x: Tensor): T;\r\n    minimumStrict<T extends this>(this: T, x: T): T;\r\n    maximum<T extends Tensor>(x: Tensor): T;\r\n    maximumStrict<T extends this>(this: T, x: T): T;\r\n    mod<T extends Tensor>(x: Tensor): T;\r\n    modStrict<T extends this>(this: T, x: T): T;\r\n    squaredDifference<T extends Tensor>(x: Tensor): T;\r\n    squaredDifferenceStrict<T extends this>(this: T, x: T): T;\r\n    transpose<T extends Tensor>(this: T, perm?: number[]): T;\r\n    notEqual<T extends Tensor>(x: Tensor): T;\r\n    notEqualStrict<T extends this>(this: T, x: T): T;\r\n    less<T extends Tensor>(x: Tensor): T;\r\n    lessStrict<T extends this>(this: T, x: T): T;\r\n    equal<T extends Tensor>(x: Tensor): T;\r\n    equalStrict<T extends this>(this: T, x: T): T;\r\n    lessEqual<T extends Tensor>(x: Tensor): T;\r\n    lessEqualStrict<T extends this>(this: T, x: T): T;\r\n    greater<T extends Tensor>(x: Tensor): T;\r\n    greaterStrict<T extends this>(this: T, x: T): T;\r\n    greaterEqual<T extends Tensor>(x: Tensor): T;\r\n    greaterEqualStrict<T extends this>(this: T, x: T): T;\r\n    logicalAnd(x: Tensor): Tensor;\r\n    logicalOr(x: Tensor): Tensor;\r\n    logicalNot<T extends Tensor>(this: T): T;\r\n    logicalXor(x: Tensor): Tensor;\r\n    where(condition: Tensor, x: Tensor): Tensor;\r\n    neg<T extends Tensor>(this: T): T;\r\n    ceil<T extends Tensor>(this: T): T;\r\n    floor<T extends Tensor>(this: T): T;\r\n    sign<T extends Tensor>(this: T): T;\r\n    exp<T extends Tensor>(this: T): T;\r\n    expm1<T extends Tensor>(this: T): T;\r\n    log<T extends Tensor>(this: T): T;\r\n    log1p<T extends Tensor>(this: T): T;\r\n    sqrt<T extends Tensor>(this: T): T;\r\n    rsqrt<T extends Tensor>(this: T): T;\r\n    square<T extends Tensor>(this: T): T;\r\n    reciprocal<T extends Tensor>(this: T): T;\r\n    abs<T extends Tensor>(this: T): T;\r\n    clipByValue(min: number, max: number): Tensor<R>;\r\n    relu<T extends Tensor>(this: T): T;\r\n    elu<T extends Tensor>(this: T): T;\r\n    selu<T extends Tensor>(this: T): T;\r\n    leakyRelu(alpha?: number): Tensor<R>;\r\n    prelu(alpha: Tensor<R>): Tensor<R>;\r\n    sigmoid<T extends Tensor>(this: T): T;\r\n    logSigmoid<T extends Tensor>(this: T): T;\r\n    softplus<T extends Tensor>(this: T): T;\r\n    sin<T extends Tensor>(this: T): T;\r\n    cos<T extends Tensor>(this: T): T;\r\n    tan<T extends Tensor>(this: T): T;\r\n    asin<T extends Tensor>(this: T): T;\r\n    acos<T extends Tensor>(this: T): T;\r\n    atan<T extends Tensor>(this: T): T;\r\n    sinh<T extends Tensor>(this: T): T;\r\n    cosh<T extends Tensor>(this: T): T;\r\n    tanh<T extends Tensor>(this: T): T;\r\n    asinh<T extends Tensor>(this: T): T;\r\n    acosh<T extends Tensor>(this: T): T;\r\n    atanh<T extends Tensor>(this: T): T;\r\n    erf<T extends Tensor>(this: T): T;\r\n    round<T extends Tensor>(this: T): T;\r\n    step<T extends Tensor>(this: T, alpha?: number): T;\r\n    softmax<T extends this>(this: T, dim?: number): T;\r\n    resizeBilinear<T extends Tensor3D | Tensor4D>(this: T, newShape2D: [number, number], alignCorners?: boolean): T;\r\n    resizeNearestNeighbor<T extends Tensor3D | Tensor4D>(this: T, newShape2D: [number, number], alignCorners?: boolean): T;\r\n    conv1d<T extends Tensor2D | Tensor3D>(this: T, filter: Tensor3D, stride: number, pad: 'valid' | 'same' | number, dataFormat?: 'NWC' | 'NCW', dilation?: number, dimRoundingMode?: 'floor' | 'round' | 'ceil'): T;\r\n    conv2d<T extends Tensor3D | Tensor4D>(this: T, filter: Tensor4D, strides: [number, number] | number, pad: 'valid' | 'same' | number, dataFormat?: 'NHWC' | 'NCHW', dilations?: [number, number] | number, dimRoundingMode?: 'floor' | 'round' | 'ceil'): T;\r\n    conv2dTranspose<T extends Tensor3D | Tensor4D>(this: T, filter: Tensor4D, outputShape: [number, number, number, number] | [number, number, number], strides: [number, number] | number, pad: 'valid' | 'same' | number, dimRoundingMode?: 'floor' | 'round' | 'ceil'): T;\r\n    depthwiseConv2D<T extends Tensor3D | Tensor4D>(this: T, filter: Tensor4D, strides: [number, number] | number, pad: 'valid' | 'same' | number, dataFormat?: 'NHWC' | 'NCHW', dilations?: [number, number] | number, dimRoundingMode?: 'floor' | 'round' | 'ceil'): T;\r\n    avgPool<T extends Tensor3D | Tensor4D>(this: T, filterSize: [number, number] | number, strides: [number, number] | number, pad: 'valid' | 'same' | number, dimRoundingMode?: 'floor' | 'round' | 'ceil'): T;\r\n    maxPool<T extends Tensor3D | Tensor4D>(this: T, filterSize: [number, number] | number, strides: [number, number] | number, pad: 'valid' | 'same' | number, dimRoundingMode?: 'floor' | 'round' | 'ceil'): T;\r\n    localResponseNormalization<T extends Tensor3D | Tensor4D>(this: T, radius?: number, bias?: number, alpha?: number, beta?: number): T;\r\n    variable(trainable?: boolean, name?: string, dtype?: DataType): Variable<R>;\r\n    unsortedSegmentSum<T extends Tensor>(this: T, segmentIds: Tensor1D, numSegments: number, axis?: number): T;\r\n}\r\nexport declare type Scalar = Tensor<Rank.R0>;\r\nexport declare type Tensor1D = Tensor<Rank.R1>;\r\nexport declare type Tensor2D = Tensor<Rank.R2>;\r\nexport declare type Tensor3D = Tensor<Rank.R3>;\r\nexport declare type Tensor4D = Tensor<Rank.R4>;\r\nexport declare class Variable<R extends Rank = Rank> extends Tensor<R> {\r\n    trainable: boolean;\r\n    private static nextVarId;\r\n    name: string;\r\n    private constructor();\r\n    static variable<R extends Rank>(initialValue: Tensor<R>, trainable?: boolean, name?: string, dtype?: DataType): Variable<R>;\r\n    assign(newValue: Tensor<R>): void;\r\n}\r\ndeclare const variable: typeof Variable.variable;\r\nexport { variable };\r\n"}}

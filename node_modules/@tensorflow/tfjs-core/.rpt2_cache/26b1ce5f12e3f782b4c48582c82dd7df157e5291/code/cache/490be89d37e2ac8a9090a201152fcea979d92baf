{"code":"import * as tslib_1 from \"tslib\";\r\nimport { doc } from '../doc';\r\nimport { ENV } from '../environment';\r\nimport * as util from '../util';\r\nimport { operation } from './operation';\r\nimport * as slice_util from './slice_util';\r\nvar SliceOps = (function () {\r\n    function SliceOps() {\r\n    }\r\n    SliceOps.slice1d = function (x, begin, size) {\r\n        util.assert(x.rank === 1, \"slice1d expects a rank-1 tensor, but got a rank-\" + x.rank + \" tensor\");\r\n        return SliceOps.slice(x, [begin], [size]);\r\n    };\r\n    SliceOps.slice2d = function (x, begin, size) {\r\n        util.assert(x.rank === 2, \"slice1d expects a rank-2 tensor, but got a rank-\" + x.rank + \" tensor\");\r\n        return SliceOps.slice(x, begin, size);\r\n    };\r\n    SliceOps.slice3d = function (x, begin, size) {\r\n        util.assert(x.rank === 3, \"slice1d expects a rank-3 tensor, but got a rank-\" + x.rank + \" tensor\");\r\n        return SliceOps.slice(x, begin, size);\r\n    };\r\n    SliceOps.slice4d = function (x, begin, size) {\r\n        util.assert(x.rank === 4, \"slice1d expects a rank-4 tensor, but got a rank-\" + x.rank + \" tensor\");\r\n        return SliceOps.slice(x, begin, size);\r\n    };\r\n    SliceOps.slice = function (x, begin, size) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'slice');\r\n        if (x.rank === 0) {\r\n            throw new Error('Slicing scalar is not possible');\r\n        }\r\n        var begin_;\r\n        if (typeof begin === 'number') {\r\n            begin_ = [begin].concat(new Array(x.rank - 1).fill(0));\r\n        }\r\n        else if (begin.length < x.rank) {\r\n            begin_ = begin.concat(new Array(x.rank - begin.length).fill(0));\r\n        }\r\n        else {\r\n            begin_ = begin;\r\n        }\r\n        var size_;\r\n        if (size == null) {\r\n            size_ = new Array(x.rank).fill(-1);\r\n        }\r\n        else if (typeof size === 'number') {\r\n            size_ = [size].concat(new Array(x.rank - 1).fill(-1));\r\n        }\r\n        else if (size.length < x.rank) {\r\n            size_ = size.concat(new Array(x.rank - size.length).fill(-1));\r\n        }\r\n        else {\r\n            size_ = size;\r\n        }\r\n        size_ = size_.map(function (d, i) {\r\n            if (d >= 0) {\r\n                return d;\r\n            }\r\n            else {\r\n                util.assert(d === -1, 'Bad value in size');\r\n                return x.shape[i] - begin_[i];\r\n            }\r\n        });\r\n        slice_util.assertParamsValid(x, begin_, size_);\r\n        var inputShape = x.shape;\r\n        var grad = function (dy) {\r\n            var paddings = [];\r\n            for (var i = 0; i < dy.rank; i++) {\r\n                paddings.push([begin_[i], inputShape[i] - begin_[i] - size_[i]]);\r\n            }\r\n            return { x: function () { return dy.pad(paddings); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.slice(x, begin_, size_); }, { x: x }, grad);\r\n    };\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Tensors', subheading: 'Slicing and Joining' }),\r\n        operation\r\n    ], SliceOps, \"slice\", null);\r\n    return SliceOps;\r\n}());\r\nexport { SliceOps };\r\n//# sourceMappingURL=slice.js.map","map":"{\"version\":3,\"file\":\"slice.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/ops/slice.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/ops/slice.d.ts","text":"import { Tensor, Tensor1D, Tensor2D, Tensor3D, Tensor4D } from '../tensor';\r\nimport { Rank } from '../types';\r\nexport declare class SliceOps {\r\n    static slice1d(x: Tensor1D, begin: number, size: number): Tensor1D;\r\n    static slice2d(x: Tensor2D, begin: [number, number], size: [number, number]): Tensor2D;\r\n    static slice3d(x: Tensor3D, begin: [number, number, number], size: [number, number, number]): Tensor3D;\r\n    static slice4d(x: Tensor4D, begin: [number, number, number, number], size: [number, number, number, number]): Tensor4D;\r\n    static slice<R extends Rank, T extends Tensor<R>>(x: T, begin: number | number[], size?: number | number[]): T;\r\n}\r\n"}}

{"code":"import * as tslib_1 from \"tslib\";\r\nimport { doc } from './doc';\r\nimport { ENV } from './environment';\r\nimport { extractTensorsFromAny } from './util';\r\nvar Tracking = (function () {\r\n    function Tracking() {\r\n    }\r\n    Tracking.tidy = function (nameOrFn, fn, gradMode) {\r\n        if (gradMode === void 0) { gradMode = false; }\r\n        var name = null;\r\n        if (fn == null) {\r\n            if (typeof nameOrFn !== 'function') {\r\n                throw new Error('Please provide a function to tidy()');\r\n            }\r\n            fn = nameOrFn;\r\n        }\r\n        else {\r\n            if (typeof nameOrFn !== 'string' && !(nameOrFn instanceof String)) {\r\n                throw new Error('When calling with two arguments, the first argument ' +\r\n                    'to tidy() must be a string');\r\n            }\r\n            if (typeof fn !== 'function') {\r\n                throw new Error('When calling with two arguments, the 2nd argument ' +\r\n                    'to tidy() must be a function');\r\n            }\r\n            name = nameOrFn;\r\n        }\r\n        ENV.engine.startScope(name, gradMode);\r\n        var result = fn();\r\n        if (result instanceof Promise) {\r\n            console.error('Cannot return a Promise inside of tidy.');\r\n        }\r\n        ENV.engine.endScope(result, gradMode);\r\n        return result;\r\n    };\r\n    Tracking.dispose = function (container) {\r\n        var tensors = extractTensorsFromAny(container);\r\n        tensors.forEach(function (tensor) { return tensor.dispose(); });\r\n    };\r\n    Tracking.keep = function (result) {\r\n        return ENV.engine.keep(result);\r\n    };\r\n    Tracking.time = function (f) {\r\n        return ENV.engine.time(f);\r\n    };\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Performance', subheading: 'Memory' })\r\n    ], Tracking, \"tidy\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Performance', subheading: 'Memory' })\r\n    ], Tracking, \"keep\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Performance', subheading: 'Timing' })\r\n    ], Tracking, \"time\", null);\r\n    return Tracking;\r\n}());\r\nexport { Tracking };\r\n//# sourceMappingURL=tracking.js.map","map":"{\"version\":3,\"file\":\"tracking.js\",\"sourceRoot\":\"\",\"sources\":[\"src/tracking.ts\"],\"names\":[],\"mappings\":\";AAiBA,OAAO,EAAC,GAAG,EAAC,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAC,GAAG,EAAC,MAAM,eAAe,CAAC;AAGlC,OAAO,EAAC,qBAAqB,EAAC,MAAM,QAAQ,CAAC;AAE7C;IAAA;IAuJA,CAAC;IA7GQ,aAAI,GAAX,UACI,QAA2B,EAAE,EAAe,EAAE,QAAgB;QAAhB,yBAAA,EAAA,gBAAgB;QAChE,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,EAAE,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;YAEf,EAAE,CAAC,CAAC,OAAO,QAAQ,KAAK,UAAU,CAAC,CAAC,CAAC;gBACnC,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;YACzD,CAAC;YACD,EAAE,GAAG,QAAQ,CAAC;QAChB,CAAC;QAAC,IAAI,CAAC,CAAC;YAEN,EAAE,CAAC,CAAC,OAAO,QAAQ,KAAK,QAAQ,IAAI,CAAC,CAAC,QAAQ,YAAY,MAAM,CAAC,CAAC,CAAC,CAAC;gBAClE,MAAM,IAAI,KAAK,CACX,sDAAsD;oBACtD,4BAA4B,CAAC,CAAC;YACpC,CAAC;YACD,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,UAAU,CAAC,CAAC,CAAC;gBAC7B,MAAM,IAAI,KAAK,CACX,oDAAoD;oBACpD,8BAA8B,CAAC,CAAC;YACtC,CAAC;YACD,IAAI,GAAG,QAAkB,CAAC;QAG5B,CAAC;QACD,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACtC,IAAM,MAAM,GAAG,EAAE,EAAE,CAAC;QACpB,EAAE,CAAC,CAAC,MAAM,YAAY,OAAO,CAAC,CAAC,CAAC;YAC9B,OAAO,CAAC,KAAK,CAAC,yCAAyC,CAAC,CAAC;QAC3D,CAAC;QACD,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACtC,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAYM,gBAAO,GAAd,UAAe,SAAc;QAC3B,IAAM,OAAO,GAAG,qBAAqB,CAAC,SAAS,CAAC,CAAC;QACjD,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,OAAO,EAAE,EAAhB,CAAgB,CAAC,CAAC;IAC9C,CAAC;IAiCM,aAAI,GAAX,UAA8B,MAAS;QACrC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IAwBM,aAAI,GAAX,UAAY,CAAa;QACvB,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;IA5GD;QADC,GAAG,CAAC,EAAC,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,QAAQ,EAAC,CAAC;8BAiCnD;IAgDD;QADC,GAAG,CAAC,EAAC,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,QAAQ,EAAC,CAAC;8BAGnD;IAwBD;QADC,GAAG,CAAC,EAAC,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,QAAQ,EAAC,CAAC;8BAGnD;IACH,eAAC;CAAA,AAvJD,IAuJC;SAvJY,QAAQ\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/tracking.d.ts","text":"import { ScopeFn, TimingInfo } from './engine';\r\nimport { Tensor } from './tensor';\r\nimport { TensorContainer } from './types';\r\nexport declare class Tracking {\r\n    static tidy<T extends TensorContainer>(nameOrFn: string | ScopeFn<T>, fn?: ScopeFn<T>, gradMode?: boolean): T;\r\n    static dispose(container: any): void;\r\n    static keep<T extends Tensor>(result: T): T;\r\n    static time(f: () => void): Promise<TimingInfo>;\r\n}\r\n"}}

{"code":"import * as tslib_1 from \"tslib\";\r\nimport { doc } from '../doc';\r\nimport { ENV } from '../environment';\r\nimport * as util from '../util';\r\nimport { operation } from './operation';\r\nvar MatmulOps = (function () {\r\n    function MatmulOps() {\r\n    }\r\n    MatmulOps.matMul = function (a, b, transposeA, transposeB) {\r\n        if (transposeA === void 0) { transposeA = false; }\r\n        if (transposeB === void 0) { transposeB = false; }\r\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'matMul');\r\n        var innerShapeA = transposeA ? a.shape[0] : a.shape[1];\r\n        var innerShapeB = transposeB ? b.shape[1] : b.shape[0];\r\n        util.assert(a.rank === 2 && b.rank === 2, \"Error in matMul: inputs must be rank 2, got ranks \" + a.rank +\r\n            (\" and \" + b.rank + \".\"));\r\n        util.assert(innerShapeA === innerShapeB, \"Error in matMul: inner shapes (\" + innerShapeA + \") and (\" +\r\n            (innerShapeB + \") of Tensors with shapes \" + a.shape + \" and \") +\r\n            (b.shape + \" and transposeA=\" + transposeA) +\r\n            (\" and transposeB=\" + transposeB + \" must match.\"));\r\n        var grad = function (dy) {\r\n            if (!transposeA && !transposeB) {\r\n                return {\r\n                    a: function () { return dy.matMul(b.toFloat(), false, true); },\r\n                    b: function () { return a.toFloat().matMul(dy, true, false); }\r\n                };\r\n            }\r\n            else if (!transposeA && transposeB) {\r\n                return {\r\n                    a: function () { return dy.matMul(b.toFloat(), false, false); },\r\n                    b: function () { return dy.matMul(a.toFloat(), true, false); }\r\n                };\r\n            }\r\n            else if (transposeA && !transposeB) {\r\n                return {\r\n                    a: function () { return b.toFloat().matMul(dy, false, true); },\r\n                    b: function () { return a.toFloat().matMul(dy, false, false); }\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    a: function () { return b.toFloat().matMul(dy, true, true); },\r\n                    b: function () { return dy.matMul(a.toFloat(), true, true); }\r\n                };\r\n            }\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.matMul(a, b, transposeA, transposeB); }, { a: a, b: b }, grad);\r\n    };\r\n    MatmulOps.vectorTimesMatrix = function (v, matrix) {\r\n        util.assert(v.rank === 1, \"Error in vectorTimesMatrix: first input must be rank 1, but got \" +\r\n            (\"rank \" + v.rank + \".\"));\r\n        util.assert(matrix.rank === 2, \"Error in vectorTimesMatrix: second input must be rank 2, but got \" +\r\n            (\"rank \" + matrix.rank + \".\"));\r\n        util.assert(v.size === matrix.shape[0], \"Error in vectorTimesMatrix: size of vector (\" + v.size + \") \" +\r\n            (\"must match first dimension of matrix (\" + matrix.shape[0] + \")\"));\r\n        return v.as2D(1, -1).matMul(matrix).as1D();\r\n    };\r\n    MatmulOps.matrixTimesVector = function (matrix, v) {\r\n        util.assert(v.rank === 1, \"Error in matrixTimesVector: second input must rank 1, but got \" +\r\n            (\"rank \" + v.rank + \".\"));\r\n        util.assert(matrix.rank === 2, \"Error in matrixTimesVector: first input must be a rank 2, but got \" +\r\n            (\"rank \" + matrix.rank + \".\"));\r\n        util.assert(v.size === matrix.shape[1], \"Error in matrixTimesVector: size of first rank 1 input \" + v.size + \" \" +\r\n            \"must match inner dimension of second rank 2 input, but got \" +\r\n            (\"shape \" + matrix.shape + \".\"));\r\n        return matrix.matMul(v.as2D(-1, 1)).as1D();\r\n    };\r\n    MatmulOps.dotProduct = function (v1, v2) {\r\n        util.assert(v1.rank === 1 && v2.rank === 1, \"Error in dotProduct: inputs must be rank 1, but got ranks \" +\r\n            (v1.rank + \" and \" + v2.rank + \".\"));\r\n        util.assert(v1.size === v2.size, \"Error in dotProduct: size of inputs (\" + v1.size + \") and (\" +\r\n            (v2.size + \") must match.\"));\r\n        return v1.as2D(1, -1).matMul(v2.as2D(-1, 1)).asScalar();\r\n    };\r\n    MatmulOps.outerProduct = function (v1, v2) {\r\n        util.assert(v1.rank === 1 && v2.rank === 1, \"Error in outerProduct: inputs must be rank 1, but got ranks \" +\r\n            (v1.rank + \" and \" + v2.rank + \".\"));\r\n        return v1.as2D(-1, 1).matMul(v2.as2D(1, -1));\r\n    };\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Matrices' }),\r\n        operation\r\n    ], MatmulOps, \"matMul\", null);\r\n    tslib_1.__decorate([\r\n        operation\r\n    ], MatmulOps, \"vectorTimesMatrix\", null);\r\n    tslib_1.__decorate([\r\n        operation\r\n    ], MatmulOps, \"matrixTimesVector\", null);\r\n    tslib_1.__decorate([\r\n        operation\r\n    ], MatmulOps, \"dotProduct\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Matrices' }),\r\n        operation\r\n    ], MatmulOps, \"outerProduct\", null);\r\n    return MatmulOps;\r\n}());\r\nexport { MatmulOps };\r\n//# sourceMappingURL=matmul.js.map","map":"{\"version\":3,\"file\":\"matmul.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/ops/matmul.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/ops/matmul.d.ts","text":"import { Scalar, Tensor1D, Tensor2D } from '../tensor';\r\nexport declare class MatmulOps {\r\n    static matMul(a: Tensor2D, b: Tensor2D, transposeA?: boolean, transposeB?: boolean): Tensor2D;\r\n    static vectorTimesMatrix(v: Tensor1D, matrix: Tensor2D): Tensor1D;\r\n    static matrixTimesVector(matrix: Tensor2D, v: Tensor1D): Tensor1D;\r\n    static dotProduct(v1: Tensor1D, v2: Tensor1D): Scalar;\r\n    static outerProduct(v1: Tensor1D, v2: Tensor1D): Tensor2D;\r\n}\r\n"}}

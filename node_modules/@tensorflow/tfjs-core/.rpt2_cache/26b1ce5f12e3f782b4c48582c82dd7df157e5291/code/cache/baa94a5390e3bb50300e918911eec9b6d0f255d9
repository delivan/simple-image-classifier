{"code":"import * as tslib_1 from \"tslib\";\r\nimport { ENV } from '../../environment';\r\nimport * as tex_util from './tex_util';\r\nimport * as webgl_util from './webgl_util';\r\nexport function getWebGLContextAttributes() {\r\n    return {\r\n        alpha: false,\r\n        antialias: false,\r\n        premultipliedAlpha: false,\r\n        preserveDrawingBuffer: false,\r\n        depth: false,\r\n        stencil: false,\r\n        failIfMajorPerformanceCaveat: true\r\n    };\r\n}\r\nexport function createWebGLContext(canvas) {\r\n    var attributes = getWebGLContextAttributes();\r\n    var gl;\r\n    if (canvas != null) {\r\n        gl = webgl_util.createWebGLRenderingContextFromCanvas(canvas, attributes);\r\n    }\r\n    else {\r\n        gl = webgl_util.createWebGLRenderingContext(attributes);\r\n    }\r\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.DEPTH_TEST); });\r\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.STENCIL_TEST); });\r\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.BLEND); });\r\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.DITHER); });\r\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.POLYGON_OFFSET_FILL); });\r\n    webgl_util.callAndCheck(gl, function () { return gl.disable(gl.SAMPLE_COVERAGE); });\r\n    webgl_util.callAndCheck(gl, function () { return gl.enable(gl.SCISSOR_TEST); });\r\n    webgl_util.callAndCheck(gl, function () { return gl.enable(gl.CULL_FACE); });\r\n    webgl_util.callAndCheck(gl, function () { return gl.cullFace(gl.BACK); });\r\n    return gl;\r\n}\r\nexport function createVertexShader(gl) {\r\n    var vertexShaderSource = \"\\n    precision highp float;\\n    attribute vec3 clipSpacePos;\\n    attribute vec2 uv;\\n    varying vec2 resultUV;\\n\\n    void main() {\\n      gl_Position = vec4(clipSpacePos, 1);\\n      resultUV = uv;\\n    }\";\r\n    return webgl_util.createVertexShader(gl, vertexShaderSource);\r\n}\r\nexport function createVertexBuffer(gl) {\r\n    var vertexArray = new Float32Array([-1, 1, 0, 0, 1, -1, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1, -1, 0, 1, 0]);\r\n    return webgl_util.createStaticVertexBuffer(gl, vertexArray);\r\n}\r\nexport function createIndexBuffer(gl) {\r\n    var triangleVertexIndices = new Uint16Array([0, 1, 2, 2, 1, 3]);\r\n    return webgl_util.createStaticIndexBuffer(gl, triangleVertexIndices);\r\n}\r\nfunction getTextureInternalFormat(gl, numChannels) {\r\n    if (!ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\r\n        return gl.RGBA;\r\n    }\r\n    if (ENV.get('WEBGL_VERSION') === 2) {\r\n        if (numChannels === 4) {\r\n            return gl.RGBA32F;\r\n        }\r\n        return gl.R32F;\r\n    }\r\n    return gl.RGBA;\r\n}\r\nfunction getTextureFormat(gl, numChannels) {\r\n    if (!ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\r\n        return gl.RGBA;\r\n    }\r\n    if (ENV.get('WEBGL_VERSION') === 2) {\r\n        if (numChannels === 4) {\r\n            return gl.RGBA;\r\n        }\r\n        return gl.RED;\r\n    }\r\n    return gl.RGBA;\r\n}\r\nfunction getTextureType(gl) {\r\n    if (!ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\r\n        return gl.UNSIGNED_BYTE;\r\n    }\r\n    return gl.FLOAT;\r\n}\r\nfunction createAndConfigureTexture(gl, width, height, numChannels) {\r\n    webgl_util.validateTextureSize(gl, width, height);\r\n    var texture = webgl_util.createTexture(gl);\r\n    var tex2d = gl.TEXTURE_2D;\r\n    var internalFormat = getTextureInternalFormat(gl, numChannels);\r\n    var format = getTextureFormat(gl, numChannels);\r\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(tex2d, texture); });\r\n    webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE); });\r\n    webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE); });\r\n    webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_MIN_FILTER, gl.NEAREST); });\r\n    webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_MAG_FILTER, gl.NEAREST); });\r\n    webgl_util.callAndCheck(gl, function () { return gl.texImage2D(tex2d, 0, internalFormat, width, height, 0, format, getTextureType(gl), null); });\r\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\r\n    return texture;\r\n}\r\nexport function createMatrixTexture(gl, rows, columns) {\r\n    var _a = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\r\n    var numChannels = 1;\r\n    return createAndConfigureTexture(gl, width, height, numChannels);\r\n}\r\nexport function createColorMatrixTexture(gl, rows, columns) {\r\n    var _a = tex_util.getColorMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\r\n    var numChannels = 4;\r\n    return createAndConfigureTexture(gl, width, height, numChannels);\r\n}\r\nexport function createPackedMatrixTexture(gl, rows, columns) {\r\n    var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\r\n    var numChannels = 4;\r\n    return createAndConfigureTexture(gl, width, height, numChannels);\r\n}\r\nexport function bindVertexProgramAttributeStreams(gl, program, vertexBuffer) {\r\n    var posOffset = 0;\r\n    var uvOffset = 3 * 4;\r\n    var stride = (3 * 4) + (2 * 4);\r\n    webgl_util.callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer); });\r\n    var success = webgl_util.bindVertexBufferToProgramAttribute(gl, program, 'clipSpacePos', vertexBuffer, 3, stride, posOffset);\r\n    return success &&\r\n        webgl_util.bindVertexBufferToProgramAttribute(gl, program, 'uv', vertexBuffer, 2, stride, uvOffset);\r\n}\r\nexport function uploadPixelDataToTexture(gl, texture, pixels) {\r\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, texture); });\r\n    webgl_util.callAndCheck(gl, function () { return gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, pixels); });\r\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\r\n}\r\nfunction uploadDataToTexture(gl, texture, width, height, data, numChannels) {\r\n    var textureFormat = getTextureFormat(gl, numChannels);\r\n    webgl_util.validateTextureSize(gl, width, height);\r\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, texture); });\r\n    webgl_util.callAndCheck(gl, function () { return gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, width, height, textureFormat, getTextureType(gl), data); });\r\n    webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\r\n}\r\nexport function uploadMatrixToTexture(gl, texture, rows, columns, matrix, numChannels) {\r\n    var _a = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\r\n    var unpackedArray;\r\n    if (ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\r\n        var channelsPerTexture = numChannels === 1 ? webgl_util.getChannelsPerTexture() : numChannels;\r\n        if (channelsPerTexture === 1) {\r\n            unpackedArray = matrix;\r\n        }\r\n        else {\r\n            unpackedArray =\r\n                new Float32Array(tex_util.getUnpackedArraySizeFromMatrixSize(matrix.length, channelsPerTexture));\r\n            tex_util.encodeMatrixToUnpackedArray(matrix, unpackedArray, channelsPerTexture);\r\n        }\r\n    }\r\n    else {\r\n        unpackedArray = tex_util.encodeFloatArray(matrix);\r\n    }\r\n    uploadDataToTexture(gl, texture, w, h, unpackedArray, numChannels);\r\n}\r\nexport function uploadMatrixToPackedTexture(gl, texture, rows, columns, matrix) {\r\n    var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\r\n    var packedRGBA = new Float32Array(tex_util.getPackedRGBAArraySizeFromMatrixShape(rows, columns));\r\n    tex_util.encodeMatrixToPackedRGBA(matrix, rows, columns, packedRGBA);\r\n    var numChannels = 4;\r\n    uploadDataToTexture(gl, texture, w, h, packedRGBA, numChannels);\r\n}\r\nfunction getDownloadTargetArrayBuffer(rows, columns, channelsPerTexture) {\r\n    var isFloatTexture = ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED');\r\n    var downloadTarget;\r\n    if (isFloatTexture) {\r\n        downloadTarget =\r\n            new Float32Array(tex_util.getUnpackedArraySizeFromMatrixSize(rows * columns, channelsPerTexture));\r\n    }\r\n    else {\r\n        downloadTarget = new Uint8Array(rows * columns * channelsPerTexture);\r\n    }\r\n    return downloadTarget;\r\n}\r\nfunction decodeDownloadTargetArrayBuffer(downloadTarget, rows, columns, channelsPerPixel) {\r\n    var isFloatTexture = ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED');\r\n    if (isFloatTexture) {\r\n        var matrix = new Float32Array(rows * columns);\r\n        tex_util.decodeMatrixFromUnpackedArray(downloadTarget, matrix, channelsPerPixel);\r\n        return matrix;\r\n    }\r\n    else {\r\n        return tex_util.decodeToFloatArray(downloadTarget);\r\n    }\r\n}\r\nexport function downloadMatrixFromOutputTextureAsync(gl, getBufferSubDataAsyncExtension, rows, columns) {\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        var gl2, channelsPerPixel, downloadTarget, bufferSizeBytes, buffer;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    gl2 = gl;\r\n                    channelsPerPixel = 4;\r\n                    downloadTarget = getDownloadTargetArrayBuffer(rows, columns, channelsPerPixel);\r\n                    bufferSizeBytes = downloadTarget instanceof Float32Array ?\r\n                        downloadTarget.length * 4 :\r\n                        downloadTarget;\r\n                    buffer = gl.createBuffer();\r\n                    webgl_util.callAndCheck(gl, function () { return gl.bindBuffer(gl2.PIXEL_PACK_BUFFER, buffer); });\r\n                    webgl_util.callAndCheck(gl, function () { return gl.bufferData(gl2.PIXEL_PACK_BUFFER, bufferSizeBytes, gl.STATIC_DRAW); });\r\n                    webgl_util.callAndCheck(gl, function () {\r\n                        return gl2.readPixels(0, 0, columns, rows, gl.RGBA, getTextureType(gl), 0);\r\n                    });\r\n                    return [4, getBufferSubDataAsyncExtension.getBufferSubDataAsync(gl2.PIXEL_PACK_BUFFER, 0, downloadTarget)];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [2, decodeDownloadTargetArrayBuffer(downloadTarget, rows, columns, channelsPerPixel)];\r\n            }\r\n        });\r\n    });\r\n}\r\nexport function downloadMatrixFromOutputTexture(gl, rows, columns) {\r\n    var _a = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\r\n    var channelsPerPixel = 4;\r\n    var downloadTarget = getDownloadTargetArrayBuffer(rows, columns, channelsPerPixel);\r\n    webgl_util.callAndCheck(gl, function () { return gl.readPixels(0, 0, w, h, gl.RGBA, getTextureType(gl), downloadTarget); });\r\n    return decodeDownloadTargetArrayBuffer(downloadTarget, rows, columns, channelsPerPixel);\r\n}\r\nexport function downloadMatrixFromRGBAColorTexture(gl, rows, columns, channels) {\r\n    var size = rows * columns * 4;\r\n    var downloadTarget = new Uint8Array(size);\r\n    webgl_util.callAndCheck(gl, function () { return gl.readPixels(0, 0, columns, rows, gl.RGBA, gl.UNSIGNED_BYTE, downloadTarget); });\r\n    var packedRGBA = new Float32Array(size);\r\n    for (var i = 0; i < downloadTarget.length; i++) {\r\n        packedRGBA[i] = downloadTarget[i];\r\n    }\r\n    var matrix = new Float32Array(rows * columns * channels);\r\n    tex_util.decodeMatrixFromUnpackedColorRGBAArray(packedRGBA, matrix, channels);\r\n    return matrix;\r\n}\r\nexport function downloadMatrixFromPackedOutputTexture(gl, rows, columns) {\r\n    var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\r\n    var packedRGBA = new Float32Array(tex_util.getPackedRGBAArraySizeFromMatrixShape(rows, columns));\r\n    webgl_util.callAndCheck(gl, function () { return gl.readPixels(0, 0, w, h, gl.RGBA, getTextureType(gl), packedRGBA); });\r\n    var matrix = new Float32Array(rows * columns);\r\n    return tex_util.decodeMatrixFromPackedRGBA(packedRGBA, rows, columns, matrix);\r\n}\r\n//# sourceMappingURL=gpgpu_util.js.map","map":"{\"version\":3,\"file\":\"gpgpu_util.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/kernels/webgl/gpgpu_util.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/kernels/webgl/gpgpu_util.d.ts","text":"export declare function getWebGLContextAttributes(): WebGLContextAttributes;\r\nexport declare function createWebGLContext(canvas?: HTMLCanvasElement): WebGLRenderingContext;\r\nexport declare function createVertexShader(gl: WebGLRenderingContext): WebGLShader;\r\nexport declare function createVertexBuffer(gl: WebGLRenderingContext): WebGLBuffer;\r\nexport declare function createIndexBuffer(gl: WebGLRenderingContext): WebGLBuffer;\r\nexport declare function createMatrixTexture(gl: WebGLRenderingContext, rows: number, columns: number): WebGLTexture;\r\nexport declare function createColorMatrixTexture(gl: WebGLRenderingContext, rows: number, columns: number): WebGLTexture;\r\nexport declare function createPackedMatrixTexture(gl: WebGLRenderingContext, rows: number, columns: number): WebGLTexture;\r\nexport declare function bindVertexProgramAttributeStreams(gl: WebGLRenderingContext, program: WebGLProgram, vertexBuffer: WebGLBuffer): boolean;\r\nexport declare function uploadPixelDataToTexture(gl: WebGLRenderingContext, texture: WebGLTexture, pixels: ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement): void;\r\nexport declare function uploadMatrixToTexture(gl: WebGLRenderingContext, texture: WebGLTexture, rows: number, columns: number, matrix: Float32Array, numChannels: number): void;\r\nexport declare function uploadMatrixToPackedTexture(gl: WebGLRenderingContext, texture: WebGLTexture, rows: number, columns: number, matrix: Float32Array): void;\r\nexport declare function downloadMatrixFromOutputTextureAsync(gl: WebGLRenderingContext, getBufferSubDataAsyncExtension: any, rows: number, columns: number): Promise<Float32Array>;\r\nexport declare function downloadMatrixFromOutputTexture(gl: WebGLRenderingContext, rows: number, columns: number): Float32Array;\r\nexport declare function downloadMatrixFromRGBAColorTexture(gl: WebGLRenderingContext, rows: number, columns: number, channels: number): Float32Array;\r\nexport declare function downloadMatrixFromPackedOutputTexture(gl: WebGLRenderingContext, rows: number, columns: number): Float32Array;\r\n"}}

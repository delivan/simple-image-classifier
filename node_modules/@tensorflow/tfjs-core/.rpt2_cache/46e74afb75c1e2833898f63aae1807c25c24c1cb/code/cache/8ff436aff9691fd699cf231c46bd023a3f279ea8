{"code":"var ArgMinMaxProgram = (function () {\r\n    function ArgMinMaxProgram(reduceInfo, op, firstPass) {\r\n        this.variableNames = ['A'];\r\n        var windowSize = reduceInfo.windowSize;\r\n        var batchSize = reduceInfo.batchSize;\r\n        var inSize = reduceInfo.inSize;\r\n        var outSize = Math.ceil(inSize / windowSize);\r\n        if (!firstPass) {\r\n            this.variableNames.push('bestIndicesA');\r\n        }\r\n        this.outputShape = [batchSize, outSize];\r\n        var compOp = (op === 'max') ? '>' : '<';\r\n        var indexSnippet = firstPass ?\r\n            'inOffset + i;' :\r\n            'round(getBestIndicesA(batch, inOffset + i));';\r\n        this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * \" + windowSize + \";\\n\\n        int bestIndex = 0;\\n        float bestValue = getA(batch, inOffset);\\n\\n        for (int i = 0; i < \" + windowSize + \"; i++) {\\n          int inIdx = \" + indexSnippet + \";\\n          float candidate = getA(batch, inIdx);\\n          if (candidate \" + compOp + \" bestValue) {\\n            bestValue = candidate;\\n            bestIndex = inIdx;\\n          }\\n        }\\n        setOutput(float(bestIndex));\\n      }\\n    \";\r\n    }\r\n    return ArgMinMaxProgram;\r\n}());\r\nexport { ArgMinMaxProgram };\r\n//# sourceMappingURL=argminmax_gpu.js.map","map":"{\"version\":3,\"file\":\"argminmax_gpu.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/kernels/webgl/argminmax_gpu.ts\"],\"names\":[],\"mappings\":\"AAoBA;IAKE,0BAAY,UAAsB,EAAE,EAAe,EAAE,SAAkB;QAJvE,kBAAa,GAAG,CAAC,GAAG,CAAC,CAAC;QAKpB,IAAM,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC;QACzC,IAAM,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;QACvC,IAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;QACjC,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC;QAC/C,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC1C,CAAC;QACD,IAAI,CAAC,WAAW,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACxC,IAAM,MAAM,GAAG,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QAC1C,IAAM,YAAY,GAAG,SAAS,CAAC,CAAC;YAC5B,eAAe,CAAC,CAAC;YACjB,8CAA8C,CAAC;QAEnD,IAAI,CAAC,QAAQ,GAAG,wKAKc,UAAU,yHAKd,UAAU,wCAChB,YAAY,oFAEV,MAAM,mKAO3B,CAAC;IACJ,CAAC;IACH,uBAAC;AAAD,CAAC,AAzCD,IAyCC\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/kernels/webgl/argminmax_gpu.d.ts","text":"import { ReduceInfo } from '../../ops/reduce_util';\r\nimport { GPGPUProgram } from './gpgpu_math';\r\nexport declare class ArgMinMaxProgram implements GPGPUProgram {\r\n    variableNames: string[];\r\n    outputShape: number[];\r\n    userCode: string;\r\n    constructor(reduceInfo: ReduceInfo, op: 'max' | 'min', firstPass: boolean);\r\n}\r\n"}}

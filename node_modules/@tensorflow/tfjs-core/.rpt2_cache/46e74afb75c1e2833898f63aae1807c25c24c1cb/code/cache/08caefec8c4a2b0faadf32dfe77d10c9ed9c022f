{"code":"import * as tslib_1 from \"tslib\";\r\nimport { ENV } from '../environment';\r\nimport { getModelArtifactsInfoForKerasJSON } from './io_utils';\r\nimport { IORouterRegistry } from './router_registry';\r\nvar DATABASE_NAME = 'tensorflowjs';\r\nvar DATABASE_VERSION = 1;\r\nvar OBJECT_STORE_NAME = 'models_store';\r\nexport function deleteDatabase() {\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        var idbFactory;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            idbFactory = getIndexedDBFactory();\r\n            return [2, new Promise(function (resolve, reject) {\r\n                    var deleteRequest = idbFactory.deleteDatabase(DATABASE_NAME);\r\n                    deleteRequest.onsuccess = function () { return resolve(); };\r\n                    deleteRequest.onerror = function (error) { return reject(error); };\r\n                })];\r\n        });\r\n    });\r\n}\r\nfunction getIndexedDBFactory() {\r\n    if (!ENV.get('IS_BROWSER')) {\r\n        throw new Error('Failed to obtain IndexedDB factory because the current environment' +\r\n            'is not a web browser.');\r\n    }\r\n    var theWindow = window;\r\n    var factory = theWindow.indexedDB || theWindow.mozIndexedDB ||\r\n        theWindow.webkitIndexedDB || theWindow.msIndexedDB ||\r\n        theWindow.shimIndexedDB;\r\n    if (factory == null) {\r\n        throw new Error('The current browser does not appear to support IndexedDB.');\r\n    }\r\n    return factory;\r\n}\r\nvar BrowserIndexedDB = (function () {\r\n    function BrowserIndexedDB(modelPath) {\r\n        this.indexedDB = getIndexedDBFactory();\r\n        if (modelPath == null || !modelPath) {\r\n            throw new Error('For IndexedDB, modelPath must not be null, undefined or empty.');\r\n        }\r\n        this.modelPath = modelPath;\r\n    }\r\n    BrowserIndexedDB.prototype.save = function (modelArtifacts) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\r\n                    throw new Error('BrowserLocalStorage.save() does not support saving model topology ' +\r\n                        'in binary formats yet.');\r\n                }\r\n                return [2, this.databaseAction(this.modelPath, modelArtifacts)];\r\n            });\r\n        });\r\n    };\r\n    BrowserIndexedDB.prototype.load = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2, this.databaseAction(this.modelPath)];\r\n            });\r\n        });\r\n    };\r\n    BrowserIndexedDB.prototype.databaseAction = function (modelPath, modelArtifacts) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var openRequest = _this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\r\n            openRequest.onupgradeneeded = function () { return _this.setUpDatabase(openRequest); };\r\n            openRequest.onsuccess = function () {\r\n                var db = openRequest.result;\r\n                var tx = db.transaction(OBJECT_STORE_NAME, modelArtifacts == null ? 'readonly' : 'readwrite');\r\n                var store = tx.objectStore(OBJECT_STORE_NAME);\r\n                if (modelArtifacts == null) {\r\n                    var getRequest_1 = store.get(_this.modelPath);\r\n                    getRequest_1.onsuccess = function () {\r\n                        if (getRequest_1.result === undefined) {\r\n                            reject(new Error(\"Cannot find model with path '\" + _this.modelPath + \"' \" +\r\n                                \"in IndexedDB.\"));\r\n                        }\r\n                        else {\r\n                            resolve(getRequest_1.result.modelArtifacts);\r\n                        }\r\n                    };\r\n                    getRequest_1.onerror = function (error) { return reject(getRequest_1.error); };\r\n                }\r\n                else {\r\n                    var modelArtifactsInfo_1 = getModelArtifactsInfoForKerasJSON(modelArtifacts);\r\n                    var putRequest_1 = store.put({ modelPath: _this.modelPath, modelArtifacts: modelArtifacts, modelArtifactsInfo: modelArtifactsInfo_1 });\r\n                    putRequest_1.onsuccess = function () { return resolve({ modelArtifactsInfo: modelArtifactsInfo_1 }); };\r\n                    putRequest_1.onerror = function (error) { return reject(putRequest_1.error); };\r\n                    tx.oncomplete = function () { return db.close(); };\r\n                }\r\n                tx.oncomplete = function () { return db.close(); };\r\n            };\r\n            openRequest.onerror = function (error) { return reject(openRequest.error); };\r\n        });\r\n    };\r\n    BrowserIndexedDB.prototype.setUpDatabase = function (openRequest) {\r\n        var db = openRequest.result;\r\n        db.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'modelPath' });\r\n    };\r\n    BrowserIndexedDB.URL_SCHEME = 'indexeddb://';\r\n    return BrowserIndexedDB;\r\n}());\r\nexport { BrowserIndexedDB };\r\nexport var indexedDBRouter = function (url) {\r\n    if (!ENV.get('IS_BROWSER')) {\r\n        return null;\r\n    }\r\n    else {\r\n        if (url.startsWith(BrowserIndexedDB.URL_SCHEME)) {\r\n            return browserIndexedDB(url.slice(BrowserIndexedDB.URL_SCHEME.length));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n};\r\nIORouterRegistry.registerSaveRouter(indexedDBRouter);\r\nIORouterRegistry.registerLoadRouter(indexedDBRouter);\r\nexport function browserIndexedDB(modelPath) {\r\n    return new BrowserIndexedDB(modelPath);\r\n}\r\n//# sourceMappingURL=indexed_db.js.map","map":"{\"version\":3,\"file\":\"indexed_db.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/io/indexed_db.ts\"],\"names\":[],\"mappings\":\";AAkBA,OAAO,EAAC,GAAG,EAAC,MAAM,gBAAgB,CAAC;AAEnC,OAAO,EAAC,iCAAiC,EAAC,MAAM,YAAY,CAAC;AAC7D,OAAO,EAAW,gBAAgB,EAAC,MAAM,mBAAmB,CAAC;AAK7D,IAAM,aAAa,GAAG,cAAc,CAAC;AACrC,IAAM,gBAAgB,GAAG,CAAC,CAAC;AAC3B,IAAM,iBAAiB,GAAG,cAAc,CAAC;AAKzC,MAAM;;;;YACE,UAAU,GAAG,mBAAmB,EAAE,CAAC;YAEzC,WAAO,IAAI,OAAO,CAAO,UAAC,OAAO,EAAE,MAAM;oBACvC,IAAM,aAAa,GAAG,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;oBAC/D,aAAa,CAAC,SAAS,GAAG,cAAM,OAAA,OAAO,EAAE,EAAT,CAAS,CAAC;oBAC1C,aAAa,CAAC,OAAO,GAAG,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,KAAK,CAAC,EAAb,CAAa,CAAC;gBACjD,CAAC,CAAC,EAAC;;;CACJ;AAED;IACE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAI3B,MAAM,IAAI,KAAK,CACX,oEAAoE;YACpE,uBAAuB,CAAC,CAAC;IAC/B,CAAC;IAED,IAAM,SAAS,GAAQ,MAAM,CAAC;IAC9B,IAAM,OAAO,GAAG,SAAS,CAAC,SAAS,IAAI,SAAS,CAAC,YAAY;QACzD,SAAS,CAAC,eAAe,IAAI,SAAS,CAAC,WAAW;QAClD,SAAS,CAAC,aAAa,CAAC;IAC5B,EAAE,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;QACpB,MAAM,IAAI,KAAK,CACX,2DAA2D,CAAC,CAAC;IACnE,CAAC;IACD,MAAM,CAAC,OAAO,CAAC;AACjB,CAAC;AAOD;IAME,0BAAY,SAAiB;QAC3B,IAAI,CAAC,SAAS,GAAG,mBAAmB,EAAE,CAAC;QAEvC,EAAE,CAAC,CAAC,SAAS,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACpC,MAAM,IAAI,KAAK,CACX,gEAAgE,CAAC,CAAC;QACxE,CAAC;QACD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAEK,+BAAI,GAAV,UAAW,cAA8B;;;gBAEvC,EAAE,CAAC,CAAC,cAAc,CAAC,aAAa,YAAY,WAAW,CAAC,CAAC,CAAC;oBACxD,MAAM,IAAI,KAAK,CACX,oEAAoE;wBACpE,wBAAwB,CAAC,CAAC;gBAChC,CAAC;gBAED,WAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,CAClC,EAAC;;;KACzB;IAEK,+BAAI,GAAV;;;gBACE,WAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAA4B,EAAC;;;KACvE;IAgBO,yCAAc,GAAtB,UAAuB,SAAiB,EAAE,cAA+B;QAAzE,iBAyCC;QAvCC,MAAM,CAAC,IAAI,OAAO,CAA4B,UAAC,OAAO,EAAE,MAAM;YAC5D,IAAM,WAAW,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAC;YAEzE,WAAW,CAAC,eAAe,GAAG,cAAM,OAAA,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAA/B,CAA+B,CAAC;YAEpE,WAAW,CAAC,SAAS,GAAG;gBACtB,IAAM,EAAE,GAAG,WAAW,CAAC,MAAqB,CAAC;gBAC7C,IAAM,EAAE,GAAG,EAAE,CAAC,WAAW,CACrB,iBAAiB,EACjB,cAAc,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;gBACvD,IAAM,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;gBAEhD,EAAE,CAAC,CAAC,cAAc,IAAI,IAAI,CAAC,CAAC,CAAC;oBAE3B,IAAM,YAAU,GAAG,KAAK,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;oBAC7C,YAAU,CAAC,SAAS,GAAG;wBACrB,EAAE,CAAC,CAAC,YAAU,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;4BACpC,MAAM,CAAC,IAAI,KAAK,CACZ,kCAAgC,KAAI,CAAC,SAAS,OAAI;gCAClD,eAAe,CAAC,CAAC,CAAC;wBACxB,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,OAAO,CAAC,YAAU,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;wBAC5C,CAAC;oBACH,CAAC,CAAC;oBACF,YAAU,CAAC,OAAO,GAAG,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,YAAU,CAAC,KAAK,CAAC,EAAxB,CAAwB,CAAC;gBACzD,CAAC;gBAAC,IAAI,CAAC,CAAC;oBAEN,IAAM,oBAAkB,GACpB,iCAAiC,CAAC,cAAc,CAAC,CAAC;oBACtD,IAAM,YAAU,GAAG,KAAK,CAAC,GAAG,CACxB,EAAC,SAAS,EAAE,KAAI,CAAC,SAAS,EAAE,cAAc,gBAAA,EAAE,kBAAkB,sBAAA,EAAC,CAAC,CAAC;oBACrE,YAAU,CAAC,SAAS,GAAG,cAAM,OAAA,OAAO,CAAC,EAAC,kBAAkB,sBAAA,EAAC,CAAC,EAA7B,CAA6B,CAAC;oBAC3D,YAAU,CAAC,OAAO,GAAG,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,YAAU,CAAC,KAAK,CAAC,EAAxB,CAAwB,CAAC;oBACvD,EAAE,CAAC,UAAU,GAAG,cAAM,OAAA,EAAE,CAAC,KAAK,EAAE,EAAV,CAAU,CAAC;gBACnC,CAAC;gBACD,EAAE,CAAC,UAAU,GAAG,cAAM,OAAA,EAAE,CAAC,KAAK,EAAE,EAAV,CAAU,CAAC;YACnC,CAAC,CAAC;YACF,WAAW,CAAC,OAAO,GAAG,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,EAAzB,CAAyB,CAAC;QAC3D,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,wCAAa,GAArB,UAAsB,WAAuB;QAC3C,IAAM,EAAE,GAAG,WAAW,CAAC,MAAqB,CAAC;QAC7C,EAAE,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,EAAC,OAAO,EAAE,WAAW,EAAC,CAAC,CAAC;IAClE,CAAC;IAxFe,2BAAU,GAAG,cAAc,CAAC;IAyF9C,uBAAC;CAAA,AA7FD,IA6FC;SA7FY,gBAAgB;AA+F7B,MAAM,CAAC,IAAM,eAAe,GAAa,UAAC,GAAW;IACnD,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAC3B,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,gBAAgB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QACzE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;AACH,CAAC,CAAC;AACF,gBAAgB,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;AACrD,gBAAgB,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;AAmBrD,MAAM,2BAA2B,SAAiB;IAChD,MAAM,CAAC,IAAI,gBAAgB,CAAC,SAAS,CAAC,CAAC;AACzC,CAAC\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/io/indexed_db.d.ts","text":"import { IORouter } from './router_registry';\r\nimport { IOHandler, ModelArtifacts, SaveResult } from './types';\r\nexport declare function deleteDatabase(): Promise<void>;\r\nexport declare class BrowserIndexedDB implements IOHandler {\r\n    protected readonly indexedDB: IDBFactory;\r\n    protected readonly modelPath: string;\r\n    static readonly URL_SCHEME: string;\r\n    constructor(modelPath: string);\r\n    save(modelArtifacts: ModelArtifacts): Promise<SaveResult>;\r\n    load(): Promise<ModelArtifacts>;\r\n    private databaseAction(modelPath, modelArtifacts?);\r\n    private setUpDatabase(openRequest);\r\n}\r\nexport declare const indexedDBRouter: IORouter;\r\nexport declare function browserIndexedDB(modelPath: string): IOHandler;\r\n"}}

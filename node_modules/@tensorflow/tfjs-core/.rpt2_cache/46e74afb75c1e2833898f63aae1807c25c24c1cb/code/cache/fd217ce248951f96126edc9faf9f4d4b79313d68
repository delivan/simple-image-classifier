{"code":"import { getCoordsDataType } from './shader_compiler';\r\nvar SliceProgram = (function () {\r\n    function SliceProgram(destSize) {\r\n        this.variableNames = ['source'];\r\n        this.outputShape = destSize;\r\n        this.rank = destSize.length;\r\n        var dtype = getCoordsDataType(this.rank);\r\n        var sourceCoords = getCoords(this.rank);\r\n        this.userCode = \"\\n      uniform \" + dtype + \" start;\\n\\n      void main() {\\n        \" + dtype + \" sourceLoc = start + getOutputCoords();\\n        setOutput(getSource(\" + sourceCoords + \"));\\n      }\\n    \";\r\n    }\r\n    SliceProgram.prototype.getCustomSetupFunc = function (start) {\r\n        var _this = this;\r\n        if (start.length !== this.rank) {\r\n            throw Error(\"The rank (\" + this.rank + \") of the program must match the \" +\r\n                (\"length of start (\" + start.length + \")\"));\r\n        }\r\n        return function (gpgpu, webGLProgram) {\r\n            if (_this.startLoc == null) {\r\n                _this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\r\n                if (_this.startLoc == null) {\r\n                    return;\r\n                }\r\n            }\r\n            if (_this.rank === 1) {\r\n                gpgpu.gl.uniform1i(_this.startLoc, start[0]);\r\n            }\r\n            else if (_this.rank === 2) {\r\n                gpgpu.gl.uniform2i(_this.startLoc, start[0], start[1]);\r\n            }\r\n            else if (_this.rank === 3) {\r\n                gpgpu.gl.uniform3i(_this.startLoc, start[0], start[1], start[2]);\r\n            }\r\n            else if (_this.rank === 4) {\r\n                gpgpu.gl.uniform4i(_this.startLoc, start[0], start[1], start[2], start[3]);\r\n            }\r\n            else {\r\n                throw Error(\"Slicing for rank \" + _this.rank + \" is not yet supported\");\r\n            }\r\n        };\r\n    };\r\n    return SliceProgram;\r\n}());\r\nexport { SliceProgram };\r\nfunction getCoords(rank) {\r\n    if (rank === 1) {\r\n        return 'sourceLoc';\r\n    }\r\n    else if (rank === 2) {\r\n        return 'sourceLoc.x, sourceLoc.y';\r\n    }\r\n    else if (rank === 3) {\r\n        return 'sourceLoc.x, sourceLoc.y, sourceLoc.z';\r\n    }\r\n    else if (rank === 4) {\r\n        return 'sourceLoc.x, sourceLoc.y, sourceLoc.z, sourceLoc.w';\r\n    }\r\n    else {\r\n        throw Error(\"Slicing for rank \" + rank + \" is not yet supported\");\r\n    }\r\n}\r\n//# sourceMappingURL=slice_gpu.js.map","map":"{\"version\":3,\"file\":\"slice_gpu.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/kernels/webgl/slice_gpu.ts\"],\"names\":[],\"mappings\":\"AAmBA,OAAO,EAAC,iBAAiB,EAAC,MAAM,mBAAmB,CAAC;AAEpD;IASE,sBAAY,QAAkB;QAR9B,kBAAa,GAAG,CAAC,QAAQ,CAAC,CAAC;QASzB,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC;QAE5B,IAAM,KAAK,GAAG,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAM,YAAY,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE1C,IAAI,CAAC,QAAQ,GAAG,qBACJ,KAAK,gDAGX,KAAK,6EACe,YAAY,uBAErC,CAAC;IACJ,CAAC;IAED,yCAAkB,GAAlB,UAAmB,KAAe;QAAlC,iBA4BC;QA3BC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC/B,MAAM,KAAK,CACP,eAAa,IAAI,CAAC,IAAI,qCAAkC;iBACxD,sBAAoB,KAAK,CAAC,MAAM,MAAG,CAAA,CAAC,CAAC;QAC3C,CAAC;QACD,MAAM,CAAC,UAAC,KAAmB,EAAE,YAA0B;YACrD,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC1B,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,yBAAyB,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;gBACvE,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;oBAG1B,MAAM,CAAC;gBACT,CAAC;YACH,CAAC;YACD,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACpB,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9C,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3B,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3B,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAClE,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3B,KAAK,CAAC,EAAE,CAAC,SAAS,CACd,KAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,KAAK,CAAC,sBAAoB,KAAI,CAAC,IAAI,0BAAuB,CAAC,CAAC;YACpE,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IACH,mBAAC;AAAD,CAAC,AAvDD,IAuDC;;AAED,mBAAmB,IAAY;IAC7B,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACf,MAAM,CAAC,WAAW,CAAC;IACrB,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,MAAM,CAAC,0BAA0B,CAAC;IACpC,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,MAAM,CAAC,uCAAuC,CAAC;IACjD,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,MAAM,CAAC,oDAAoD,CAAC;IAC9D,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,MAAM,KAAK,CAAC,sBAAoB,IAAI,0BAAuB,CAAC,CAAC;IAC/D,CAAC;AACH,CAAC\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/kernels/webgl/slice_gpu.d.ts","text":"import { GPGPUContext } from './gpgpu_context';\r\nimport { GPGPUProgram } from './gpgpu_math';\r\nexport declare class SliceProgram implements GPGPUProgram {\r\n    variableNames: string[];\r\n    outputShape: number[];\r\n    userCode: string;\r\n    rank: number;\r\n    startLoc: WebGLUniformLocation;\r\n    constructor(destSize: number[]);\r\n    getCustomSetupFunc(start: number[]): (gpgpu: GPGPUContext, webGLProgram: WebGLProgram) => void;\r\n}\r\n"}}

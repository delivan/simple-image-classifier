{"code":"import * as tslib_1 from \"tslib\";\r\nimport { doc } from '../doc';\r\nimport { variableGrads } from '../globals';\r\nimport { Serializable } from '../serialization';\r\nvar Optimizer = (function (_super) {\r\n    tslib_1.__extends(Optimizer, _super);\r\n    function Optimizer() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Optimizer.prototype.minimize = function (f, returnCost, varList) {\r\n        if (returnCost === void 0) { returnCost = false; }\r\n        var _a = this.computeGradients(f, varList), value = _a.value, grads = _a.grads;\r\n        this.applyGradients(grads);\r\n        var varNames = Object.keys(grads);\r\n        varNames.forEach(function (varName) { return grads[varName].dispose(); });\r\n        if (returnCost) {\r\n            return value;\r\n        }\r\n        else {\r\n            value.dispose();\r\n            return null;\r\n        }\r\n    };\r\n    Optimizer.prototype.computeGradients = function (f, varList) {\r\n        return variableGrads(f, varList);\r\n    };\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Training', subheading: 'Optimizers' })\r\n    ], Optimizer.prototype, \"minimize\", null);\r\n    Optimizer = tslib_1.__decorate([\r\n        doc({ heading: 'Training', subheading: 'Classes', namespace: 'train' })\r\n    ], Optimizer);\r\n    return Optimizer;\r\n}(Serializable));\r\nexport { Optimizer };\r\n//# sourceMappingURL=optimizer.js.map","map":"{\"version\":3,\"file\":\"optimizer.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/optimizers/optimizer.ts\"],\"names\":[],\"mappings\":\";AAiBA,OAAO,EAAC,GAAG,EAAC,MAAM,QAAQ,CAAC;AAC3B,OAAO,EAAC,aAAa,EAAC,MAAM,YAAY,CAAC;AACzC,OAAO,EAAC,YAAY,EAAC,MAAM,kBAAkB,CAAC;AAK9C;IAAwC,qCAAY;IAApD;;IAmDA,CAAC;IAtCC,4BAAQ,GAAR,UAAS,CAAe,EAAE,UAAkB,EAAE,OAAoB;QAAxC,2BAAA,EAAA,kBAAkB;QAEpC,IAAA,sCAAkD,EAAjD,gBAAK,EAAE,gBAAK,CAAsC;QAEzD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAG3B,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,QAAQ,CAAC,OAAO,CAAC,UAAA,OAAO,IAAI,OAAA,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAxB,CAAwB,CAAC,CAAC;QAEtD,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,KAAe,CAAC;QACzB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAYD,oCAAgB,GAAhB,UAAiB,CAAe,EAAE,OAAoB;QAEpD,MAAM,CAAC,aAAa,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;IACnC,CAAC;IA/BD;QADC,GAAG,CAAC,EAAC,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;6CAiBpD;IA7BmB,SAAS;QAD9B,GAAG,CAAC,EAAC,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAC,CAAC;OAChD,SAAS,CAmD9B;IAAD,gBAAC;CAAA,AAnDD,CAAwC,YAAY,GAmDnD;SAnDqB,SAAS\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/optimizers/optimizer.d.ts","text":"import { Serializable } from '../serialization';\r\nimport { Scalar, Variable } from '../tensor';\r\nimport { NamedTensorMap } from '../types';\r\nexport declare abstract class Optimizer extends Serializable {\r\n    minimize(f: () => Scalar, returnCost?: boolean, varList?: Variable[]): Scalar | null;\r\n    computeGradients(f: () => Scalar, varList?: Variable[]): {\r\n        value: Scalar;\r\n        grads: NamedTensorMap;\r\n    };\r\n    abstract applyGradients(variableGradients: NamedTensorMap): void;\r\n}\r\n"}}

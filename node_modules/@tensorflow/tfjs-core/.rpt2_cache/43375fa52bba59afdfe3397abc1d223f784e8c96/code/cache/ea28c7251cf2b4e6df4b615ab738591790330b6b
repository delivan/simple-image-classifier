{"code":"import * as tslib_1 from \"tslib\";\r\nimport { ENV } from './environment';\r\nimport { tidy } from './globals';\r\nimport * as ops from './ops/ops';\r\nimport { Profiler } from './profiler';\r\nimport { backpropagateGradients, getFilteredNodesXToY } from './tape';\r\nimport { Tensor, Variable } from './tensor';\r\nimport * as util from './util';\r\nvar Engine = (function () {\r\n    function Engine(backend, safeMode) {\r\n        this.backend = backend;\r\n        this.safeMode = safeMode;\r\n        this.registeredVariables = {};\r\n        this.refCounter = new WeakMap();\r\n        this.nextTapeNodeId = 0;\r\n        this.numBytes = 0;\r\n        this.numTensors = 0;\r\n        this.numDataBuffers = 0;\r\n        this.gradientScopeCount = 0;\r\n        this.customGradientDepth = 0;\r\n        this.activeScope = { keep: [], track: [] };\r\n        this.scopeStack = [this.activeScope];\r\n        this.profiler = new Profiler(backend);\r\n    }\r\n    Engine.prototype.runKernel = function (forwardFunc, inputs, backwardsFunc) {\r\n        var _this = this;\r\n        var result;\r\n        var saved = [];\r\n        var saveFunc = function (x) {\r\n            saved.push(x);\r\n            return x;\r\n        };\r\n        var scopeName = this.activeScope.name;\r\n        this.customGradientDepth++;\r\n        if (!ENV.get('DEBUG')) {\r\n            result = forwardFunc(this.backend, saveFunc);\r\n        }\r\n        else {\r\n            result = this.profiler.profileKernel(scopeName, function () { return forwardFunc(_this.backend, saveFunc); });\r\n        }\r\n        this.customGradientDepth--;\r\n        if (this.shouldRecord()) {\r\n            var tapeNode = {\r\n                id: this.nextTapeNodeId++,\r\n                name: scopeName,\r\n                inputs: inputs,\r\n                output: result,\r\n            };\r\n            if (backwardsFunc != null) {\r\n                tapeNode.gradient = function (dy) { return backwardsFunc(dy, saved); };\r\n            }\r\n            this.activeTape.push(tapeNode);\r\n        }\r\n        return result;\r\n    };\r\n    Engine.prototype.registerTensor = function (a) {\r\n        var refCount = this.refCounter.has(a.dataId) ? this.refCounter.get(a.dataId) : 0;\r\n        this.numTensors++;\r\n        if (refCount === 0) {\r\n            this.numDataBuffers++;\r\n            this.numBytes +=\r\n                util.sizeFromShape(a.shape) * util.bytesPerElement(a.dtype);\r\n            this.backend.register(a.dataId, a.shape, a.dtype);\r\n        }\r\n        this.refCounter.set(a.dataId, refCount + 1);\r\n        if (!(a instanceof Variable)) {\r\n            this.track(a);\r\n        }\r\n    };\r\n    Engine.prototype.registerVariable = function (v) {\r\n        if (this.registeredVariables[v.name] != null) {\r\n            throw new Error(\"Variable with name \" + v.name + \" was already registered\");\r\n        }\r\n        this.registeredVariables[v.name] = v;\r\n    };\r\n    Engine.prototype.disposeTensor = function (a) {\r\n        if (!this.refCounter.has(a.dataId)) {\r\n            return;\r\n        }\r\n        this.numTensors--;\r\n        var refCount = this.refCounter.get(a.dataId);\r\n        if (refCount <= 1) {\r\n            this.refCounter.delete(a.dataId);\r\n            this.backend.disposeData(a.dataId);\r\n            this.numDataBuffers--;\r\n            this.numBytes -=\r\n                util.sizeFromShape(a.shape) * util.bytesPerElement(a.dtype);\r\n        }\r\n        else {\r\n            this.refCounter.set(a.dataId, refCount - 1);\r\n        }\r\n    };\r\n    Engine.prototype.disposeVariables = function () {\r\n        for (var varName in this.registeredVariables) {\r\n            var v = this.registeredVariables[varName];\r\n            this.disposeTensor(v);\r\n            delete this.registeredVariables[varName];\r\n        }\r\n    };\r\n    Engine.prototype.memory = function () {\r\n        var info = this.backend.memory();\r\n        info.numTensors = this.numTensors;\r\n        info.numDataBuffers = this.numDataBuffers;\r\n        info.numBytes = this.numBytes;\r\n        return info;\r\n    };\r\n    Engine.prototype.shouldRecord = function () {\r\n        return this.activeTape != null && this.customGradientDepth === 0;\r\n    };\r\n    Engine.prototype.addTapeNode = function (inputs, result, gradientsFunc) {\r\n        var inputsMap = {};\r\n        inputs.forEach(function (input, idx) {\r\n            inputsMap[idx] = input;\r\n        });\r\n        var gradient = function (dy) {\r\n            var res = gradientsFunc(dy);\r\n            var resMap = {};\r\n            res.forEach(function (r, idx) {\r\n                resMap[idx] = function () { return r; };\r\n            });\r\n            return resMap;\r\n        };\r\n        var tapeNode = {\r\n            id: this.nextTapeNodeId++,\r\n            name: this.activeScope.name,\r\n            inputs: inputsMap,\r\n            output: result,\r\n            gradient: gradient\r\n        };\r\n        this.activeTape.push(tapeNode);\r\n    };\r\n    Engine.prototype.keep = function (result) {\r\n        if (this.scopeStack.length === 1 && ENV.engine.safeMode) {\r\n            throw new Error('Safe mode is ON. Enclose all tensor operations inside tf.tidy(): ' +\r\n                'tf.tidy(() => {...}) to avoid memory leaks.');\r\n        }\r\n        this.activeScope.keep.push(result);\r\n        return result;\r\n    };\r\n    Engine.prototype.startScope = function (name, gradientsMode) {\r\n        if (gradientsMode === void 0) { gradientsMode = false; }\r\n        if (gradientsMode && this.gradientScopeCount === 0) {\r\n            this.activeTape = [];\r\n        }\r\n        if (gradientsMode) {\r\n            this.gradientScopeCount++;\r\n        }\r\n        var scopeInfo = { keep: [], track: [] };\r\n        if (name) {\r\n            scopeInfo.name = name;\r\n        }\r\n        this.scopeStack.push(scopeInfo);\r\n        this.activeScope = scopeInfo;\r\n    };\r\n    Engine.prototype.endScope = function (result, gradientsMode) {\r\n        var _this = this;\r\n        if (gradientsMode === void 0) { gradientsMode = false; }\r\n        if (gradientsMode) {\r\n            this.gradientScopeCount--;\r\n            if (this.gradientScopeCount === 0) {\r\n                this.activeTape = null;\r\n            }\r\n        }\r\n        var tensorsToKeep = this.activeScope.keep;\r\n        var tensorsToTrackInParent = util.extractTensorsFromContainer(result);\r\n        tensorsToKeep = tensorsToKeep.concat(tensorsToTrackInParent);\r\n        for (var i = 0; i < this.activeScope.track.length; i++) {\r\n            var tensor = this.activeScope.track[i];\r\n            if (util.isTensorInList(tensor, tensorsToKeep)) {\r\n                continue;\r\n            }\r\n            if (this.activeTape != null) {\r\n                tensorsToTrackInParent.push(tensor);\r\n            }\r\n            else {\r\n                tensor.dispose();\r\n            }\r\n        }\r\n        this.scopeStack.pop();\r\n        this.activeScope = this.scopeStack.length === 0 ?\r\n            { keep: [], track: [] } :\r\n            this.scopeStack[this.scopeStack.length - 1];\r\n        tensorsToTrackInParent.forEach(function (tensor) {\r\n            if (!util.isTensorInList(tensor, _this.activeScope.keep)) {\r\n                _this.track(tensor);\r\n            }\r\n        });\r\n    };\r\n    Engine.prototype.dispose = function () { };\r\n    Engine.prototype.gradients = function (f, xs, dy, allowNoGradients) {\r\n        var _this = this;\r\n        if (allowNoGradients === void 0) { allowNoGradients = false; }\r\n        util.assert(xs.length > 0, 'gradients() received an empty list of xs.');\r\n        return tidy('gradients', function () {\r\n            var y = f();\r\n            util.assert(y instanceof Tensor, 'The result y returned by f() must be a tensor.');\r\n            var filteredTape = getFilteredNodesXToY(_this.activeTape, xs, y);\r\n            if (!allowNoGradients && filteredTape.length === 0 && xs.length > 0) {\r\n                throw new Error('Cannot compute gradient of y=f(x) with respect to x. Make sure ' +\r\n                    'that the f you passed encloses all operations that lead from x ' +\r\n                    'to y.');\r\n            }\r\n            var accumulatedGradientMap = {};\r\n            accumulatedGradientMap[y.id] = (dy == null) ? ops.ones(y.shape) : dy;\r\n            backpropagateGradients(accumulatedGradientMap, filteredTape);\r\n            var grads = xs.map(function (x) { return accumulatedGradientMap[x.id]; });\r\n            return { value: y, grads: grads };\r\n        }, true);\r\n    };\r\n    Engine.prototype.customGrad = function (f) {\r\n        var _this = this;\r\n        util.assert(util.isFunction(f), 'The f passed in customGrad(f) must be a function.');\r\n        return function () {\r\n            var inputs = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                inputs[_i] = arguments[_i];\r\n            }\r\n            util.assert(inputs.every(function (t) { return t instanceof Tensor; }), 'The args passed in customGrad(f)(x1, x2,...) must all be tensors');\r\n            _this.customGradientDepth++;\r\n            var gradientsFunc;\r\n            var gradientsMode = true;\r\n            var result = tidy(f.name, function () {\r\n                var _a = f.apply(void 0, inputs), value = _a.value, gradFunc = _a.gradFunc;\r\n                util.assert(value instanceof Tensor, 'The function f passed in customGrad(f) must return an object ' +\r\n                    'where `obj.value` is a tensor');\r\n                util.assert(util.isFunction(gradFunc), 'The function f passed in customGrad(f) must return an object ' +\r\n                    'where `obj.gradFunc` is a function.');\r\n                gradientsFunc = gradFunc;\r\n                return value;\r\n            }, gradientsMode);\r\n            _this.customGradientDepth--;\r\n            if (_this.shouldRecord()) {\r\n                var gradFunc = function (dy) {\r\n                    var res = gradientsFunc(dy);\r\n                    var grads = Array.isArray(res) ? res : [res];\r\n                    util.assert(grads.length === inputs.length, 'The function f passed in customGrad(f) must return an object ' +\r\n                        'where `obj.gradFunc` is a function that returns the same ' +\r\n                        'number of tensors as inputs passed to f(...).');\r\n                    util.assert(grads.every(function (t) { return t instanceof Tensor; }), 'The function f passed in customGrad(f) must return an object ' +\r\n                        'where `obj.gradFunc` is a function that returns a list of ' +\r\n                        'only tensors.');\r\n                    return grads;\r\n                };\r\n                _this.addTapeNode(inputs, result, gradFunc);\r\n            }\r\n            return result;\r\n        };\r\n    };\r\n    Engine.prototype.write = function (dataId, values) {\r\n        this.backend.write(dataId, values);\r\n    };\r\n    Engine.prototype.readSync = function (dataId) {\r\n        return this.backend.readSync(dataId);\r\n    };\r\n    Engine.prototype.read = function (dataId) {\r\n        return this.backend.read(dataId);\r\n    };\r\n    Engine.prototype.fromPixels = function (pixels, numChannels) {\r\n        return this.backend.fromPixels(pixels, numChannels);\r\n    };\r\n    Engine.prototype.time = function (query) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var start, timingInfo;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        start = performance.now();\r\n                        return [4, this.backend.time(query)];\r\n                    case 1:\r\n                        timingInfo = _a.sent();\r\n                        timingInfo.wallMs = performance.now() - start;\r\n                        return [2, timingInfo];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Engine.prototype.track = function (result) {\r\n        if (this.scopeStack.length === 1 && this.safeMode) {\r\n            throw new Error('Safe mode is ON. Enclose all tensor operations inside tf.tidy(): ' +\r\n                'tf.tidy(() => {op();...}); to avoid memory leaks.');\r\n        }\r\n        this.activeScope.track.push(result);\r\n        return result;\r\n    };\r\n    return Engine;\r\n}());\r\nexport { Engine };\r\n//# sourceMappingURL=engine.js.map","map":"{\"version\":3,\"file\":\"engine.js\",\"sourceRoot\":\"\",\"sources\":[\"src/engine.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/engine.d.ts","text":"import { BackendTimingInfo, KernelBackend } from './kernels/backend';\r\nimport { DataId, Tensor, Tensor3D, Variable } from './tensor';\r\nimport { NamedTensorMap, NamedVariableMap, TensorContainer, TypedArray } from './types';\r\nexport declare type ForwardFunc<T extends Tensor> = (backend: KernelBackend, save?: <S extends Tensor>(tensor: S) => S) => T;\r\nexport declare type CustomGradientFunc<T extends Tensor> = (...args: Tensor[]) => {\r\n    value: T;\r\n    gradFunc: (dy: T) => Tensor | Tensor[];\r\n};\r\nexport interface TensorManager {\r\n    registerTensor(a: Tensor): void;\r\n    registerVariable(v: Variable): void;\r\n    disposeTensor(a: Tensor): void;\r\n    memory(): {\r\n        numDataBuffers: number;\r\n        numBytes: number;\r\n    };\r\n}\r\nexport declare type MemoryInfo = {\r\n    numTensors: number;\r\n    numDataBuffers: number;\r\n    numBytes: number;\r\n    unreliable?: boolean;\r\n};\r\nexport interface TimingInfo extends BackendTimingInfo {\r\n    wallMs: number;\r\n}\r\nexport declare class Engine implements TensorManager {\r\n    private backend;\r\n    safeMode: boolean;\r\n    registeredVariables: NamedVariableMap;\r\n    private refCounter;\r\n    private nextTapeNodeId;\r\n    private numBytes;\r\n    private numTensors;\r\n    private numDataBuffers;\r\n    private activeTape;\r\n    private gradientScopeCount;\r\n    private customGradientDepth;\r\n    private activeScope;\r\n    private scopeStack;\r\n    private profiler;\r\n    constructor(backend: KernelBackend, safeMode: boolean);\r\n    runKernel<T extends Tensor, I extends NamedTensorMap>(forwardFunc: ForwardFunc<T>, inputs: I, backwardsFunc?: (dy: T, saved: Tensor[]) => {\r\n        [P in keyof I]: () => I[P];\r\n    }): T;\r\n    registerTensor(a: Tensor | Variable): void;\r\n    registerVariable(v: Variable): void;\r\n    disposeTensor(a: Tensor): void;\r\n    disposeVariables(): void;\r\n    memory(): MemoryInfo;\r\n    private shouldRecord();\r\n    private addTapeNode(inputs, result, gradientsFunc);\r\n    keep<T extends Tensor>(result: T): T;\r\n    startScope(name?: string, gradientsMode?: boolean): void;\r\n    endScope(result: TensorContainer, gradientsMode?: boolean): void;\r\n    dispose(): void;\r\n    gradients<T extends Tensor>(f: () => T, xs: Tensor[], dy?: T, allowNoGradients?: boolean): {\r\n        value: T;\r\n        grads: Tensor[];\r\n    };\r\n    customGrad<T extends Tensor>(f: CustomGradientFunc<T>): (...args: Tensor[]) => T;\r\n    write(dataId: DataId, values: TypedArray): void;\r\n    readSync(dataId: DataId): TypedArray;\r\n    read(dataId: DataId): Promise<TypedArray>;\r\n    fromPixels(pixels: ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement, numChannels: number): Tensor3D;\r\n    time(query: () => void): Promise<TimingInfo>;\r\n    private track<T>(result);\r\n}\r\nexport declare type ScopeFn<T extends TensorContainer> = () => T;\r\n"}}

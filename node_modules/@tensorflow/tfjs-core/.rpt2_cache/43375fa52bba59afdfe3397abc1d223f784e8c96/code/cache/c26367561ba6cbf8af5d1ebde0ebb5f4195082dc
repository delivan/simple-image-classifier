{"code":"import * as tslib_1 from \"tslib\";\r\nimport { ENV } from '../environment';\r\nimport { assert } from '../util';\r\nimport { arrayBufferToBase64String, base64StringToArrayBuffer, getModelArtifactsInfoForJSON } from './io_utils';\r\nimport { ModelStoreManagerRegistry } from './model_management';\r\nimport { IORouterRegistry } from './router_registry';\r\nvar PATH_SEPARATOR = '/';\r\nvar PATH_PREFIX = 'tensorflowjs_models';\r\nvar INFO_SUFFIX = 'info';\r\nvar MODEL_TOPOLOGY_SUFFIX = 'model_topology';\r\nvar WEIGHT_SPECS_SUFFIX = 'weight_specs';\r\nvar WEIGHT_DATA_SUFFIX = 'weight_data';\r\nexport function purgeLocalStorageArtifacts() {\r\n    if (!ENV.get('IS_BROWSER') || typeof window.localStorage === 'undefined') {\r\n        throw new Error('purgeLocalStorageModels() cannot proceed because local storage is ' +\r\n            'unavailable in the current environment.');\r\n    }\r\n    var LS = window.localStorage;\r\n    var purgedModelPaths = [];\r\n    for (var i = 0; i < LS.length; ++i) {\r\n        var key = LS.key(i);\r\n        var prefix = PATH_PREFIX + PATH_SEPARATOR;\r\n        if (key.startsWith(prefix) && key.length > prefix.length) {\r\n            LS.removeItem(key);\r\n            var modelName = getModelPathFromKey(key);\r\n            if (purgedModelPaths.indexOf(modelName) === -1) {\r\n                purgedModelPaths.push(modelName);\r\n            }\r\n        }\r\n    }\r\n    return purgedModelPaths;\r\n}\r\nfunction getModelKeys(path) {\r\n    return {\r\n        info: [PATH_PREFIX, path, INFO_SUFFIX].join(PATH_SEPARATOR),\r\n        topology: [PATH_PREFIX, path, MODEL_TOPOLOGY_SUFFIX].join(PATH_SEPARATOR),\r\n        weightSpecs: [PATH_PREFIX, path, WEIGHT_SPECS_SUFFIX].join(PATH_SEPARATOR),\r\n        weightData: [PATH_PREFIX, path, WEIGHT_DATA_SUFFIX].join(PATH_SEPARATOR)\r\n    };\r\n}\r\nfunction getModelPathFromKey(key) {\r\n    var items = key.split(PATH_SEPARATOR);\r\n    if (items.length < 3) {\r\n        throw new Error(\"Invalid key format: \" + key);\r\n    }\r\n    return items.slice(1, items.length - 1).join(PATH_SEPARATOR);\r\n}\r\nfunction maybeStripScheme(key) {\r\n    return key.startsWith(BrowserLocalStorage.URL_SCHEME) ?\r\n        key.slice(BrowserLocalStorage.URL_SCHEME.length) :\r\n        key;\r\n}\r\nvar BrowserLocalStorage = (function () {\r\n    function BrowserLocalStorage(modelPath) {\r\n        if (!ENV.get('IS_BROWSER') || typeof window.localStorage === 'undefined') {\r\n            throw new Error('The current environment does not support local storage.');\r\n        }\r\n        this.LS = window.localStorage;\r\n        if (modelPath == null || !modelPath) {\r\n            throw new Error('For local storage, modelPath must not be null, undefined or empty.');\r\n        }\r\n        this.modelPath = modelPath;\r\n        this.keys = getModelKeys(this.modelPath);\r\n    }\r\n    BrowserLocalStorage.prototype.save = function (modelArtifacts) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var topology, weightSpecs, modelArtifactsInfo, key;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\r\n                    throw new Error('BrowserLocalStorage.save() does not support saving model topology ' +\r\n                        'in binary formats yet.');\r\n                }\r\n                else {\r\n                    topology = JSON.stringify(modelArtifacts.modelTopology);\r\n                    weightSpecs = JSON.stringify(modelArtifacts.weightSpecs);\r\n                    modelArtifactsInfo = getModelArtifactsInfoForJSON(modelArtifacts);\r\n                    try {\r\n                        this.LS.setItem(this.keys.info, JSON.stringify(modelArtifactsInfo));\r\n                        this.LS.setItem(this.keys.topology, topology);\r\n                        this.LS.setItem(this.keys.weightSpecs, weightSpecs);\r\n                        this.LS.setItem(this.keys.weightData, arrayBufferToBase64String(modelArtifacts.weightData));\r\n                        return [2, { modelArtifactsInfo: modelArtifactsInfo }];\r\n                    }\r\n                    catch (err) {\r\n                        for (key in this.keys) {\r\n                            this.LS.removeItem(this.keys[key]);\r\n                        }\r\n                        throw new Error(\"Failed to save model '\" + this.modelPath + \"' to local storage: \" +\r\n                            \"size quota being exceeded is a possible cause of this failure: \" +\r\n                            (\"modelTopologyBytes=\" + modelArtifactsInfo.modelTopologyBytes + \", \") +\r\n                            (\"weightSpecsBytes=\" + modelArtifactsInfo.weightSpecsBytes + \", \") +\r\n                            (\"weightDataBytes=\" + modelArtifactsInfo.weightDataBytes + \".\"));\r\n                    }\r\n                }\r\n                return [2];\r\n            });\r\n        });\r\n    };\r\n    BrowserLocalStorage.prototype.load = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var info, out, topology, weightSpecs, weightDataBase64;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                info = JSON.parse(this.LS.getItem(this.keys.info));\r\n                if (info == null) {\r\n                    throw new Error(\"In local storage, there is no model with name '\" + this.modelPath + \"'\");\r\n                }\r\n                if (info.modelTopologyType !== 'JSON') {\r\n                    throw new Error('BrowserLocalStorage does not support loading non-JSON model ' +\r\n                        'topology yet.');\r\n                }\r\n                out = {};\r\n                topology = JSON.parse(this.LS.getItem(this.keys.topology));\r\n                if (topology == null) {\r\n                    throw new Error(\"In local storage, the topology of model '\" + this.modelPath + \"' \" +\r\n                        \"is missing.\");\r\n                }\r\n                out.modelTopology = topology;\r\n                weightSpecs = JSON.parse(this.LS.getItem(this.keys.weightSpecs));\r\n                if (weightSpecs == null) {\r\n                    throw new Error(\"In local storage, the weight specs of model '\" + this.modelPath + \"' \" +\r\n                        \"are missing.\");\r\n                }\r\n                out.weightSpecs = weightSpecs;\r\n                weightDataBase64 = this.LS.getItem(this.keys.weightData);\r\n                if (weightDataBase64 == null) {\r\n                    throw new Error(\"In local storage, the binary weight values of model \" +\r\n                        (\"'\" + this.modelPath + \"' are missing.\"));\r\n                }\r\n                out.weightData = base64StringToArrayBuffer(weightDataBase64);\r\n                return [2, out];\r\n            });\r\n        });\r\n    };\r\n    BrowserLocalStorage.URL_SCHEME = 'localstorage://';\r\n    return BrowserLocalStorage;\r\n}());\r\nexport { BrowserLocalStorage };\r\nexport var localStorageRouter = function (url) {\r\n    if (!ENV.get('IS_BROWSER')) {\r\n        return null;\r\n    }\r\n    else {\r\n        if (url.startsWith(BrowserLocalStorage.URL_SCHEME)) {\r\n            return browserLocalStorage(url.slice(BrowserLocalStorage.URL_SCHEME.length));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n};\r\nIORouterRegistry.registerSaveRouter(localStorageRouter);\r\nIORouterRegistry.registerLoadRouter(localStorageRouter);\r\nexport function browserLocalStorage(modelPath) {\r\n    return new BrowserLocalStorage(modelPath);\r\n}\r\nvar BrowserLocalStorageManager = (function () {\r\n    function BrowserLocalStorageManager() {\r\n        assert(ENV.get('IS_BROWSER'), 'Current environment is not a web browser');\r\n        assert(typeof window.localStorage !== 'undefined', 'Current browser does not appear to support localStorage');\r\n        this.LS = window.localStorage;\r\n    }\r\n    BrowserLocalStorageManager.prototype.listModels = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var out, prefix, suffix, i, key, modelPath;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                out = {};\r\n                prefix = PATH_PREFIX + PATH_SEPARATOR;\r\n                suffix = PATH_SEPARATOR + INFO_SUFFIX;\r\n                for (i = 0; i < this.LS.length; ++i) {\r\n                    key = this.LS.key(i);\r\n                    if (key.startsWith(prefix) && key.endsWith(suffix)) {\r\n                        modelPath = getModelPathFromKey(key);\r\n                        out[modelPath] = JSON.parse(this.LS.getItem(key));\r\n                    }\r\n                }\r\n                return [2, out];\r\n            });\r\n        });\r\n    };\r\n    BrowserLocalStorageManager.prototype.removeModel = function (path) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var keys, info;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                path = maybeStripScheme(path);\r\n                keys = getModelKeys(path);\r\n                if (this.LS.getItem(keys.info) == null) {\r\n                    throw new Error(\"Cannot find model at path '\" + path + \"'\");\r\n                }\r\n                info = JSON.parse(this.LS.getItem(keys.info));\r\n                this.LS.removeItem(keys.info);\r\n                this.LS.removeItem(keys.topology);\r\n                this.LS.removeItem(keys.weightSpecs);\r\n                this.LS.removeItem(keys.weightData);\r\n                return [2, info];\r\n            });\r\n        });\r\n    };\r\n    return BrowserLocalStorageManager;\r\n}());\r\nexport { BrowserLocalStorageManager };\r\nif (ENV.get('IS_BROWSER')) {\r\n    try {\r\n        ModelStoreManagerRegistry.registerManager(BrowserLocalStorage.URL_SCHEME, new BrowserLocalStorageManager());\r\n    }\r\n    catch (err) {\r\n    }\r\n}\r\n//# sourceMappingURL=local_storage.js.map","map":"{\"version\":3,\"file\":\"local_storage.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/io/local_storage.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/io/local_storage.d.ts","text":"import { IORouter } from './router_registry';\r\nimport { IOHandler, ModelArtifacts, ModelArtifactsInfo, ModelStoreManager, SaveResult } from './types';\r\nexport declare function purgeLocalStorageArtifacts(): string[];\r\nexport declare class BrowserLocalStorage implements IOHandler {\r\n    protected readonly LS: Storage;\r\n    protected readonly modelPath: string;\r\n    protected readonly keys: {\r\n        [key: string]: string;\r\n    };\r\n    static readonly URL_SCHEME: string;\r\n    constructor(modelPath: string);\r\n    save(modelArtifacts: ModelArtifacts): Promise<SaveResult>;\r\n    load(): Promise<ModelArtifacts>;\r\n}\r\nexport declare const localStorageRouter: IORouter;\r\nexport declare function browserLocalStorage(modelPath: string): IOHandler;\r\nexport declare class BrowserLocalStorageManager implements ModelStoreManager {\r\n    private readonly LS;\r\n    constructor();\r\n    listModels(): Promise<{\r\n        [path: string]: ModelArtifactsInfo;\r\n    }>;\r\n    removeModel(path: string): Promise<ModelArtifactsInfo>;\r\n}\r\n"}}

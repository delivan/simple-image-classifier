{"code":"import * as tslib_1 from \"tslib\";\r\nimport { ENV } from '../environment';\r\nimport { getModelArtifactsInfoForJSON } from './io_utils';\r\nimport { ModelStoreManagerRegistry } from './model_management';\r\nimport { IORouterRegistry } from './router_registry';\r\nvar DATABASE_NAME = 'tensorflowjs';\r\nvar DATABASE_VERSION = 1;\r\nvar MODEL_STORE_NAME = 'models_store';\r\nvar INFO_STORE_NAME = 'model_info_store';\r\nexport function deleteDatabase() {\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        var idbFactory;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            idbFactory = getIndexedDBFactory();\r\n            return [2, new Promise(function (resolve, reject) {\r\n                    var deleteRequest = idbFactory.deleteDatabase(DATABASE_NAME);\r\n                    deleteRequest.onsuccess = function () { return resolve(); };\r\n                    deleteRequest.onerror = function (error) { return reject(error); };\r\n                })];\r\n        });\r\n    });\r\n}\r\nfunction getIndexedDBFactory() {\r\n    if (!ENV.get('IS_BROWSER')) {\r\n        throw new Error('Failed to obtain IndexedDB factory because the current environment' +\r\n            'is not a web browser.');\r\n    }\r\n    var theWindow = window;\r\n    var factory = theWindow.indexedDB || theWindow.mozIndexedDB ||\r\n        theWindow.webkitIndexedDB || theWindow.msIndexedDB ||\r\n        theWindow.shimIndexedDB;\r\n    if (factory == null) {\r\n        throw new Error('The current browser does not appear to support IndexedDB.');\r\n    }\r\n    return factory;\r\n}\r\nfunction setUpDatabase(openRequest) {\r\n    var db = openRequest.result;\r\n    db.createObjectStore(MODEL_STORE_NAME, { keyPath: 'modelPath' });\r\n    db.createObjectStore(INFO_STORE_NAME, { keyPath: 'modelPath' });\r\n}\r\nvar BrowserIndexedDB = (function () {\r\n    function BrowserIndexedDB(modelPath) {\r\n        this.indexedDB = getIndexedDBFactory();\r\n        if (modelPath == null || !modelPath) {\r\n            throw new Error('For IndexedDB, modelPath must not be null, undefined or empty.');\r\n        }\r\n        this.modelPath = modelPath;\r\n    }\r\n    BrowserIndexedDB.prototype.save = function (modelArtifacts) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\r\n                    throw new Error('BrowserLocalStorage.save() does not support saving model topology ' +\r\n                        'in binary formats yet.');\r\n                }\r\n                return [2, this.databaseAction(this.modelPath, modelArtifacts)];\r\n            });\r\n        });\r\n    };\r\n    BrowserIndexedDB.prototype.load = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2, this.databaseAction(this.modelPath)];\r\n            });\r\n        });\r\n    };\r\n    BrowserIndexedDB.prototype.databaseAction = function (modelPath, modelArtifacts) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var openRequest = _this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\r\n            openRequest.onupgradeneeded = function () { return setUpDatabase(openRequest); };\r\n            openRequest.onsuccess = function () {\r\n                var db = openRequest.result;\r\n                if (modelArtifacts == null) {\r\n                    var modelTx = db.transaction(MODEL_STORE_NAME, 'readonly');\r\n                    var modelStore = modelTx.objectStore(MODEL_STORE_NAME);\r\n                    var getRequest_1 = modelStore.get(_this.modelPath);\r\n                    getRequest_1.onsuccess = function () {\r\n                        if (getRequest_1.result == null) {\r\n                            db.close();\r\n                            return reject(new Error(\"Cannot find model with path '\" + _this.modelPath + \"' \" +\r\n                                \"in IndexedDB.\"));\r\n                        }\r\n                        else {\r\n                            resolve(getRequest_1.result.modelArtifacts);\r\n                        }\r\n                    };\r\n                    getRequest_1.onerror = function (error) {\r\n                        db.close();\r\n                        return reject(getRequest_1.error);\r\n                    };\r\n                    modelTx.oncomplete = function () { return db.close(); };\r\n                }\r\n                else {\r\n                    var modelArtifactsInfo_1 = getModelArtifactsInfoForJSON(modelArtifacts);\r\n                    var infoTx_1 = db.transaction(INFO_STORE_NAME, 'readwrite');\r\n                    var infoStore_1 = infoTx_1.objectStore(INFO_STORE_NAME);\r\n                    var putInfoRequest_1 = infoStore_1.put({ modelPath: _this.modelPath, modelArtifactsInfo: modelArtifactsInfo_1 });\r\n                    var modelTx_1;\r\n                    putInfoRequest_1.onsuccess = function () {\r\n                        modelTx_1 = db.transaction(MODEL_STORE_NAME, 'readwrite');\r\n                        var modelStore = modelTx_1.objectStore(MODEL_STORE_NAME);\r\n                        var putModelRequest = modelStore.put({\r\n                            modelPath: _this.modelPath,\r\n                            modelArtifacts: modelArtifacts,\r\n                            modelArtifactsInfo: modelArtifactsInfo_1\r\n                        });\r\n                        putModelRequest.onsuccess = function () { return resolve({ modelArtifactsInfo: modelArtifactsInfo_1 }); };\r\n                        putModelRequest.onerror = function (error) {\r\n                            infoStore_1 = infoTx_1.objectStore(INFO_STORE_NAME);\r\n                            var deleteInfoRequest = infoStore_1.delete(_this.modelPath);\r\n                            deleteInfoRequest.onsuccess = function () {\r\n                                db.close();\r\n                                return reject(putModelRequest.error);\r\n                            };\r\n                            deleteInfoRequest.onerror = function (error) {\r\n                                db.close();\r\n                                return reject(putModelRequest.error);\r\n                            };\r\n                        };\r\n                    };\r\n                    putInfoRequest_1.onerror = function (error) {\r\n                        db.close();\r\n                        return reject(putInfoRequest_1.error);\r\n                    };\r\n                    infoTx_1.oncomplete = function () {\r\n                        if (modelTx_1 == null) {\r\n                            db.close();\r\n                        }\r\n                        else {\r\n                            modelTx_1.oncomplete = function () { return db.close(); };\r\n                        }\r\n                    };\r\n                }\r\n            };\r\n            openRequest.onerror = function (error) { return reject(openRequest.error); };\r\n        });\r\n    };\r\n    BrowserIndexedDB.URL_SCHEME = 'indexeddb://';\r\n    return BrowserIndexedDB;\r\n}());\r\nexport { BrowserIndexedDB };\r\nexport var indexedDBRouter = function (url) {\r\n    if (!ENV.get('IS_BROWSER')) {\r\n        return null;\r\n    }\r\n    else {\r\n        if (url.startsWith(BrowserIndexedDB.URL_SCHEME)) {\r\n            return browserIndexedDB(url.slice(BrowserIndexedDB.URL_SCHEME.length));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n};\r\nIORouterRegistry.registerSaveRouter(indexedDBRouter);\r\nIORouterRegistry.registerLoadRouter(indexedDBRouter);\r\nexport function browserIndexedDB(modelPath) {\r\n    return new BrowserIndexedDB(modelPath);\r\n}\r\nfunction maybeStripScheme(key) {\r\n    return key.startsWith(BrowserIndexedDB.URL_SCHEME) ?\r\n        key.slice(BrowserIndexedDB.URL_SCHEME.length) :\r\n        key;\r\n}\r\nvar BrowserIndexedDBManager = (function () {\r\n    function BrowserIndexedDBManager() {\r\n        this.indexedDB = getIndexedDBFactory();\r\n    }\r\n    BrowserIndexedDBManager.prototype.listModels = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2, new Promise(function (resolve, reject) {\r\n                        var openRequest = _this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\r\n                        openRequest.onupgradeneeded = function () { return setUpDatabase(openRequest); };\r\n                        openRequest.onsuccess = function () {\r\n                            var db = openRequest.result;\r\n                            var tx = db.transaction(INFO_STORE_NAME, 'readonly');\r\n                            var store = tx.objectStore(INFO_STORE_NAME);\r\n                            var getAllInfoRequest = store.getAll();\r\n                            getAllInfoRequest.onsuccess = function () {\r\n                                var out = {};\r\n                                for (var _i = 0, _a = getAllInfoRequest.result; _i < _a.length; _i++) {\r\n                                    var item = _a[_i];\r\n                                    out[item.modelPath] = item.modelArtifactsInfo;\r\n                                }\r\n                                resolve(out);\r\n                            };\r\n                            getAllInfoRequest.onerror = function (error) {\r\n                                db.close();\r\n                                return reject(getAllInfoRequest.error);\r\n                            };\r\n                            tx.oncomplete = function () { return db.close(); };\r\n                        };\r\n                        openRequest.onerror = function (error) { return reject(openRequest.error); };\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    BrowserIndexedDBManager.prototype.removeModel = function (path) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                path = maybeStripScheme(path);\r\n                return [2, new Promise(function (resolve, reject) {\r\n                        var openRequest = _this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\r\n                        openRequest.onupgradeneeded = function () { return setUpDatabase(openRequest); };\r\n                        openRequest.onsuccess = function () {\r\n                            var db = openRequest.result;\r\n                            var infoTx = db.transaction(INFO_STORE_NAME, 'readwrite');\r\n                            var infoStore = infoTx.objectStore(INFO_STORE_NAME);\r\n                            var getInfoRequest = infoStore.get(path);\r\n                            var modelTx;\r\n                            getInfoRequest.onsuccess = function () {\r\n                                if (getInfoRequest.result == null) {\r\n                                    db.close();\r\n                                    return reject(new Error(\"Cannot find model with path '\" + path + \"' \" +\r\n                                        \"in IndexedDB.\"));\r\n                                }\r\n                                else {\r\n                                    var deleteInfoRequest = infoStore.delete(path);\r\n                                    var deleteModelData_1 = function () {\r\n                                        modelTx = db.transaction(MODEL_STORE_NAME, 'readwrite');\r\n                                        var modelStore = modelTx.objectStore(MODEL_STORE_NAME);\r\n                                        var deleteModelRequest = modelStore.delete(path);\r\n                                        deleteModelRequest.onsuccess = function () {\r\n                                            return resolve(getInfoRequest.result.modelArtifactsInfo);\r\n                                        };\r\n                                        deleteModelRequest.onerror = function (error) {\r\n                                            return reject(getInfoRequest.error);\r\n                                        };\r\n                                    };\r\n                                    deleteInfoRequest.onsuccess = deleteModelData_1;\r\n                                    deleteInfoRequest.onerror = function (error) {\r\n                                        deleteModelData_1();\r\n                                        db.close();\r\n                                        return reject(getInfoRequest.error);\r\n                                    };\r\n                                }\r\n                            };\r\n                            getInfoRequest.onerror = function (error) {\r\n                                db.close();\r\n                                return reject(getInfoRequest.error);\r\n                            };\r\n                            infoTx.oncomplete = function () {\r\n                                if (modelTx == null) {\r\n                                    db.close();\r\n                                }\r\n                                else {\r\n                                    modelTx.oncomplete = function () { return db.close(); };\r\n                                }\r\n                            };\r\n                        };\r\n                        openRequest.onerror = function (error) { return reject(openRequest.error); };\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    return BrowserIndexedDBManager;\r\n}());\r\nexport { BrowserIndexedDBManager };\r\nif (ENV.get('IS_BROWSER')) {\r\n    try {\r\n        ModelStoreManagerRegistry.registerManager(BrowserIndexedDB.URL_SCHEME, new BrowserIndexedDBManager());\r\n    }\r\n    catch (err) {\r\n    }\r\n}\r\n//# sourceMappingURL=indexed_db.js.map","map":"{\"version\":3,\"file\":\"indexed_db.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/io/indexed_db.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/io/indexed_db.d.ts","text":"import { IORouter } from './router_registry';\r\nimport { IOHandler, ModelArtifacts, ModelArtifactsInfo, ModelStoreManager, SaveResult } from './types';\r\nexport declare function deleteDatabase(): Promise<void>;\r\nexport declare class BrowserIndexedDB implements IOHandler {\r\n    protected readonly indexedDB: IDBFactory;\r\n    protected readonly modelPath: string;\r\n    static readonly URL_SCHEME: string;\r\n    constructor(modelPath: string);\r\n    save(modelArtifacts: ModelArtifacts): Promise<SaveResult>;\r\n    load(): Promise<ModelArtifacts>;\r\n    private databaseAction(modelPath, modelArtifacts?);\r\n}\r\nexport declare const indexedDBRouter: IORouter;\r\nexport declare function browserIndexedDB(modelPath: string): IOHandler;\r\nexport declare class BrowserIndexedDBManager implements ModelStoreManager {\r\n    private indexedDB;\r\n    constructor();\r\n    listModels(): Promise<{\r\n        [path: string]: ModelArtifactsInfo;\r\n    }>;\r\n    removeModel(path: string): Promise<ModelArtifactsInfo>;\r\n}\r\n"}}

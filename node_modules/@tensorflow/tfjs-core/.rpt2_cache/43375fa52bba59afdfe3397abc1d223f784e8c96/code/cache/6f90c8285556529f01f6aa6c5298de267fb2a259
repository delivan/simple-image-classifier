{"code":"import * as tslib_1 from \"tslib\";\r\nimport { doc } from '../doc';\r\nimport { ENV } from '../environment';\r\nimport * as util from '../util';\r\nimport { operation } from './operation';\r\nimport * as ops from './ops';\r\nimport { zerosLike } from './ops';\r\nimport * as selu_util from './selu_util';\r\nvar UnaryOps = (function () {\r\n    function UnaryOps() {\r\n    }\r\n    UnaryOps.neg = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'neg');\r\n        var grad = function (dy) {\r\n            return { x: function () { return dy.neg(); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.neg(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.ceil = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'ceil');\r\n        var grad = function (dy) {\r\n            return { x: function () { return ops.zerosLike(dy); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.ceil(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.floor = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'floor');\r\n        var grad = function (dy) {\r\n            return { x: function () { return ops.zerosLike(dy); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.floor(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.sign = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'sign');\r\n        var grad = function (dy) {\r\n            return { x: function () { return ops.zerosLike(dy); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.sign(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.round = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'round');\r\n        var grad = function (dy) {\r\n            return { x: function () { return ops.zerosLike(dy); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.round(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.exp = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'exp');\r\n        var bck = function (dy, saved) {\r\n            var y = saved[0];\r\n            return { x: function () { return dy.mulStrict(y); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend, save) { return save(backend.exp(x)); }, { x: x }, bck);\r\n    };\r\n    UnaryOps.expm1 = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'expm1');\r\n        var grad = function (dy) {\r\n            return { x: function () { return dy.mulStrict(x.exp()); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.expm1(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.log = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'log');\r\n        var grad = function (dy) {\r\n            return { x: function () { return dy.divStrict(x.toFloat()); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.log(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.log1p = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'log1p');\r\n        var grad = function (dy) {\r\n            return { x: function () { return dy.divStrict(x.add(ops.scalar(1))); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.log1p(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.sqrt = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'sqrt');\r\n        var grad = function (dy) {\r\n            return { x: function () { return dy.divStrict(x.toFloat().sqrt().mul(ops.scalar(2))); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.sqrt(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.rsqrt = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'rsqrt');\r\n        var grad = function (dy) {\r\n            return {\r\n                x: function () { return dy.divStrict(x.pow(ops.scalar(1.5)).mul(ops.scalar(2))).neg(); }\r\n            };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.rsqrt(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.square = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'square');\r\n        var grad = function (dy) {\r\n            return { x: function () { return dy.mulStrict(x.toFloat().mul(ops.scalar(2))); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.square(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.reciprocal = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'reciprocal');\r\n        var grad = function (dy) {\r\n            return { x: function () { return dy.divStrict(x.square().neg()); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.reciprocal(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.abs = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'abs');\r\n        var grad = function (dy) {\r\n            return { x: function () { return dy.mulStrict(x.toFloat().step(-1)); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.abs(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.clipByValue = function (x, clipValueMin, clipValueMax) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'clipByValue');\r\n        util.assert((clipValueMin <= clipValueMax), \"Error in clip: min (\" + clipValueMin + \") must be \" +\r\n            (\"less than or equal to max (\" + clipValueMax + \").\"));\r\n        var grad = function (dy) {\r\n            return {\r\n                x: function () { return dy.where(x.greater(ops.scalar(clipValueMin))\r\n                    .logicalAnd(x.less(ops.scalar(clipValueMax))), zerosLike(dy)); },\r\n            };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.clip(x, clipValueMin, clipValueMax); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.relu = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'relu');\r\n        if (x.dtype === 'bool') {\r\n            return x.toInt();\r\n        }\r\n        var grad = function (dy) {\r\n            var stepRes = x.step();\r\n            return { x: function () { return dy.mulStrict(stepRes.toFloat()); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.relu(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.elu = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'elu');\r\n        var grad = function (dy, saved) {\r\n            var y = saved[0];\r\n            return {\r\n                x: function () {\r\n                    return ENV.engine.runKernel(function (backend) { return backend.eluDer(dy, y); }, { dy: dy, y: y });\r\n                }\r\n            };\r\n        };\r\n        return ENV.engine.runKernel(function (backend, save) { return save(backend.elu(x)); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.selu = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'selu');\r\n        var grad = function (dy) {\r\n            return {\r\n                x: function () {\r\n                    var mask = x.greater(ops.scalar(0));\r\n                    var scaleAlpha = ops.scalar(selu_util.SELU_SCALEALPHA);\r\n                    var scale = ops.scalar(selu_util.SELU_SCALE);\r\n                    var greaterThanZeroDer = dy.mul(scale);\r\n                    var lessEqualZeroDer = dy.mul(scaleAlpha).mul(x.toFloat().exp());\r\n                    return ops.where(mask, greaterThanZeroDer, lessEqualZeroDer);\r\n                }\r\n            };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.selu(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.leakyRelu = function (x, alpha) {\r\n        if (alpha === void 0) { alpha = 0.2; }\r\n        util.assertArgumentsAreTensors({ x: x }, 'leakyRelu');\r\n        return ops.maximum(ops.scalar(alpha).mul(x), x);\r\n    };\r\n    UnaryOps.prelu = function (x, alpha) {\r\n        util.assertArgumentsAreTensors({ x: x, alpha: alpha }, 'prelu');\r\n        var zero = ops.scalar(0);\r\n        return ops.maximum(zero, x).add(alpha.mul(ops.minimum(zero, x)));\r\n    };\r\n    UnaryOps.sigmoid = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'sigmoid');\r\n        var grad = function (dy, saved) {\r\n            var y = saved[0];\r\n            return { x: function () { return dy.mulStrict(y.mul(ops.scalar(1).sub(y))); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend, save) { return save(backend.sigmoid(x)); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.logSigmoid = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'logSigmoid');\r\n        var grad = function (dy) {\r\n            return { x: function () { return dy.mulStrict(x.neg().sigmoid()); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.softplus(x.neg()).neg(); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.softplus = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'softplus');\r\n        var grad = function (dy) {\r\n            return { x: function () { return dy.mulStrict(x.sigmoid()); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.softplus(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.sin = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'sin');\r\n        var grad = function (dy) {\r\n            return { x: function () { return x.toFloat().cos().mulStrict(dy); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.sin(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.cos = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'cos');\r\n        var grad = function (dy) {\r\n            return { x: function () { return x.toFloat().sin().neg().mulStrict(dy); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.cos(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.tan = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'tan');\r\n        var grad = function (dy) {\r\n            return { x: function () { return dy.divStrict(x.cos().square()); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.tan(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.asin = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'asin');\r\n        var grad = function (dy) {\r\n            return {\r\n                x: function () {\r\n                    return dy.divStrict(UnaryOps.sqrt(ops.scalar(1).sub(x.toFloat().square())));\r\n                }\r\n            };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.asin(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.acos = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'acos');\r\n        var grad = function (dy) {\r\n            return {\r\n                x: function () {\r\n                    return dy.divStrict(UnaryOps.sqrt(ops.scalar(1).sub(x.toFloat().square())))\r\n                        .neg();\r\n                }\r\n            };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.acos(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.atan = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'atan');\r\n        var grad = function (dy) {\r\n            return { x: function () { return dy.divStrict(ops.scalar(1).add(x.toFloat().square())); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.atan(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.sinh = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'sinh');\r\n        var grad = function (dy) {\r\n            return { x: function () { return x.toFloat().cosh().mulStrict(dy); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.sinh(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.cosh = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'cosh');\r\n        var grad = function (dy) {\r\n            return { x: function () { return x.toFloat().sinh().mulStrict(dy); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.cosh(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.tanh = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'tanh');\r\n        var grad = function (dy, saved) {\r\n            var y = saved[0];\r\n            return { x: function () { return ops.scalar(1).sub(y.square()).mulStrict(dy); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend, save) { return save(backend.tanh(x)); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.asinh = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'asinh');\r\n        var grad = function (dy) {\r\n            return {\r\n                x: function () {\r\n                    return dy.divStrict(UnaryOps.sqrt(ops.scalar(1).add(x.toFloat().square())));\r\n                }\r\n            };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.asinh(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.acosh = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'acosh');\r\n        var grad = function (dy) {\r\n            return {\r\n                x: function () {\r\n                    return dy.divStrict(UnaryOps.sqrt(x.toFloat().square().sub(ops.scalar(1))));\r\n                }\r\n            };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.acosh(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.atanh = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'atanh');\r\n        var grad = function (dy) {\r\n            return { x: function () { return dy.divStrict(ops.scalar(1).sub(x.toFloat().square())); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.atanh(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.erf = function (x) {\r\n        util.assert(x.dtype === 'int32' || x.dtype === 'float32', 'Input dtype must be `int32` or `float32`.');\r\n        if (x.dtype === 'int32') {\r\n            x = x.toFloat();\r\n        }\r\n        var grad = function (dy) {\r\n            return {\r\n                x: function () {\r\n                    return dy.mulStrict(ops.scalar(2 / Math.sqrt(Math.PI))\r\n                        .mul(x.square().neg().exp()));\r\n                }\r\n            };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.erf(x); }, { x: x }, grad);\r\n    };\r\n    UnaryOps.step = function (x, alpha) {\r\n        if (alpha === void 0) { alpha = 0.0; }\r\n        util.assertArgumentsAreTensors({ x: x }, 'step');\r\n        var grad = function (dy) {\r\n            return { x: function () { return ops.zerosLike(dy); } };\r\n        };\r\n        return ENV.engine.runKernel(function (backend) { return backend.step(x, alpha); }, { x: x }, grad);\r\n    };\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"neg\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"ceil\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"floor\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"sign\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"round\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"exp\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"expm1\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"log\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"log1p\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"sqrt\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"rsqrt\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"square\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"reciprocal\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"abs\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"clipByValue\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"relu\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"elu\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"selu\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"leakyRelu\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"prelu\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"sigmoid\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"logSigmoid\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"softplus\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"sin\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"cos\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"tan\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"asin\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"acos\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"atan\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"sinh\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"cosh\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"tanh\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"asinh\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"acosh\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"atanh\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"erf\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Basic math' }),\r\n        operation\r\n    ], UnaryOps, \"step\", null);\r\n    return UnaryOps;\r\n}());\r\nexport { UnaryOps };\r\n//# sourceMappingURL=unary_ops.js.map","map":"{\"version\":3,\"file\":\"unary_ops.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/ops/unary_ops.ts\"],\"names\":[],\"mappings\":\";AAiBA,OAAO,EAAC,GAAG,EAAC,MAAM,QAAQ,CAAC;AAC3B,OAAO,EAAC,GAAG,EAAC,MAAM,gBAAgB,CAAC;AAEnC,OAAO,KAAK,IAAI,MAAM,SAAS,CAAC;AAChC,OAAO,EAAC,SAAS,EAAC,MAAM,aAAa,CAAC;AACtC,OAAO,KAAK,GAAG,MAAM,OAAO,CAAC;AAC7B,OAAO,EAAC,SAAS,EAAC,MAAM,OAAO,CAAC;AAChC,OAAO,KAAK,SAAS,MAAM,aAAa,CAAC;AAEzC;IAAA;IAo2BA,CAAC;IAt1BQ,YAAG,GAAV,UAA6B,CAAI;QAC/B,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,KAAK,CAAC,CAAC;QAE3C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,EAAE,CAAC,GAAG,EAAE,EAAR,CAAQ,EAAC,CAAC;QAC7B,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IAcM,aAAI,GAAX,UAA8B,CAAI;QAChC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,MAAM,CAAC,CAAC;QAG5C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,EAAjB,CAAiB,EAAC,CAAC;QACtC,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAf,CAAe,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACrE,CAAC;IAcM,cAAK,GAAZ,UAA+B,CAAI;QACjC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,OAAO,CAAC,CAAC;QAI7C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,EAAjB,CAAiB,EAAC,CAAC;QACtC,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAhB,CAAgB,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;IAcM,aAAI,GAAX,UAA8B,CAAI;QAChC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,MAAM,CAAC,CAAC;QAE5C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,EAAjB,CAAiB,EAAC,CAAC;QACtC,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAf,CAAe,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACrE,CAAC;IAeM,cAAK,GAAZ,UAA+B,CAAI;QACjC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,OAAO,CAAC,CAAC;QAI7C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,EAAjB,CAAiB,EAAC,CAAC;QACtC,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAhB,CAAgB,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;IAcM,YAAG,GAAV,UAA6B,CAAI;QAC/B,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,KAAK,CAAC,CAAC;QAE3C,IAAM,GAAG,GAAG,UAAC,EAAK,EAAE,KAAe;YAC1B,IAAA,YAAC,CAAU;YAClB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,EAAE,CAAC,SAAS,CAAC,CAAM,CAAC,EAApB,CAAoB,EAAC,CAAC;QACzC,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CACvB,UAAC,OAAO,EAAE,IAAI,IAAK,OAAA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAApB,CAAoB,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,GAAG,CAAC,CAAC;IACzD,CAAC;IAeM,cAAK,GAAZ,UAA+B,CAAI;QACjC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,OAAO,CAAC,CAAC;QAE7C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAArB,CAAqB,EAAC,CAAC;QAC1C,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAhB,CAAgB,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;IAcM,YAAG,GAAV,UAA6B,CAAI;QAC/B,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,KAAK,CAAC,CAAC;QAE3C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,EAAzB,CAAyB,EAAC,CAAC;QAC9C,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IAeM,cAAK,GAAZ,UAA+B,CAAI;QACjC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,OAAO,CAAC,CAAC;QAE7C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAlC,CAAkC,EAAC,CAAC;QACvD,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAhB,CAAgB,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;IAcM,aAAI,GAAX,UAA8B,CAAI;QAChC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,MAAM,CAAC,CAAC;QAE5C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAnD,CAAmD,EAAC,CAAC;QACxE,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAf,CAAe,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACrE,CAAC;IAeM,cAAK,GAAZ,UAA+B,CAAI;QACjC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,OAAO,CAAC,CAAC;QAE7C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC;gBACL,CAAC,EAAE,cAAM,OAAA,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAA7D,CAA6D;aACvE,CAAC;QACJ,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAhB,CAAgB,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;IAcM,eAAM,GAAb,UAAgC,CAAI;QAClC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,QAAQ,CAAC,CAAC;QAE9C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAA5C,CAA4C,EAAC,CAAC;QACjE,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAjB,CAAiB,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACvE,CAAC;IAcM,mBAAU,GAAjB,UAAoC,CAAI;QACtC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,YAAY,CAAC,CAAC;QAElD,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,EAA9B,CAA8B,EAAC,CAAC;QACnD,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,EAArB,CAAqB,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IAC3E,CAAC;IAcM,YAAG,GAAV,UAA6B,CAAI;QAC/B,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,KAAK,CAAC,CAAC;QAE3C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAlC,CAAkC,EAAC,CAAC;QACvD,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IAgBM,oBAAW,GAAlB,UACI,CAAI,EAAE,YAAoB,EAAE,YAAoB;QAClD,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,aAAa,CAAC,CAAC;QACnD,IAAI,CAAC,MAAM,CACP,CAAC,YAAY,IAAI,YAAY,CAAC,EAC9B,yBAAuB,YAAY,eAAY;aAC3C,gCAA8B,YAAY,OAAI,CAAA,CAAC,CAAC;QAExD,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC;gBAGL,CAAC,EAAE,cAAM,OAAA,EAAE,CAAC,KAAK,CACJ,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;qBAC9B,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,EACjD,SAAS,CAAC,EAAE,CAAC,CAAM,EAHvB,CAGuB;aACjC,CAAC;QACJ,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CACvB,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,YAAY,EAAE,YAAY,CAAC,EAA3C,CAA2C,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACzE,CAAC;IAeM,aAAI,GAAX,UAA8B,CAAI;QAChC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,MAAM,CAAC,CAAC;QAE5C,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;QACnB,CAAC;QACD,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,IAAM,OAAO,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;YACzB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,EAA/B,CAA+B,EAAC,CAAC;QACpD,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAf,CAAe,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACrE,CAAC;IAcM,YAAG,GAAV,UAA6B,CAAI;QAC/B,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,KAAK,CAAC,CAAC;QAE3C,IAAM,IAAI,GAAG,UAAC,EAAK,EAAE,KAAe;YAC3B,IAAA,YAAC,CAAU;YAClB,MAAM,CAAC;gBACL,CAAC,EAAE;oBACC,OAAA,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,EAArB,CAAqB,EAAE,EAAC,EAAE,IAAA,EAAE,CAAC,GAAA,EAAC,CAAM;gBAApE,CAAoE;aACzE,CAAC;QACJ,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CACvB,UAAC,OAAO,EAAE,IAAI,IAAK,OAAA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAApB,CAAoB,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IAC1D,CAAC;IAgBM,aAAI,GAAX,UAA8B,CAAI;QAChC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,MAAM,CAAC,CAAC;QAE5C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC;gBACL,CAAC,EAAE;oBACD,IAAM,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBAEtC,IAAM,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;oBACzD,IAAM,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;oBAE/C,IAAM,kBAAkB,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACzC,IAAM,gBAAgB,GAAG,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;oBAEnE,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,kBAAkB,EAAE,gBAAgB,CAAM,CAAC;gBACpE,CAAC;aACF,CAAC;QACJ,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAf,CAAe,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACrE,CAAC;IAmBM,kBAAS,GAAhB,UAAmC,CAAI,EAAE,KAAW;QAAX,sBAAA,EAAA,WAAW;QAClD,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,WAAW,CAAC,CAAC;QAEjD,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClD,CAAC;IAkBM,cAAK,GAAZ,UAA+B,CAAI,EAAE,KAAQ;QAC3C,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAE,KAAK,OAAA,EAAC,EAAE,OAAO,CAAC,CAAC;QAEpD,IAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC3B,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC;IAcM,gBAAO,GAAd,UAAiC,CAAI;QACnC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,SAAS,CAAC,CAAC;QAE/C,IAAM,IAAI,GAAG,UAAC,EAAK,EAAE,KAAe;YAC3B,IAAA,YAAC,CAAU;YAClB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAzC,CAAyC,EAAC,CAAC;QAC9D,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CACvB,UAAC,OAAO,EAAE,IAAI,IAAK,OAAA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAxB,CAAwB,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IAC9D,CAAC;IAeM,mBAAU,GAAjB,UAAoC,CAAI;QACtC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,YAAY,CAAC,CAAC;QAElD,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC,EAA/B,CAA+B,EAAC,CAAC;QACpD,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CACvB,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAA/B,CAA+B,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IAC7D,CAAC;IAcM,iBAAQ,GAAf,UAAkC,CAAI;QACpC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,UAAU,CAAC,CAAC;QAEhD,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,EAAzB,CAAyB,EAAC,CAAC;QAC9C,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAnB,CAAmB,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACzE,CAAC;IAcM,YAAG,GAAV,UAA6B,CAAI;QAC/B,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,KAAK,CAAC,CAAC;QAE3C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,EAA/B,CAA+B,EAAC,CAAC;QACpD,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IAcM,YAAG,GAAV,UAA6B,CAAI;QAC/B,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,KAAK,CAAC,CAAC;QAE3C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,EAArC,CAAqC,EAAC,CAAC;QAC1D,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IAcM,YAAG,GAAV,UAA6B,CAAI;QAC/B,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,KAAK,CAAC,CAAC;QAE3C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAA9B,CAA8B,EAAC,CAAC;QACnD,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IAcM,aAAI,GAAX,UAA8B,CAAI;QAChC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,MAAM,CAAC,CAAC;QAE5C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC;gBACL,CAAC,EAAE;oBACC,OAAA,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBAApE,CAAoE;aACzE,CAAC;QACJ,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAf,CAAe,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACrE,CAAC;IAcM,aAAI,GAAX,UAA8B,CAAI;QAChC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,MAAM,CAAC,CAAC;QAE5C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC;gBACL,CAAC,EAAE;oBACC,OAAA,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;yBAC/D,GAAG,EAAE;gBADV,CACU;aACf,CAAC;QACJ,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAf,CAAe,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACrE,CAAC;IAcM,aAAI,GAAX,UAA8B,CAAI;QAChC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,MAAM,CAAC,CAAC;QAE5C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,EAArD,CAAqD,EAAC,CAAC;QAC1E,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAf,CAAe,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACrE,CAAC;IAcM,aAAI,GAAX,UAA8B,CAAI;QAChC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,MAAM,CAAC,CAAC;QAE5C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,EAAhC,CAAgC,EAAC,CAAC;QACrD,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAf,CAAe,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACrE,CAAC;IAcM,aAAI,GAAX,UAA8B,CAAI;QAChC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,MAAM,CAAC,CAAC;QAE5C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,EAAhC,CAAgC,EAAC,CAAC;QACrD,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAf,CAAe,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACrE,CAAC;IAcM,aAAI,GAAX,UAA8B,CAAI;QAChC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,MAAM,CAAC,CAAC;QAE5C,IAAM,IAAI,GAAG,UAAC,EAAK,EAAE,KAAe;YAC3B,IAAA,YAAC,CAAU;YAClB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,EAAE,CAAM,EAAhD,CAAgD,EAAC,CAAC;QACrE,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CACvB,UAAC,OAAO,EAAE,IAAI,IAAK,OAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAArB,CAAqB,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IAC3D,CAAC;IAeM,cAAK,GAAZ,UAA+B,CAAI;QACjC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,OAAO,CAAC,CAAC;QAE7C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC;gBACL,CAAC,EAAE;oBACC,OAAA,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBAApE,CAAoE;aACzE,CAAC;QACJ,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAhB,CAAgB,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;IAeM,cAAK,GAAZ,UAA+B,CAAI;QACjC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,OAAO,CAAC,CAAC;QAE7C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC;gBACL,CAAC,EAAE;oBACC,OAAA,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAApE,CAAoE;aACzE,CAAC;QACJ,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAhB,CAAgB,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;IAeM,cAAK,GAAZ,UAA+B,CAAI;QACjC,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,OAAO,CAAC,CAAC;QAE7C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,EAArD,CAAqD,EAAC,CAAC;QAC1E,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAhB,CAAgB,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;IAeM,YAAG,GAAV,UAA6B,CAAI;QAC/B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,KAAK,OAAO,IAAI,CAAC,CAAC,KAAK,KAAK,SAAS,EACpD,2CAA2C,CAAC,CAAC;QAEjD,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC;YACxB,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;QAED,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC;gBACL,CAAC,EAAE;oBACC,OAAA,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;yBACxC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;gBADjC,CACiC;aACtC,CAAC;QACJ,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IAeM,aAAI,GAAX,UAA8B,CAAI,EAAE,KAAW;QAAX,sBAAA,EAAA,WAAW;QAC7C,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,MAAM,CAAC,CAAC;QAG5C,IAAM,IAAI,GAAG,UAAC,EAAK;YACjB,MAAM,CAAC,EAAC,CAAC,EAAE,cAAM,OAAA,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,EAAjB,CAAiB,EAAC,CAAC;QACtC,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,EAAtB,CAAsB,EAAE,EAAC,CAAC,GAAA,EAAC,EAAE,IAAI,CAAC,CAAC;IAC5E,CAAC;IAr1BD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;6BAQT;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;8BAST;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;+BAUT;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;8BAQT;IAeD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;+BAUT;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;6BAUT;IAeD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;+BAQT;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;6BAQT;IAeD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;+BAQT;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;8BAQT;IAeD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;+BAUT;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;gCAQT;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;oCAQT;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;6BAQT;IAgBD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;qCAqBT;IAeD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;8BAYT;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;6BAaT;IAgBD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;8BAoBT;IAmBD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;mCAKT;IAkBD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;+BAMT;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;iCAUT;IAeD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;oCAST;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;kCAQT;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;6BAQT;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;6BAQT;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;6BAQT;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;8BAWT;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;8BAYT;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;8BAQT;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;8BAQT;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;8BAQT;IAcD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;8BAUT;IAeD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;+BAWT;IAeD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;+BAWT;IAeD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;+BAQT;IAeD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;6BAiBT;IAeD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;QACtD,SAAS;8BAST;IACH,eAAC;CAAA,AAp2BD,IAo2BC;SAp2BY,QAAQ\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/ops/unary_ops.d.ts","text":"import { Tensor } from '../tensor';\r\nexport declare class UnaryOps {\r\n    static neg<T extends Tensor>(x: T): T;\r\n    static ceil<T extends Tensor>(x: T): T;\r\n    static floor<T extends Tensor>(x: T): T;\r\n    static sign<T extends Tensor>(x: T): T;\r\n    static round<T extends Tensor>(x: T): T;\r\n    static exp<T extends Tensor>(x: T): T;\r\n    static expm1<T extends Tensor>(x: T): T;\r\n    static log<T extends Tensor>(x: T): T;\r\n    static log1p<T extends Tensor>(x: T): T;\r\n    static sqrt<T extends Tensor>(x: T): T;\r\n    static rsqrt<T extends Tensor>(x: T): T;\r\n    static square<T extends Tensor>(x: T): T;\r\n    static reciprocal<T extends Tensor>(x: T): T;\r\n    static abs<T extends Tensor>(x: T): T;\r\n    static clipByValue<T extends Tensor>(x: T, clipValueMin: number, clipValueMax: number): T;\r\n    static relu<T extends Tensor>(x: T): T;\r\n    static elu<T extends Tensor>(x: T): T;\r\n    static selu<T extends Tensor>(x: T): T;\r\n    static leakyRelu<T extends Tensor>(x: T, alpha?: number): T;\r\n    static prelu<T extends Tensor>(x: T, alpha: T): T;\r\n    static sigmoid<T extends Tensor>(x: T): T;\r\n    static logSigmoid<T extends Tensor>(x: T): T;\r\n    static softplus<T extends Tensor>(x: T): T;\r\n    static sin<T extends Tensor>(x: T): T;\r\n    static cos<T extends Tensor>(x: T): T;\r\n    static tan<T extends Tensor>(x: T): T;\r\n    static asin<T extends Tensor>(x: T): T;\r\n    static acos<T extends Tensor>(x: T): T;\r\n    static atan<T extends Tensor>(x: T): T;\r\n    static sinh<T extends Tensor>(x: T): T;\r\n    static cosh<T extends Tensor>(x: T): T;\r\n    static tanh<T extends Tensor>(x: T): T;\r\n    static asinh<T extends Tensor>(x: T): T;\r\n    static acosh<T extends Tensor>(x: T): T;\r\n    static atanh<T extends Tensor>(x: T): T;\r\n    static erf<T extends Tensor>(x: T): T;\r\n    static step<T extends Tensor>(x: T, alpha?: number): T;\r\n}\r\n"}}

{"code":"import * as tslib_1 from \"tslib\";\r\nimport { ENV } from '../environment';\r\nimport { assert } from '../util';\r\nimport { getModelArtifactsInfoForJSON } from './io_utils';\r\nimport { IORouterRegistry } from './router_registry';\r\nvar BrowserHTTPRequest = (function () {\r\n    function BrowserHTTPRequest(path, requestInit) {\r\n        this.DEFAULT_METHOD = 'POST';\r\n        if (!ENV.get('IS_BROWSER')) {\r\n            throw new Error('browserHTTPRequest is not supported outside the web browser.');\r\n        }\r\n        assert(path != null && path.length > 0, 'URL path for browserHTTPRequest must not be null, undefined or ' +\r\n            'empty.');\r\n        this.path = path;\r\n        if (requestInit != null && requestInit.body != null) {\r\n            throw new Error('requestInit is expected to have no pre-existing body, but has one.');\r\n        }\r\n        this.requestInit = requestInit || {};\r\n    }\r\n    BrowserHTTPRequest.prototype.save = function (modelArtifacts) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var init, weightsManifest, modelTopologyAndWeightManifest, response;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\r\n                            throw new Error('BrowserHTTPRequest.save() does not support saving model topology ' +\r\n                                'in binary formats yet.');\r\n                        }\r\n                        init = Object.assign({ method: this.DEFAULT_METHOD }, this.requestInit);\r\n                        init.body = new FormData();\r\n                        weightsManifest = [{\r\n                                paths: ['./model.weights.bin'],\r\n                                weights: modelArtifacts.weightSpecs,\r\n                            }];\r\n                        modelTopologyAndWeightManifest = {\r\n                            modelTopology: modelArtifacts.modelTopology,\r\n                            weightsManifest: weightsManifest\r\n                        };\r\n                        init.body.append('model.json', new Blob([JSON.stringify(modelTopologyAndWeightManifest)], { type: 'application/json' }), 'model.json');\r\n                        if (modelArtifacts.weightData != null) {\r\n                            init.body.append('model.weights.bin', new Blob([modelArtifacts.weightData], { type: 'application/octet-stream' }), 'model.weights.bin');\r\n                        }\r\n                        return [4, fetch(this.path, init)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        if (response.status === 200) {\r\n                            return [2, {\r\n                                    modelArtifactsInfo: getModelArtifactsInfoForJSON(modelArtifacts),\r\n                                    responses: [response],\r\n                                }];\r\n                        }\r\n                        else {\r\n                            throw new Error(\"BrowserHTTPRequest.save() failed due to HTTP response status \" +\r\n                                (response.status + \".\"));\r\n                        }\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    BrowserHTTPRequest.URL_SCHEMES = ['http://', 'https://'];\r\n    return BrowserHTTPRequest;\r\n}());\r\nexport { BrowserHTTPRequest };\r\nexport var httpRequestRouter = function (url) {\r\n    if (!ENV.get('IS_BROWSER')) {\r\n        return null;\r\n    }\r\n    else {\r\n        for (var _i = 0, _a = BrowserHTTPRequest.URL_SCHEMES; _i < _a.length; _i++) {\r\n            var scheme = _a[_i];\r\n            if (url.startsWith(scheme)) {\r\n                return browserHTTPRequest(url);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n};\r\nIORouterRegistry.registerSaveRouter(httpRequestRouter);\r\nexport function browserHTTPRequest(path, requestInit) {\r\n    return new BrowserHTTPRequest(path, requestInit);\r\n}\r\n//# sourceMappingURL=browser_http.js.map","map":"{\"version\":3,\"file\":\"browser_http.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/io/browser_http.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/io/browser_http.d.ts","text":"import { IORouter } from './router_registry';\r\nimport { IOHandler, ModelArtifacts, SaveResult } from './types';\r\nexport declare class BrowserHTTPRequest implements IOHandler {\r\n    protected readonly path: string;\r\n    protected readonly requestInit: RequestInit;\r\n    readonly DEFAULT_METHOD: string;\r\n    static readonly URL_SCHEMES: string[];\r\n    constructor(path: string, requestInit?: RequestInit);\r\n    save(modelArtifacts: ModelArtifacts): Promise<SaveResult>;\r\n}\r\nexport declare const httpRequestRouter: IORouter;\r\nexport declare function browserHTTPRequest(path: string, requestInit?: RequestInit): IOHandler;\r\n"}}

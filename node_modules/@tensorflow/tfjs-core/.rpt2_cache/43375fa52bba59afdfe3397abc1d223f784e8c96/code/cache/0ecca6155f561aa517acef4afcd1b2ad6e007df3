{"code":"import * as tslib_1 from \"tslib\";\r\nimport { doc } from '../doc';\r\nimport { ENV } from '../environment';\r\nimport * as types from '../types';\r\nimport * as util from '../util';\r\nimport * as broadcast_util from './broadcast_util';\r\nimport { operation } from './operation';\r\nvar LogicalOps = (function () {\r\n    function LogicalOps() {\r\n    }\r\n    LogicalOps.logicalNot = function (x) {\r\n        util.assertArgumentsAreTensors({ x: x }, 'logicalNot');\r\n        util.assert(x.dtype === 'bool', 'Error Array must be of type bool.');\r\n        return ENV.engine.runKernel(function (backend) { return backend.logicalNot(x); }, { x: x });\r\n    };\r\n    LogicalOps.logicalAnd = function (a, b) {\r\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'logicalAnd');\r\n        util.assert(a.dtype === 'bool' && b.dtype === 'bool', 'Error Array must be of type bool.');\r\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\r\n        return ENV.engine.runKernel(function (backend) { return backend.logicalAnd(a, b); }, { a: a, b: b });\r\n    };\r\n    LogicalOps.logicalOr = function (a, b) {\r\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'logicalOr');\r\n        util.assert(a.dtype === 'bool' && b.dtype === 'bool', 'Error Array must be of type bool.');\r\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\r\n        return ENV.engine.runKernel(function (backend) { return backend.logicalOr(a, b); }, { a: a, b: b });\r\n    };\r\n    LogicalOps.logicalXor = function (a, b) {\r\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'logicalXor');\r\n        util.assert(a.dtype === 'bool' && b.dtype === 'bool', 'Error Array must be of type bool.');\r\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\r\n        return LogicalOps.logicalOr(a, b).logicalAnd(LogicalOps.logicalAnd(a, b).logicalNot());\r\n    };\r\n    LogicalOps.where = function (condition, a, b) {\r\n        util.assertArgumentsAreTensors({ condition: condition, a: a, b: b }, 'where');\r\n        util.assert(condition.dtype === 'bool' || a.dtype === 'bool' || b.dtype === 'bool', 'Error Array must be of type bool.');\r\n        util.assertShapesMatch(a.shape, b.shape, 'Error in where: ');\r\n        if (condition.rank === 1) {\r\n            util.assert(condition.shape[0] === a.shape[0], 'The first dimension of `a` must match the size of `condition`.');\r\n        }\r\n        else {\r\n            util.assertShapesMatch(condition.shape, b.shape, 'Error in where: ');\r\n        }\r\n        var dtype = types.upcastType(a.dtype, b.dtype);\r\n        return ENV.engine.runKernel(function (backend) { return backend.where(condition, a, b, dtype); }, { condition: condition, a: a, b: b });\r\n    };\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Logical' }),\r\n        operation\r\n    ], LogicalOps, \"logicalNot\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Logical' }),\r\n        operation\r\n    ], LogicalOps, \"logicalAnd\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Logical' }),\r\n        operation\r\n    ], LogicalOps, \"logicalOr\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Logical' }),\r\n        operation\r\n    ], LogicalOps, \"logicalXor\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Logical' }),\r\n        operation\r\n    ], LogicalOps, \"where\", null);\r\n    return LogicalOps;\r\n}());\r\nexport { LogicalOps };\r\n//# sourceMappingURL=logical_ops.js.map","map":"{\"version\":3,\"file\":\"logical_ops.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/ops/logical_ops.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/ops/logical_ops.d.ts","text":"import { Tensor } from '../tensor';\r\nexport declare class LogicalOps {\r\n    static logicalNot<T extends Tensor>(x: T): T;\r\n    static logicalAnd<T extends Tensor>(a: Tensor, b: Tensor): T;\r\n    static logicalOr<T extends Tensor>(a: Tensor, b: Tensor): T;\r\n    static logicalXor<T extends Tensor>(a: Tensor, b: Tensor): T;\r\n    static where<T extends Tensor>(condition: Tensor, a: T, b: T): T;\r\n}\r\n"}}

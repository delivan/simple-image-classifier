{"code":"import * as tslib_1 from \"tslib\";\r\nimport { doc } from '../doc';\r\nimport { ENV } from '../environment';\r\nimport * as util from '../util';\r\nimport { operation } from './operation';\r\nvar StridedSliceOps = (function () {\r\n    function StridedSliceOps() {\r\n    }\r\n    StridedSliceOps.stridedSlice = function (x, begin, end, strides, beginMask, endMask) {\r\n        if (beginMask === void 0) { beginMask = 0; }\r\n        if (endMask === void 0) { endMask = 0; }\r\n        util.assertArgumentsAreTensors({ x: x }, 'stridedSlice');\r\n        return ENV.engine.runKernel(function (backend) { return backend.stridedSlice(x, begin, end, strides, beginMask, endMask); }, { x: x });\r\n    };\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Operations', subheading: 'Slicing and Joining' }),\r\n        operation\r\n    ], StridedSliceOps, \"stridedSlice\", null);\r\n    return StridedSliceOps;\r\n}());\r\nexport { StridedSliceOps };\r\n//# sourceMappingURL=strided_slice.js.map","map":"{\"version\":3,\"file\":\"strided_slice.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/ops/strided_slice.ts\"],\"names\":[],\"mappings\":\";AAiBA,OAAO,EAAC,GAAG,EAAC,MAAM,QAAQ,CAAC;AAC3B,OAAO,EAAC,GAAG,EAAC,MAAM,gBAAgB,CAAC;AAEnC,OAAO,KAAK,IAAI,MAAM,SAAS,CAAC;AAEhC,OAAO,EAAC,SAAS,EAAC,MAAM,aAAa,CAAC;AAEtC;IAAA;IAyCA,CAAC;IAVQ,4BAAY,GAAnB,UACI,CAAI,EAAE,KAAe,EAAE,GAAa,EAAE,OAAiB,EAAE,SAAa,EACtE,OAAW;QAD8C,0BAAA,EAAA,aAAa;QACtE,wBAAA,EAAA,WAAW;QACb,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,cAAc,CAAC,CAAC;QAEpD,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAChB,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,YAAY,CAC3B,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC,EADpC,CACoC,EAC/C,EAAC,CAAC,GAAA,EAAC,CAAM,CAAC;IACvB,CAAC;IATD;QAFC,GAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,qBAAqB,EAAC,CAAC;QAC/D,SAAS;6CAUT;IACH,sBAAC;CAAA,AAzCD,IAyCC;SAzCY,eAAe\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/rollup/tfjs-core/ops/strided_slice.d.ts","text":"import { Tensor } from '../tensor';\r\nexport declare class StridedSliceOps {\r\n    static stridedSlice<T extends Tensor>(x: T, begin: number[], end: number[], strides: number[], beginMask?: number, endMask?: number): T;\r\n}\r\n"}}
